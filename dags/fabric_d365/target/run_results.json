{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-08-25T09:31:53.828362Z", "invocation_id": "0c436657-071f-49ae-bb47-eddbc2815e11", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:19.264695Z", "completed_at": "2024-08-25T09:29:20.469322Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:20.469322Z", "completed_at": "2024-08-25T09:29:25.908757Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 6.696465730667114, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_addresscontactrole", "compiled": true, "compiled_code": "\n\nselect\n    ll.[Id] as dim_d365_addresscontactrole_sk\n    , ll.recid as addresscontactrole_recid\n    , ll.iscontactinfo\n    , ll.ispostaladdress\n    , ll.name as addresscontactrole_name\n    , ll.type as addresscontactrole_type\n    , ll.partition\n    , ll.[IsDelete]\n    , ll.versionnumber\n    , ll.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticslocationrole\" as ll\n    where ll.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_addresscontactrole\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:19.279827Z", "completed_at": "2024-08-25T09:29:20.730552Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:20.732049Z", "completed_at": "2024-08-25T09:29:26.407007Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 7.189722537994385, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_businessunit", "compiled": true, "compiled_code": "\n\nselect distinct\n    d.[Id] as dim_d365_businessunit_sk\n    , d.d1_businessunit as businessunitid\n    , d.d1_businessunitvalue as businessunitvalue\n    , d1pt.name as businessunit_name\n    , d1.omoperatingunittype\n    , d1.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\n    , concat(upper(d.d1_businessunitvalue), ' - ', coalesce(d1pt.name, '')) as businessunit\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevaluecombination\" as d\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"omoperatingunit\" as d1\n    on d.d1_businessunit = d1.recid\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d1pt\n    on d1.recid = d1pt.recid\n    where d.sysrowversion > 635674010\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_businessunit\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:19.272122Z", "completed_at": "2024-08-25T09:29:20.747822Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:20.748868Z", "completed_at": "2024-08-25T09:29:26.612196Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 7.3976664543151855, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_batchjob", "compiled": true, "compiled_code": "\n\nselect\n    bj.[Id] as dim_d365_batchjob_sk\n    , bj.recid as batchjob_recid\n    , bj.caption\n    , bj.startdatetime\n    , bj.enddatetime\n    , bj.executingby\n    , bj.[IsDelete]\n    , bj.versionnumber\n    , bj.sysrowversion\n    , upper(\n        bj.company\n    ) as batchjob_dataareaid\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"batchjob\" as bj\n    where bj.sysrowversion > 701940354\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_batchjob\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:19.229407Z", "completed_at": "2024-08-25T09:29:20.400013Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:20.400992Z", "completed_at": "2024-08-25T09:29:27.389486Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 8.20272946357727, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_address", "compiled": true, "compiled_code": "\n\nselect\n    a.[Id] as dim_d365_address_sk\n    , a.recid as address_recid\n    , a.address\n    , a.city\n    , a.cityrecid\n    , a.county\n    , a.district\n    , a.districtname\n    , a.isprivate as address_isprivate\n    , a.latitude\n    , a.longitude\n    , a.state\n    , a.street\n    , a.validfrom\n    , a.validto\n    , a.zipcode\n    , a.postbox\n    , a.dxc_exportdeliveryterms\n    , a.dxc_deliveryzone\n    , a.dxc_locationcode\n    , a.partition\n    , a.[IsDelete]\n    , a.versionnumber\n    , a.sysrowversion\n    , upper(a.countryregionid) as countryregionid\n    , case\n        when\n            a.validto >= getdate()\n            or a.validto is null then 1\n        else 0\n    end as isvalid\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticspostaladdress\" as a\n    where a.sysrowversion > 387376987\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:26.642186Z", "completed_at": "2024-08-25T09:29:26.958761Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:26.959756Z", "completed_at": "2024-08-25T09:29:31.839052Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.211744785308838, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_chartofaccounts", "compiled": true, "compiled_code": "\n\nselect\n    ac.[Id] as dim_d365_chartofaccounts_sk\n    , ac.recid as chartofaccount_recid\n    , ac.mainaccountid as chartofaccount\n    , ac.name as chartofaccount_name\n    , ac.accountcategoryref\n    , acc.accountcategory\n    , acc.accounttype\n    , ac.[IsDelete]\n    , ac.versionnumber\n    , ac.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"mainaccount\" as ac\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"mainaccountcategory\" as acc\n    on ac.accountcategoryref = acc.accountcategoryref\n    where ac.sysrowversion > 166381072\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_chartofaccounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:26.431834Z", "completed_at": "2024-08-25T09:29:26.739882Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:26.739882Z", "completed_at": "2024-08-25T09:29:32.323859Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.907334089279175, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_charge", "compiled": true, "compiled_code": "\n\nselect\n    m.[Id] as dim_d365_charge_sk\n    , m.recid as charge_recid\n    , m.markupcode as chargecode\n    , m.maxamount\n    , m.moduletype\n    , m.taxitemgroup\n    , m.txt as charge_desc\n    , m.customerledgerdimension\n    , m.custtype\n    , m.custposting\n    , cast(nullif(json_value(markuptable_enum.enumtranslation, CONCAT('$.custposting.\"', m.custposting,'\"')), '') as varchar(2048)) as customer_posting\n    , m.vendorledgerdimension\n\n    , m.vendtype\n    , m.vendposting\n    , cast(nullif(json_value(markuptable_enum.enumtranslation, CONCAT('$.vendposting.\"', m.vendposting,'\"')), '') as varchar(2048)) as vendor_posting\n    , m.partition\n    , m.[IsDelete]\n    , m.versionnumber\n    , m.sysrowversion\n    , case\n        when m.moduletype = 1 then 'Account Receivable'\n        when m.moduletype = 2 then 'Account Payable'\n        else ''\n    end as chargetype\n    , upper(m.dataareaid) as charge_dataareaid\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"markuptable\" as m\ncross apply stage.f_get_enum_translation('markuptable', '1033') as markuptable_enum\n    where m.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_charge\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:27.440636Z", "completed_at": "2024-08-25T09:29:28.494086Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:28.496087Z", "completed_at": "2024-08-25T09:29:33.287984Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 5.856420040130615, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_city", "compiled": true, "compiled_code": "\n\nselect\n    la.[Id] as dim_d365_city_sk\n    , la.recid as city_recid\n    , la.citykey\n    , la.description as city_desc\n    , la.name as city_name\n    , la.stateid\n    , la.partition\n    , la.[IsDelete]\n    , la.versionnumber\n    , la.sysrowversion\n    , upper(la.countryregionid) as countryregionid\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticsaddresscity\" as la\n    where la.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_city\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:25.958382Z", "completed_at": "2024-08-25T09:29:27.245850Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:27.246034Z", "completed_at": "2024-08-25T09:29:34.357818Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 8.412501096725464, "adapter_response": {"_message": "OK", "rows_affected": 1}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_category", "compiled": true, "compiled_code": "\n\nwith ctcat as (\n    select\n        c.[Id] as dim_d365_category_sk\n        , c.category_recid\n        , c.parentcategory\n        , c.category_level\n        , c.category_name\n        , c.categoryhierarchy\n        , c.category_path\n        , c.sysrowversion\n        , c.versionnumber\n        , case when c.[IsDelete] = 0 then null else c.[IsDelete] end as [IsDelete]\n    from \"lh_staging\".\"dbo\".\"stg_d365_category\" as c\n        where c.sysrowversion > 296197212\n    \n\n)\n\n, ctcat1 as (\n    select\n        ctcat.*\n        , pt.name as parentcategory_name\n        , cath.name as category_hierarchy\n        , replace(ctcat.category_path, ' -> ', '*') as category_path_level\n    from ctcat as ctcat\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecorescategory\" as pt on ctcat.parentcategory = pt.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecorescategoryhierarchy\" as cath on ctcat.categoryhierarchy = cath.recid\n)\n\n, ctsplit as (\n    select\n        splitdata.dim_d365_category_sk\n        , splitdata.category_path_level\n        ,\n            max(case when splitdata.rn = 1 then splitdata.cat_value end) as category_path_level_1,\n            max(case when splitdata.rn = 2 then splitdata.cat_value end) as category_path_level_2,\n            max(case when splitdata.rn = 3 then splitdata.cat_value end) as category_path_level_3,\n            max(case when splitdata.rn = 4 then splitdata.cat_value end) as category_path_level_4,\n            max(case when splitdata.rn = 5 then splitdata.cat_value end) as category_path_level_5,\n            max(case when splitdata.rn = 6 then splitdata.cat_value end) as category_path_level_6,\n            max(case when splitdata.rn = 7 then splitdata.cat_value end) as category_path_level_7\n    from (\n        select\n            ctcat1.dim_d365_category_sk\n            , ctcat1.category_path\n            , ctcat1.category_path_level\n            , value as cat_value -- noqa: RF02\n            , row_number() over (partition by ctcat1.dim_d365_category_sk order by (select null as nill)) as rn\n        from ctcat1 as ctcat1\n        cross apply string_split(ctcat1.category_path_level, '*')\n    ) as splitdata\n    group by splitdata.dim_d365_category_sk, splitdata.category_path_level\n)\n\nselect\n    ctcat1.dim_d365_category_sk\n    , ctcat1.category_recid\n    , ctcat1.parentcategory\n    , ctcat1.category_level\n    , ctcat1.category_name\n    , ctcat1.categoryhierarchy\n    , ctcat1.category_path\n    , ctcat1.parentcategory_name\n    , ctcat1.category_hierarchy\n    , ctcat1.category_path_level\n    , ctcat1.[IsDelete]\n    , ctcat1.sysrowversion\n    , ctcat1.versionnumber\n    , ctsplit.category_path_level_1\n    , ctsplit.category_path_level_2\n    , ctsplit.category_path_level_3\n    , ctsplit.category_path_level_4\n    , ctsplit.category_path_level_5\n    , ctsplit.category_path_level_6\n    , ctsplit.category_path_level_7\n    from ctcat1\ninner join ctsplit on ctcat1.dim_d365_category_sk = ctsplit.dim_d365_category_sk\nunion all\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(-999999 as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_d365_category_sk\n    , -999999 as category_recid\n    , -1 as parentcategory\n    , -1 as category_level\n    , '' as category_name\n    , -1 as categoryhierarchy\n    , '' as category_path\n    , '' as parentcategory_name\n    , '' as category_hierarchy\n    , '' as category_path_level\n    , null as [IsDelete]\n    , 0 as sysrowversion\n    , 0 as versionnumber\n    , null as category_path_level_1\n        , null as category_path_level_2\n        , null as category_path_level_3\n        , null as category_path_level_4\n        , null as category_path_level_5\n        , null as category_path_level_6\n        , null as category_path_level_7\n        ", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_category\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:31.863025Z", "completed_at": "2024-08-25T09:29:32.181339Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:32.183344Z", "completed_at": "2024-08-25T09:29:36.502013Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 4.6567699909210205, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_company", "compiled": true, "compiled_code": "\n\nselect\n    comp.[Id] as dim_d365_company_sk\n    , comp.company_recid\n    , comp.party_recid\n    , comp.parentorganization\n    , comp.company_dataarea\n    , comp.parent_co_dataarea\n    , comp.company\n    , comp.company_name\n    , comp.parent_company_name\n    , comp.company_path\n    , comp.coregnum\n    , comp.bank\n    , comp.hierarchytypename\n    , comp.company_path_level\n    , comp.versionnumber\n    , comp.sysrowversion\n    , case when [IsDelete] = 'false' then null else [IsDelete] end as [IsDelete]\nfrom \"lh_staging\".\"dbo\".\"stg_d365_company\" as comp\n    where sysrowversion > 37210940\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_company\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:32.359389Z", "completed_at": "2024-08-25T09:29:33.382888Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:33.384969Z", "completed_at": "2024-08-25T09:29:38.876649Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 6.527211427688599, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_contact", "compiled": true, "compiled_code": "\n\nselect\n    lea.[Id] as dim_d365_contact_sk\n    , lea.recid as contact_recid\n    , lea.countryregioncode\n    , lea.description\n    , lea.location\n    , lea.locator\n    , lea.locatorextension\n    , lea.electronicaddressroles\n    , lea.isprimary\n    , lea.ismobilephone\n    , pl.party as party_recid\n    , cast(nullif(json_value(logisticselectronicaddress_enum.enumtranslation, CONCAT('$.type.\"', lea.type,'\"')), '') as varchar(2048)) as logisticselectronicaddress_methodtype\n    , lea.[IsDelete]\n    , lea.versionnumber\n    , lea.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as lea\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticslocation\" as ll on lea.location = ll.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartylocation\" as pl on ll.recid = pl.location\ncross apply stage.f_get_enum_translation('logisticselectronicaddress', '1033') as logisticselectronicaddress_enum\n    where lea.sysrowversion > 500827854\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_contact\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:33.310229Z", "completed_at": "2024-08-25T09:29:34.444443Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:34.446446Z", "completed_at": "2024-08-25T09:29:39.525578Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 6.228175640106201, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_costcenter", "compiled": true, "compiled_code": "\n\nselect distinct\n    d.[Id] as dim_d365_costcenter_sk\n    , d.d2_costcenter as costcenterid\n    , d.d2_costcentervalue as costcentervalue\n    , d2pt.name as costcenter_name\n    , d2.omoperatingunittype\n    , d2.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\n    , concat(upper(d.d2_costcentervalue), ' - ', coalesce(d2pt.name, '')) as costcenter\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevaluecombination\" as d\ninner join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"omoperatingunit\" as d2\n    on d.d2_costcenter = d2.recid\ninner join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d2pt\n    on cast(d2.recid as varchar) = cast(d2pt.recid as varchar)\n    where d.sysrowversion > 635674010\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_costcenter\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:34.381615Z", "completed_at": "2024-08-25T09:29:35.458538Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:35.459536Z", "completed_at": "2024-08-25T09:29:39.761712Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.398059606552124, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_costgroup", "compiled": true, "compiled_code": "\n\nselect\n    cg.[Id] as dim_d365_costgroup_sk\n    , cg.recid as costgroup_recid\n    , cg.costgroupid\n    , cg.name as costgroup_name\n    , cg.dxc_bomfinishedgooditem\n    , cg.dxc_bominputitem\n    , cast(nullif(json_value(bomcostgroup_enum.enumtranslation, CONCAT('$.costgrouptype.\"', cg.costgrouptype,'\"')), '') as varchar(2048)) as costgrouptype\n    , cg.[IsDelete]\n    , cg.versionnumber\n    , cg.sysrowversion\n    , upper(cg.dataareaid) as costgroup_dataareaid\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"bomcostgroup\" as cg\ncross apply stage.f_get_enum_translation('bomcostgroup', '1033') as bomcostgroup_enum\n    where cg.sysrowversion > 166425420\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_costgroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:36.533407Z", "completed_at": "2024-08-25T09:29:37.812430Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:37.814561Z", "completed_at": "2024-08-25T09:29:41.869320Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.3489744663238525, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_currency", "compiled": true, "compiled_code": "\n\nselect\n    c.[Id] as dim_d365_currency_sk\n    , c.recid as currency_recid\n    , c.currencycode\n    , c.symbol\n    , c.roundingprecision\n    , c.txt as currency_name\n    , c.partition\n    , c.[IsDelete]\n    , c.versionnumber\n    , c.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"currency\" as c\n    where c.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_currency\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:39.542928Z", "completed_at": "2024-08-25T09:29:40.435913Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:40.437916Z", "completed_at": "2024-08-25T09:29:44.420049Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 4.9367101192474365, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_customergroup", "compiled": true, "compiled_code": "\n\nselect\n    cg.[Id] as dim_d365_customergroup_sk\n    , cg.recid as customergroup_recid\n    , cg.custgroup as customergroup\n    , cg.defaultdimension\n    , cg.name as customergroup_name\n    , cg.paymtermid\n    , cg.partition\n    , cg.[IsDelete]\n    , cg.versionnumber\n    , cg.sysrowversion\n    , upper(cg.dataareaid) as customergroup_dataareaid\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"custgroup\" as cg\n    where cg.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_customergroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:39.790688Z", "completed_at": "2024-08-25T09:29:40.692974Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:40.694969Z", "completed_at": "2024-08-25T09:29:44.556020Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 4.779022932052612, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_deliverymode", "compiled": true, "compiled_code": "\n\nselect\n    dlv.[Id] as dim_d365_deliverymode_sk\n    , dlv.recid as deliverymode_recid\n    , dlv.code as deliverymode\n    , dlv.txt as deliverymode_desc\n    , dlv.partition\n    , dlv.[IsDelete]\n    , dlv.versionnumber\n    , dlv.sysrowversion\n    , upper(dlv.dataareaid) as deliverymode_dataareaid\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dlvmode\" as dlv\n    where dlv.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_deliverymode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:41.891300Z", "completed_at": "2024-08-25T09:29:42.780690Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:42.782637Z", "completed_at": "2024-08-25T09:29:46.580317Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 4.698933362960815, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_department", "compiled": true, "compiled_code": "\n\nselect distinct\n    d3.[Id] as dim_d365_department_sk\n    , d3.recid as departmentid\n    , d3.value as departmentvalue\n    , d3.description as department_name\n    , d3.partition\n    , d3.[IsDelete]\n    , d3.versionnumber\n    , d3.sysrowversion\n    , concat(upper(d3.value), ' - ', coalesce(d3.description, '')) as department\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevaluecombination\" as d\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionfinancialtag\" as d3 on d.d3_department = d3.recid\n    where d3.sysrowversion > 635674010\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_department\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:38.894775Z", "completed_at": "2024-08-25T09:29:39.837511Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:39.838572Z", "completed_at": "2024-08-25T09:29:49.797842Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 10.927228927612305, "adapter_response": {"_message": "OK", "rows_affected": 7}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_customer", "compiled": true, "compiled_code": "\n\nwith ctcust as (\n    select\n        c.[Id] as dim_d365_customer_sk\n        , c.recid as customer_recid\n        , c.salesdistrictid\n\n        , sdg.description as salesdistrictgroupdesc\n        , sdg.dataareaid as sdgdataareaid\n\n        , c.party\n        , c.accountnum\n        , coalesce(c.invoiceaccount, c.accountnum) as invoiceaccount\n        , c.ouraccountnum\n        , c.creditmax\n        , c.custgroup\n        , upper(c.dataareaid) as dataareaid\n        , c.dlvmode\n        , c.dlvterm\n        , c.lineofbusinessid\n        , c.paymmode\n        , c.pricegroup\n\n        , c.salespoolid\n        , c.segmentid\n        , sgm.description as segment_description\n        , c.statisticsgroup\n        , c.subsegmentid\n        , c.currency as customer_currency\n        , c.partycountry\n        , c.partystate\n        , c.orgid\n\n        , pt.recid as party_recid\n        , pt.isactive\n\n        , coy.coregnum\n        , pt.partynumber\n        , pt.orgnumber\n        , pt.name\n        , pt.namealias\n        , pt.namesequence\n        , pt.namecontrol\n        , pt.primarycontactphone\n        , pt.primaryaddresslocation\n        , pt.numberofemployees\n        , pt.dataarea\n        , pt.createddatetime\n        , pt.createdby\n        , pt.modifieddatetime\n        , pt.modifiedby\n        , c.partition\n        , c.blocked as blockedid\n        , cast(nullif(json_value(custtable_enum.enumtranslation, CONCAT('$.blocked.\"', c.blocked,'\"')), '') as varchar(2048)) as blocked\n\n        , c.defaultdimension as defaultdimension_recid\n        , c.[IsDelete]\n        , c.versionnumber\n        , c.sysrowversion\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"custtable\" as c\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vw_dirpartytable\" as pt on c.party = pt.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"companyinfo\" as coy on c.dataareaid = coy.dataareaid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"smmbusrelsalesdistrictgroup\" as sdg on c.salesdistrictid = sdg.salesdistrictid and upper(c.dataareaid) = upper(sdg.dataareaid)\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"smmbusrelsegmentgroup\" as sgm on c.segmentid = sgm.segmentid and upper(c.dataareaid) = upper(sgm.dataareaid)\n    cross apply stage.f_get_enum_translation('custtable', '1033') as custtable_enum\n        where c.sysrowversion > 382797246\n    \n)\n\n, custfinal as (\n    select\n        d365cg.dim_d365_customer_sk\n        , d365cg.customer_recid\n        , d365cg.accountnum\n        , d365cg.invoiceaccount\n        , d365cg.ouraccountnum\n        , d365cg.orgnumber\n        , d365cg.name\n        , d365cg.party as party_recid\n        , d365cg.custgroup\n        , d365cg.salesdistrictid\n        , d365cg.salesdistrictgroupdesc\n        , d365cg.blocked\n        , d365cg.pricegroup\n        , d365cg.defaultdimension_recid\n        , d365cg.dataareaid as customer_dataareaid\n        , d365cg.[IsDelete]\n        , d365cg.versionnumber\n        , d365cg.sysrowversion\n    from ctcust as d365cg\n    union\n    select\n        navcg.dim_d365_customer_sk\n        , navcg.customer_recid\n        , navcg.accountnum\n        , navcg.invoiceaccount\n        , navcg.ouraccountnum\n        , navcg.orgnumber\n        , navcg.name\n        , navcg.party_recid\n        , navcg.custgroup\n        , navcg.salesdistrictid\n        , navcg.salesdistrictgroupdesc\n        , navcg.blocked\n        , navcg.pricegroup\n        , navcg.defaultdimension_recid\n        , navcg.customer_dataareaid\n        , navcg.[IsDelete]\n        , navcg.versionnumber\n        , navcg.sysrowversion\n    from \"dwh_sanford\".\"stage\".\"stg_nav_dummy_custgroup\" as navcg\n)\n\nselect\n    cu.*\n    , pcu.name as parent_customer_name\n    , cu.invoiceaccount as parent_customer_account\nfrom custfinal as cu\nleft join\n    custfinal as pcu\n    on\n        cu.invoiceaccount = pcu.accountnum\n        and cu.customer_dataareaid = pcu.customer_dataareaid", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:44.501513Z", "completed_at": "2024-08-25T09:29:44.523501Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:44.524509Z", "completed_at": "2024-08-25T09:29:50.943529Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 6.462113618850708, "adapter_response": {"_message": "OK", "rows_affected": 11251}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_enum", "compiled": true, "compiled_code": "\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast([OptionSetName] as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast([ExternalValue] as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast([LocalizedLabel] as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast([Option] as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n as dim_d365_enum_sk\n    , [EntityName]\n    , [OptionSetName]\n    , concat([EntityName], [OptionSetName]) as enumname\n    , [ExternalValue] as enum_item_name\n    , [Option] as enum_item_value\n    , [LocalizedLabel] as enumitemlabel\n    , [IsUserLocalizedLabel]\n    , [LocalizedLabelLanguageCode]\n    , [GlobalOptionSetName]\n    , [createdonpartition]\n    , null as [IsDelete]\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_enum\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:46.596344Z", "completed_at": "2024-08-25T09:29:46.602415Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:46.603368Z", "completed_at": "2024-08-25T09:29:51.332775Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 4.746607542037964, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_fishstate", "compiled": true, "compiled_code": "\n\nwith uniquevalues as (\n    select distinct mserp_dxc_stateentityid\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_statetable\"\n)\n\n, convertedvalues as (\n    select\n        mserp_dxc_stateentityid\n        , row_number() over (order by mserp_dxc_stateentityid) as rownum\n    from uniquevalues\n)\n\n, recids as (\n    select\n        mserp_dxc_stateentityid\n        , cast('5637146076' + cast(rownum as varchar) as bigint) as recid\n    from convertedvalues\n)\n\nselect\n    a.mserp_dxc_stateentityid as dim_d365_fishstate_sk\n    , b.recid as fishstate_recid\n    , a.mserp_dxc_statename as fishstatecode\n    , a.mserp_dxc_mpiitemdesc as fishstate\n    , a.mserp_dxc_mpistate as mpistate\n    , null as [partition]\n    , lower(a.mserp_dataareaid) as fishstate_dataareaid\n    , null as [IsDelete]\n    , 0 as versionnumber\n    , 0 as sysrowversion\nfrom \"lh_d365fnodxc\".\"dbo\".\"dxc_statetable\" as a\ninner join recids as b on a.mserp_dxc_stateentityid = b.mserp_dxc_stateentityid\nwhere a.[IsDelete] is null", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_fishstate\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:44.580687Z", "completed_at": "2024-08-25T09:29:45.681162Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:45.682063Z", "completed_at": "2024-08-25T09:29:52.075170Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 7.507193326950073, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_financialdimensionaccount", "compiled": true, "compiled_code": "\n\nselect\n    *\n    , 'gl_category_l1' as gl_category_l1\n    , 'gl_category_l2' as gl_category_l2\n    , 'gl_category_l3' as gl_category_l3\n    , concat(\n        coalesce(mainaccountname, '')\n        , '-', coalesce(d1_businessunit_name, '')\n        , '-', coalesce(d2_costcenter_name, '')\n        , '-', coalesce(d4_function_name, '')\n        , '-', coalesce(d3_department_name, '')\n        , '-', coalesce(d5_customer_name, '')\n        , '-', coalesce(d6_vendor_name, '')\n        , '-', coalesce(d7_projectvalue, '')\n        , '-', coalesce(d8_legalentityvalue, '')\n    ) as dimension_ledgeraccount_text\n\nfrom (\n    select\n        d.[Id] as dim_d365_financialdimensionaccount_sk\n        , d.recid as financialdimensionaccount_recid\n        , d.mainaccount\n        , d.mainaccountvalue\n        , m.name as mainaccountname\n        , d.d1_businessunit\n        , d.d1_businessunitvalue\n        , d1pt.name as d1_businessunit_name\n        , d.d2_costcenter\n\n        , d.d2_costcentervalue\n        , d2pt.name as d2_costcenter_name\n        , d.d4_function\n\n        , d.d4_functionvalue\n        , d4.description as d4_function_name\n        , d.d3_department\n\n        , d.d3_departmentvalue\n        , d3.description as d3_department_name\n        , d.d5_customer\n\n\n\n        , d.d5_customervalue\n        , d5pt.name as d5_customer_name\n        , d.d6_vendor\n\n        , d.d6_vendorvalue\n        , d6pt.name as d6_vendor_name\n        , d.d7_project\n\n        , d.d7_projectvalue\n        , d.d8_legalentity\n        , d.d8_legalentityvalue\n        , d.partition\n        , d.[IsDelete]\n        , d.versionnumber\n        , d.sysrowversion\n        , concat(\n            coalesce(d.mainaccountvalue, '')\n            , '-', coalesce(d.d1_businessunitvalue, '')\n            , '-', coalesce(d.d2_costcentervalue, '')\n            , '-', coalesce(d.d4_functionvalue, '')\n            , '-', coalesce(d.d3_departmentvalue, '')\n            , '-', coalesce(d.d5_customervalue, '')\n            , '-', coalesce(d.d6_vendorvalue, '')\n            , '-', coalesce(d.d7_projectvalue, '')\n            , '-', coalesce(d.d8_legalentityvalue, '')\n        ) as dimension_ledgeraccount\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevaluecombination\" as d\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"mainaccount\" as m on d.mainaccount = m.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"omoperatingunit\" as d1 on d.d1_businessunit = d1.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d1pt on convert(varchar, d1.recid) = convert(varchar, d1pt.recid)\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"omoperatingunit\" as d2 on d.d2_costcenter = d2.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d2pt on convert(varchar, d2.recid) = convert(varchar, d2pt.recid)\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionfinancialtag\" as d3 on d.d3_department = d3.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionfinancialtag\" as d4 on d.d4_function = d4.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"custtable\" as d5 on d.d5_customer = d5.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d5pt on convert(varchar, d5.party) = convert(varchar, d5pt.recid)\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendtable\" as d6 on d.d6_vendor = d6.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d6pt on convert(varchar, d6.party) = convert(varchar, d6pt.recid)\n        where d.sysrowversion > 635674010\n    \n) as x", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionaccount\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:49.839129Z", "completed_at": "2024-08-25T09:29:51.018545Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:51.024590Z", "completed_at": "2024-08-25T09:29:55.643685Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.817546129226685, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_function", "compiled": true, "compiled_code": "\n\nwith ct as (\n    select distinct\n        d4.recid as functionid\n        , d4.value as functionvalue\n        , d4.description as function_name\n        , d4.partition\n        , d4.[IsDelete]\n        , d4.versionnumber\n        , d4.sysrowversion\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevaluecombination\" as d\n    inner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionfinancialtag\" as d4 on d.d4_function = d4.recid\n        where d4.sysrowversion > 635674010\n    \n)\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(ct.functionid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_d365_function_sk\n    , ct.*\nfrom ct", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_function\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:52.097960Z", "completed_at": "2024-08-25T09:29:52.349831Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:52.351833Z", "completed_at": "2024-08-25T09:29:57.316138Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.229063510894775, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_inventitemprice", "compiled": true, "compiled_code": "\n\nselect\n    ip.[Id] as dim_d365_inventitemprice_sk\n    , ip.recid\n    , ip.costingtype\n    , ip.itemid\n    , ip.markup\n    , ip.priceallocatemarkup\n    , ip.pricecalcid\n    , ip.priceqty\n    , ip.pricetype\n    , ip.priceunit\n    , ip.activationdate\n    , ip.createddatetime\n    , ip.unitid\n    , ip.versionid\n    , ip.dataareaid\n    , ip.dxc_inventitempricesim\n    , ip.[IsDelete]\n    , ip.versionnumber\n    , ip.sysrowversion\n    , round(ip.price, 2) as price\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventitemprice\" as ip\n    where ip.sysrowversion > 647948712", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_inventitemprice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:50.979473Z", "completed_at": "2024-08-25T09:29:50.999475Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:51.003473Z", "completed_at": "2024-08-25T09:29:57.360947Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 6.393350601196289, "adapter_response": {"_message": "OK", "rows_affected": 3170}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_haultrawltrip", "compiled": true, "compiled_code": "\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(mserp_primaryfield as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_d365_haultrawltrip_sk\n\n    , mserp_primaryfield as recid\n\n    , mserp_tripid as tripid\n    , mserp_haultrawlid as haultrawlid\n    , null as recversion\n    , null as modifieddatetime\n    , null as modifiedby\n    , null as createddatetime\n    , null as createdby\n    , mserp_catchharvestareaid as catchharvestareaid\n    , mserp_faoareaid as faoareaid\n    , mserp_fishinggearid as fishinggearid\n    , mserp_landedportid as landedportid\n    , mserp_mscid as mscid\n    , upper(mserp_dataareaid) as haultrawltrip_dataareaid\n    , null as [partition]\n    , null as [IsDelete]\n    , 0 as versionnumber\n    , 0 as sysrowversion\nfrom \"lh_d365fnodxc\".\"dbo\".\"dxc_haultrawl\"\n-- where [IsDelete] is null", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_haultrawltrip\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:51.357871Z", "completed_at": "2024-08-25T09:29:52.726497Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:52.727469Z", "completed_at": "2024-08-25T09:29:57.615939Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 6.284912109375, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_inventdim", "compiled": true, "compiled_code": "\n\nselect\n    id.[Id] as dim_d365_inventdim_sk\n    , id.recid as inventdim_recid\n    , id.inventdimid\n    , id.inventbatchid\n    , id.inventlocationid\n    , id.wmslocationid\n    , id.inventserialid\n    , id.inventsiteid\n    , id.inventstatusid\n    , id.inventversionid\n    , id.inventstyleid\n    , id.licenseplateid\n    , id.wmspalletid\n    , id.createddatetime\n    , '' as partitionid\n    , id.[IsDelete]\n    , id.versionnumber\n    , id.sysrowversion\n    , upper(id.dataareaid) as inventdim_dataareaid\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventdim\" as id\n    where id.sysrowversion > 642053192", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_inventdim\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:55.662707Z", "completed_at": "2024-08-25T09:29:55.977315Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:55.978919Z", "completed_at": "2024-08-25T09:29:59.544749Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 3.891812562942505, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_itembuyergroup", "compiled": true, "compiled_code": "\n\nselect\n    ibg.[Id] as dim_d365_itembuyergroup_sk\n    , ibg.recid as itembuyergroup_recid\n    , ibg.[group] as itembuyergroupid\n    , ibg.description as itembuyergroup_name\n    , ibg.partition\n    , ibg.[IsDelete]\n    , ibg.versionnumber\n    , ibg.sysrowversion\n    , upper(ibg.dataareaid) as itembuyergroup_dataareaid\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventbuyergroup\" as ibg\n    where ibg.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_itembuyergroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:57.654710Z", "completed_at": "2024-08-25T09:29:57.910994Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:57.912006Z", "completed_at": "2024-08-25T09:30:01.714277Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 4.071703672409058, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_itemstoragedimensiongroup", "compiled": true, "compiled_code": "\n\nselect\n    sdg.[Id] as dim_d365_itemstoragedimensiongroup_sk\n    , sdg.recid as itemstoragedimensiongroup_recid\n    , sdg.name as itemstoragedimensiongroupid\n    , sdg.description as itemstoragedimensiongroup_name\n    , sdg.[IsDelete]\n    , sdg.versionnumber\n    , sdg.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresstoragedimensiongroup\" as sdg\n    where sdg.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_itemstoragedimensiongroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:57.473375Z", "completed_at": "2024-08-25T09:29:58.321910Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:58.322908Z", "completed_at": "2024-08-25T09:30:02.575137Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 5.117880344390869, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_itemgroup", "compiled": true, "compiled_code": "\n\nselect\n    iig.[Id] as dim_d365_itemgroup_sk\n    , iig.recid as itemgroup_recid\n    , iig.itemgroupid\n    , iig.name as itemgroup_name\n    , iig.dxc_israwmaterial\n    , iig.partition\n    , iig.[IsDelete]\n    , upper(iig.dataareaid) as itemgroup_dataareaid\n    , iig.versionnumber\n    , iig.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventitemgroup\" as iig\n    where iig.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_itemgroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:57.333094Z", "completed_at": "2024-08-25T09:29:58.228901Z"}, {"name": "execute", "started_at": "2024-08-25T09:29:58.229913Z", "completed_at": "2024-08-25T09:30:03.139215Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.84429407119751, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_itemcoveragegroup", "compiled": true, "compiled_code": "\n\nselect\n    r.[Id] as dim_d365_itemcoveragegroup_sk\n    , r.recid as itemcoveragegroup_recid\n    , r.reqgroupid as itemcoveragegroupid\n    , r.name as itemcoveragegroup_name\n    , r.actioncalc\n    , r.actiontimefence\n    , r.capacitytimefence\n    , r.covperiod\n    , r.covrule\n    , r.covtimefence\n    , r.explosiontimefence\n    , r.futurescalc\n    , r.masterplantimefence\n    , r.maxnegativedays\n    , r.maxpositivedays\n    , upper(r.dataareaid) as itemcoveragegroup_dataareaid\n    , r.partition\n    , r.[IsDelete]\n    , r.versionnumber\n    , r.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"reqgroup\" as r\n    where r.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_itemcoveragegroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:29:59.568246Z", "completed_at": "2024-08-25T09:30:00.484078Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:00.485577Z", "completed_at": "2024-08-25T09:30:04.612432Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.060111999511719, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_itemtrackingdimensiongroup", "compiled": true, "compiled_code": "\n\nselect\n    tdg.[Id] as dim_d365_itemtrackingdimensiongroup_sk\n    , tdg.recid as itemtrackingdimensiongroup_recid\n    , tdg.name as itemtrackingdimensiongroupid\n    , tdg.description as itemtrackingdimensiongroup_name\n    , tdg.captureserial\n    , tdg.isserialatconsumptionenabled\n    , tdg.isserialnumbercontrolenabled\n    , tdg.[IsDelete]\n    , tdg.versionnumber\n    , tdg.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecorestrackingdimensiongroup\" as tdg\n    where tdg.sysrowversion > 284750164", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_itemtrackingdimensiongroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:01.735328Z", "completed_at": "2024-08-25T09:30:02.027629Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:02.030232Z", "completed_at": "2024-08-25T09:30:05.909174Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 4.1982715129852295, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_job", "compiled": true, "compiled_code": "\n\nselect\n    j.[Id] as dim_d365_job_sk\n    , j.recid as job_recid\n    , j.jobid\n    , j.partition\n    , j.recversion\n    , j.[IsDelete]\n    , j.versionnumber\n    , j.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmjob\" as j\n    where j.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_job\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:03.202583Z", "completed_at": "2024-08-25T09:30:04.058433Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:04.061435Z", "completed_at": "2024-08-25T09:30:09.080928Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.9115495681762695, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_loadtemplate", "compiled": true, "compiled_code": "\n\n/* LoadTemplate for TEU's */\nselect\n    wlt.[Id] as dim_d365_loadtemplate_sk\n    , wlt.recid as loadtemplate_recid\n    , wlt.loadtemplateid\n    , wlt.equipmentcode\n    , wlt.loadheight\n    , wlt.loaddepth\n    , wlt.loadwidth\n    , wlt.loadmaxvolume\n    , wlt.loadmaxweight\n    /* ISO Equipmentcode determines length\n    -- 1st digit 2 = 20ft, 4 = 40ft\n    -- 2nd digit is height\n    -- chars 3 & 4 are type G general purpose, R refrigerated, T Tank\n    */\n    , case\n        when left(wlt.equipmentcode, 1) = '2' then 1\n        when left(wlt.equipmentcode, 1) = '4' then 2\n    end as teu\n    , upper(wlt.dataareaid) as loadtemplate_dataareaid\n    , wlt.versionnumber\n    , wlt.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsloadtemplate\" as wlt\n    where wlt.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_loadtemplate\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:05.954723Z", "completed_at": "2024-08-25T09:30:05.970442Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:05.974406Z", "completed_at": "2024-08-25T09:30:12.095385Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 6.177680492401123, "adapter_response": {"_message": "OK", "rows_affected": 8193}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_pdsbatchattrib_enum", "compiled": true, "compiled_code": "\n\nwith uniquevalues as (\n    select distinct mserp_dxc_pdsitembatchattributeenumerationvalueentityid\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_pdsitembatchattributeenumerationvalueentity\"\n)\n\n, convertedvalues as (\n    select\n        mserp_dxc_pdsitembatchattributeenumerationvalueentityid\n        , row_number() over (order by mserp_dxc_pdsitembatchattributeenumerationvalueentityid) as rownum\n    from uniquevalues\n)\n\n, recids as (\n    select\n        mserp_dxc_pdsitembatchattributeenumerationvalueentityid\n        , cast('5637146076' + cast(rownum as varchar) as bigint) as recid\n    from convertedvalues\n)\n\nselect\n    p.mserp_dxc_pdsitembatchattributeenumerationvalueentityid as dim_d365_pdsbatchattrib_enum_sk\n    , r.recid\n    , p.mserp_enumerationvalue as pdsattrib_enum_value\n    , p.mserp_itembatchattributeid\n    , p.mserp_dxc_pdsbatchattribenumdescription as pdsbatchattrib_enum_desc\n    , p.mserp_dxc_configid as configid\n    , p.mserp_dxc_speciescode as speciescode\n    , upper(p.mserp_dataareaid) as pdsbatchattrib_enum_dataareaid\nfrom \"lh_d365fnodxc\".\"dbo\".\"dxc_pdsitembatchattributeenumerationvalueentity\" as p\ninner join recids as r on p.mserp_dxc_pdsitembatchattributeenumerationvalueentityid = r.mserp_dxc_pdsitembatchattributeenumerationvalueentityid", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_pdsbatchattrib_enum\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:04.638545Z", "completed_at": "2024-08-25T09:30:04.971073Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:04.974077Z", "completed_at": "2024-08-25T09:30:14.022360Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 9.396174669265747, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_party", "compiled": true, "compiled_code": "\n\nselect\n    pt.[Id] as dim_d365_party_sk\n    , pt.recid as party_recid\n    , vpt.isactive\n    , comp.coregnum\n    , pt.partynumber\n    , pt.name\n    , pt.namealias\n    , vpt.namesequence\n    , vpt.namecontrol\n    , pt.primarycontactphone\n    , pt.primaryaddresslocation\n    , vpt.numberofemployees\n    , vpt.dataarea as party_dataareaid\n    , pt.createddatetime\n    , pt.createdby\n    , pt.modifieddatetime\n    , pt.modifiedby\n    , lea_ph.locator as primary_ph\n\n    , lea_ph.description as primary_ph_desc\n    , lea_ph.locatorextension as primary_ph_ext\n    , lea_ph.electronicaddressroles as primary_ph_roles\n    , lea_f.locator as primary_fax\n\n    , lea_f.description as primary_fax_desc\n    , lea_f.locatorextension as primary_fax_ext\n    , lea_f.electronicaddressroles as primary_fax_roles\n    , lea_e.locator as primary_email\n\n    , lea_e.description as primary_email_desc\n    , lea_e.electronicaddressroles as primary_email_roles\n    , pt.partition\n\n    , null as [IsDelete]\n    , coalesce(vpt.orgnumber, vpt.professionalsuffix) as orgnumber\n    , pt.versionnumber\n    , pt.sysrowversion\n\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as pt\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vw_dirpartytable\" as vpt on pt.recid = vpt.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"companyinfo\" as comp on pt.recid = comp.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as lea_ph on pt.primarycontactphone = lea_ph.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as lea_f on pt.primarycontactfax = lea_f.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as lea_e on pt.primarycontactemail = lea_e.recid\n    where pt.sysrowversion > 500805519", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_party\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:09.129308Z", "completed_at": "2024-08-25T09:30:10.203521Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:10.208781Z", "completed_at": "2024-08-25T09:30:16.093583Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 6.987814903259277, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_pdsbatchattribute", "compiled": true, "compiled_code": "\n\nselect\n    attr.[Id] as dim_d365_pdsbatchattribute_sk\n    , attr.recid as pdsbatchattribute_recid\n    , attr.itemid\n    , attr.pdsbatchattribid\n    , attr.[IsDelete]\n    , attr.partition\n    , upper(attr.inventbatchid) as inventbatchid\n    , case\n        when b.pdsbatchattribtype != 5 then attr.pdsbatchattribvalue\n        else convert(varchar, convert(date, dateadd(day, convert(int, attr.pdsbatchattribvalue), '1900-01-01')), 105)\n    end as pdsbatchattribvalue\n    , upper(attr.dataareaid) as pdsbatchattribute_dataareaid\n    , attr.versionnumber\n    , attr.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"pdsbatchattributes\" as attr\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"pdsbatchattrib\" as b on attr.pdsbatchattribid = b.pdsbatchattribid and b.[IsDelete] is null and upper(attr.dataareaid) = upper(b.dataareaid)\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as e on b.pdsbatchattribtype = e.[Option] and e.[OptionSetName] = 'pdsbatchattribtype' and e.[EntityName] = 'pdsbatchattrib'\n    where attr.sysrowversion > 642744099", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_pdsbatchattribute\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:02.596605Z", "completed_at": "2024-08-25T09:30:02.908075Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:02.909092Z", "completed_at": "2024-08-25T09:30:16.268547Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 13.690572023391724, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_load", "compiled": true, "compiled_code": "\n\nwith ld as (\n    select\n        wlt.[Id] as dim_d365_load_sk\n        , wlt.recid as load_recid\n        , wlt.destinationpostaladdress\n        , wlt.originpostaladdress\n        , wlt.loadid\n        , wlt.loadreferencenum\n        , wlt.loadstatus as loadstatusid\n        , els.[LocalizedLabel] as loadstatus\n        , wlt.loadtemplateid\n\n\n        /* , wt.TEU --Twenty Foot Equivalent Unit - 1 for a 20' container, 2 for a 40' */\n        , case\n            when left(wt.equipmentcode, 1) = '2' then 1\n            when left(wt.equipmentcode, 1) = '4' then 2\n        end as teu\n        , wlt.loadpaysfreight\n        , wlt.carriercode\n        , wlt.carrierservicecode\n        , wlt.accountnum\n        , wlt.bookingnum\n        /* , wlt.ordernum incorrect represntation of column can have Transfer Orders as well as Sales Orders */\n        , st.salesid\n        , wlt.carnumber\n        , wlt.custvendref\n        , wlt.destinationname\n        , wlt.dxc_loadinglocationcode as loadinglocationcode\n        , ld.description as loadinglocation\n        , wlt.dxc_dischargelocationcode as dischargelocationcode\n        , disch.description as dischargelocation\n        , wlt.dxc_dispatchlocationcode as dispatchlocationcode\n        , desp.description as dispatchlocation\n        , wlt.dxc_destinationlocationcode as destinationlocationcode\n        , dest.description as destinationlocation\n        , wlt.dxc_transhipmentlocationcode as transhipmentlocationcode\n        , trans.description as transhipmentlocation\n        , wlt.vesselname\n        , wlt.voyagenum\n        , eld.[LocalizedLabel] as loaddirection\n        , wlt.dxc_vesselcode as vesselcode\n        , wlt.tractornumber as feeder_vessel_name\n        , wlt.carnumber as feeder_voyage_number\n        , wlt.dxc_containernumber as containernumber\n        , wlt.shippingcontainerid\n        , wlt.dxc_sealnumber as sealnumber\n        , wlt.dxc_noofpallets as noofpallets  /* count of LP's in dxc_pallets */\n        , wlt.dxc_noofpacks as noofpacks      /* sum of WHSLoadLine.dxc_noofpacks */\n        , wlt.dxc_pallets as pallets          /* string of LP's in form {\"0000000001600073\", \"0000000001600080\"} */\n        , wlt.actualgrossweight\n        , wlt.dxc_actualgrossweight\n        , wlt.actualnetweight\n        , wlt.loadnetweight\n        , wlt.actualtareweight\n        , wlt.dxc_transportationmethod as transportationmethod\n        , case when wlt.dxc_confirmedcedoarrivaldate in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.dxc_confirmedcedoarrivaldate end as confirmedcedoarrivaldate\n        , case when wlt.dxc_requestedcedoarrivaldate in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.dxc_requestedcedoarrivaldate end as requestedcedoarrivaldate\n        /* confirmeddischargeportdate = 'ETA Final destination' in sales reporting */\n        , case when wlt.dxc_confirmeddischargeportdate in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.dxc_confirmeddischargeportdate end as confirmeddischargeportdate\n        /* eta = 'Estimated Departure - Feeder POA' in sales reporting */\n        , case when wlt.eta in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.eta end as eta\n        , wlteta.newzealandtime as eta_nzt\n        , case when wlt.etd in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.etd end as etd\n        , wltetd.newzealandtime as etd_nzt\n        , case when wlt.cutoffutcdatetime in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.cutoffutcdatetime end as cutoffutcdatetime\n        , wltcutoffutcdatetime.newzealandtime as cutoffdatetime_nzt\n        , case when wlt.lastupdateutcdatetime in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.lastupdateutcdatetime end as lastupdatedatetime\n        , wltlastupdateutcdatetime.newzealandtime as lastupdatedatetime_nzt\n        , case when wlt.loadarrivalutcdatetime in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.loadarrivalutcdatetime end as loadarrivaldatetime\n        , wltloadarrivalutcdatetime.newzealandtime as loadarrivaldatetime_nzt\n        , case when wlt.loadschedshiputcdatetime in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.loadschedshiputcdatetime end as loadschedshipdatetime\n        , wltloadschedshiputcdatetime.newzealandtime as loadschedshipdatetime_nzt\n        , case when wlt.loadshipconfirmutcdatetime in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.loadshipconfirmutcdatetime end as loadshipconfirmdatetime\n        , wltloadshipconfirmutcdatetime.newzealandtime as loadshipconfirmdatetime_nzt\n        /* sailutcdatetime = 'Estimated Departure - CEDO' in sales reporting */\n        , case when wlt.sailutcdatetime in ('1900-01-01', '1900-01-01 00:00:00.000', '2154-12-31', '2154-12-31 23:59:59.000') then null else wlt.sailutcdatetime end as saildatetime\n        , wltsailutcdatetime.newzealandtime as saildatetime_nzt\n\n        , wlt.lateshipreasoncode\n        , wlt.invalid\n        , wlt.inventsiteid as siteid\n        , s.name as site_name\n        , wlt.inventlocationid as warehouseid\n        , w.name as warehouse_name\n        , upper(wlt.dataareaid) as load_dataareaid\n        , wlt.[IsDelete]\n        , wlt.versionnumber\n        , wlt.sysrowversion\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsloadtable\" as wlt\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventlocation\"\n            as w\n        on wlt.inventlocationid = w.inventlocationid\n            and upper(wlt.dataareaid) = upper(w.dataareaid)\n            and w.[IsDelete] is null and wlt.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventsite\"\n            as s\n        on wlt.inventsiteid = s.siteid\n            and upper(wlt.dataareaid) = upper(s.dataareaid)\n            and s.[IsDelete] is null and wlt.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n            as els\n        on lower(els.[OptionSetName]) = lower('loadstatus')\n            and wlt.loadstatus = els.[Option]\n            and wlt.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n            as eld\n        on lower(eld.[OptionSetName]) = lower('loaddirection')\n            and wlt.loaddirection = eld.[Option]\n            and wlt.[IsDelete] is null\n\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsloadtemplate\"\n            as wt\n        on wlt.loadtemplateid = wt.loadtemplateid\n            and upper(wlt.dataareaid) = upper(wt.dataareaid)\n            and wt.[IsDelete] is null\n\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"intrastatport\"\n            as dest\n        on wlt.dxc_destinationlocationcode = dest.portid\n            and dest.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"intrastatport\"\n            as desp\n        on wlt.dxc_dispatchlocationcode = desp.portid\n            and desp.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"intrastatport\"\n            as ld\n        on wlt.dxc_loadinglocationcode = ld.portid\n            and ld.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"intrastatport\"\n            as disch\n        on wlt.dxc_dischargelocationcode = disch.portid\n            and disch.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"intrastatport\"\n            as trans\n        on wlt.dxc_transhipmentlocationcode = trans.portid\n            and trans.[IsDelete] is null\n\n    /* To get actual SalesID */\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"salestable\"\n            as st\n        on wlt.ordernum = st.salesid\n            and upper(wlt.dataareaid) = upper(st.dataareaid)\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.eta) as wlteta\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.etd) as wltetd\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.cutoffutcdatetime) as wltcutoffutcdatetime\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.lastupdateutcdatetime) as wltlastupdateutcdatetime\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.loadarrivalutcdatetime) as wltloadarrivalutcdatetime\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.loadschedshiputcdatetime) as wltloadschedshiputcdatetime\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.loadshipconfirmutcdatetime) as wltloadshipconfirmutcdatetime\n    cross apply dwh_sanford.dbo.f_convert_utc_to_nzt(wlt.sailutcdatetime) as wltsailutcdatetime\n        where wlt.sysrowversion > 562458597\n\n)\n\nselect\n    dim_d365_load_sk\n    , load_recid\n    , destinationpostaladdress\n    , originpostaladdress\n    , loadid\n    , loadreferencenum\n    , loadstatusid\n    , loadstatus\n    , loadtemplateid\n    , teu\n    , loadpaysfreight\n    , carriercode\n    , carrierservicecode\n    , accountnum\n    , bookingnum\n    , salesid\n    , carnumber\n    , custvendref\n    , destinationname\n    , loadinglocationcode\n    , loadinglocation\n    , dischargelocationcode\n    , dischargelocation\n    , dispatchlocationcode\n    , dispatchlocation\n    , destinationlocationcode\n    , destinationlocation\n    , transhipmentlocationcode\n    , transhipmentlocation\n    , vesselname\n    , voyagenum\n    , loaddirection\n    , vesselcode\n    , feeder_vessel_name\n    , feeder_voyage_number\n    , containernumber\n    , shippingcontainerid\n    , sealnumber\n    , noofpallets\n    , noofpacks\n    , pallets\n    , actualgrossweight\n    , dxc_actualgrossweight\n    , actualnetweight\n    , loadnetweight\n    , actualtareweight\n    , transportationmethod\n    , confirmedcedoarrivaldate\n    , requestedcedoarrivaldate\n    , confirmeddischargeportdate\n    , confirmeddischargeportdate as eta_final_destination_date\n    , eta\n    , eta_nzt\n    , eta_nzt as estimated_departure_feeder_poa\n    , etd\n    , etd_nzt\n    , cutoffutcdatetime\n    , cutoffdatetime_nzt\n    , lastupdatedatetime\n    , lastupdatedatetime_nzt\n    , loadarrivaldatetime\n    , loadarrivaldatetime_nzt\n    , loadarrivaldatetime_nzt as cut_off_date_poa\n    , loadschedshipdatetime\n    , loadschedshipdatetime_nzt\n    , loadshipconfirmdatetime\n    , loadshipconfirmdatetime_nzt\n    , saildatetime\n    , saildatetime_nzt\n    , saildatetime_nzt as estimated_departure_cedo\n    , lateshipreasoncode\n    , invalid\n    , siteid\n    , site_name\n    , warehouseid\n    , warehouse_name\n    , load_dataareaid\n    , [IsDelete]\n    , versionnumber\n    , sysrowversion\nfrom ld", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_load\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:14.039296Z", "completed_at": "2024-08-25T09:30:14.328049Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:14.331077Z", "completed_at": "2024-08-25T09:30:19.839865Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.816418170928955, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_postcode", "compiled": true, "compiled_code": "\n\nselect\n    l.[Id] as dim_d365_postcode_sk\n    , l.recid as postcode_recid\n    , l.city\n    , l.cityalias\n    , l.cityrecid\n    , l.district\n    --county,\n    , l.districtname\n    , l.streetname\n    , l.state\n    , l.zipcode as postcode\n    , l.partition\n    , l.[IsDelete]\n    , upper(l.countryregionid) as countryregionid\n    , l.versionnumber\n    , l.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticsaddresszipcode\" as l\n    where l.sysrowversion > 290743754", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_postcode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:12.161499Z", "completed_at": "2024-08-25T09:30:13.004289Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:13.010625Z", "completed_at": "2024-08-25T09:30:20.051911Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 7.92380166053772, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_position", "compiled": true, "compiled_code": "\n\nselect\n    p.[Id] as dim_d365_position_sk\n    , p.recid as position_recid\n    , pd.recid as positiondetail_recid\n    , pd.job as job_recid\n\n    , p.positionid\n    , pd.description\n    , j.jobid\n    , t.titleid\n    , ou.omoperatingunitnumber as businessunit\n\n    , pt.typeid as positiontypeid\n    , pt.description as positiontype\n\n    , pdvalidfrom.newzealandtime as validfrom_nzt\n    , pdvalidto.newzealandtime as validto_nzt\n    , p.partition\n\n    , p.recversion\n    , p.[IsDelete]\n    , case when convert(date, pdvalidfrom.newzealandtime) <= convert(date, getdate()) and convert(date, pdvalidto.newzealandtime) > convert(date, getdate()) then 1 else 0 end as isvalid\n\n    , p.versionnumber\n    , p.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmposition\" as p\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmpositiondetail\" as pd on p.recid = pd.position and pd.[IsDelete] is null\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmpositiontype\" as pt on pd.positiontype = pt.recid and pt.[IsDelete] is null\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmjob\" as j on pd.job = j.recid and j.[IsDelete] is null\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmtitle\" as t on pd.title = t.recid and t.[IsDelete] is null\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"omoperatingunit\" as ou on pd.department = ou.recid and ou.[IsDelete] is null\ncross apply dbo.f_convert_utc_to_nzt(pd.validfrom) as pdvalidfrom\ncross apply dbo.f_convert_utc_to_nzt(pd.validto) as pdvalidto\n    where p.sysrowversion > 550186693", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_position\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:16.314892Z", "completed_at": "2024-08-25T09:30:17.066916Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:17.067917Z", "completed_at": "2024-08-25T09:30:22.237410Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 5.940810441970825, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_projectcategory", "compiled": true, "compiled_code": "\n\nselect \n    pc.[Id] as dim_d365_projectcategory_sk\n    , pc.categoryid\n    , pc.name as category_name\n    , pc.categorygroupid\n    , pc.active\n    , upper(pc.dataareaid) projectcategory_dataareaid\n    , pc.partition\n    , pc.IsDelete\n    , pc.versionnumber\n    , pc.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"projcategory\" pc\n    where pc.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_projectcategory\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:16.137401Z", "completed_at": "2024-08-25T09:30:17.025264Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:17.028991Z", "completed_at": "2024-08-25T09:30:26.091093Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 9.989801406860352, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_productionorder", "compiled": true, "compiled_code": "\n\nselect\n    pt.[Id] as dim_d365_productionorder_sk\n    , pt.recid as productionorder_recid\n    , pt.prodid\n    , pt.dxc_parentprodid as parentprodid\n    , pt.prodpoolid\n    , eppt.[LocalizedLabel] as prodpostingtype\n    , eps.[LocalizedLabel] as prodstatus\n    , epbs.[LocalizedLabel] as backorderstatus\n    , pt.dxc_salesid as salesid\n    , pt.dxc_salesinventtransid as salesinventtransid\n    , sl.qtyordered as salesline_qtyordered\n    , pt.bomid\n    , pt.collectreflevel\n    , pt.collectrefprodid\n    , pt.latestscheddirection\n    , pt.schedstatus\n    , pt.inventdimid\n    , pt.inventrefid\n    , pt.inventreftransid\n    , pt.inventtransid\n    , pt.itemid\n    , pt.qtycalc\n    , pt.qtysched\n    , pt.qtystup\n    , pt.remaininventphysical\n    , pt.dxc_salescarriercode as salescarriercode\n    , pt.dxc_salespoolid as salespoolid\n    , pt.dxc_packagingunit as packagingunit\n    , pt.dxc_packagingqty as packagingqty\n    , case when pt.dxc_saleslinenumber = 0 then null else pt.dxc_saleslinenumber end as saleslinenumber\n    , upper(sl.salesunit) as salesline_unit\n    , round(case when upper(sl.salesunit) = 'LB' then sl.qtyordered * 0.45359237 else sl.qtyordered end, 3) as salesline_qtyordered_kg\n    , convert(date, pt.bomdate) as bomdate\n    , convert(date, pt.calcdate) as calcdate\n    , case when convert(date, pt.dlvdate) = '1900-01-01' then null\n        else convert(datetime2(0), concat(convert(varchar(10), convert(date, pt.dlvdate), 120), ' ', convert(varchar(8), dateadd(second, pt.dlvtime, 0), 108)))\n    end as deliverydatetime\n    , case when convert(date, pt.finisheddate) = '1900-01-01' then null else convert(date, pt.finisheddate) end as finisheddate\n    , convert(datetime2(0), concat(convert(varchar(10), convert(date, pt.latestscheddate), 120), ' ', convert(varchar(8), dateadd(second, pt.latestschedtime, 0), 108))) as latestscheduled_datetime\n    , case when convert(date, pt.scheddate) = '1900-01-01' then null else convert(date, pt.scheddate) end as scheddate\n    , case when convert(date, pt.schedend) = '1900-01-01' then null else convert(date, pt.schedend) end as schedenddate\n    , case when convert(date, pt.schedstart) = '1900-01-01' then null else convert(date, pt.schedstart) end as schedstartdate\n    , convert(time(0), dateadd(second, pt.schedfromtime, 0)) as schedfromtime\n    , convert(time(0), dateadd(second, pt.schedtotime, 0)) as schedtotime\n    , case when convert(date, pt.realdate) = '1900-01-01' then null else convert(date, pt.realdate) end as realdate\n    , case when convert(date, pt.releaseddate) = '1900-01-01' then null else convert(date, pt.releaseddate) end as releaseddate\n    , case when convert(date, pt.dlvdate) > '1900-01-01' then convert(date, pt.dlvdate)\n        else convert(date, pt.releaseddate)\n    end as reportdate\n    , coalesce(eirt.[LocalizedLabel], 'None') as inventreftype\n    , upper(pt.dataareaid) as prod_dataareaid\n    , pt.versionnumber\n    , pt.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"prodtable\" as pt\n\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"salesline\"\n        as sl\n    on pt.dxc_salesid = sl.salesid\n        and pt.dxc_saleslinenumber = sl.linenum\n        and pt.dataareaid = sl.dataareaid\n        and sl.[IsDelete] is null\n\n/* ProdStatus -> ProdStatus */\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as eps\n    on eps.[OptionSetName] = 'prodstatus'\n        and pt.prodstatus = eps.[Option]\n        and eps.[EntityName] = 'prodtable'\n/* backorderstatus -> ProdBackStatus */\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as epbs\n    on epbs.[OptionSetName] = 'backorderstatus'\n        and pt.backorderstatus = epbs.[Option]\n        and epbs.[EntityName] = 'prodtable'\n/* ProdPostingType -> ProdPostingType */\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as eppt\n    on eppt.[OptionSetName] = 'prodpostingtype'\n        and pt.prodpostingtype = eppt.[Option]\n        and eppt.[EntityName] = 'prodtable'\n/* InventRefType -> InventRefType */\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as eirt\n    on eirt.[OptionSetName] = 'inventreftype'\n        and pt.inventreftype = eirt.[Option]\n        and eirt.[EntityName] = 'prodtable'\n    where pt.sysrowversion > 641937519", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_productionorder\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:19.870368Z", "completed_at": "2024-08-25T09:30:20.253720Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:20.256994Z", "completed_at": "2024-08-25T09:30:26.556939Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 6.698867082595825, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_projgroup", "compiled": true, "compiled_code": "\n\nselect\n    pr.[Id] as dim_d365_projgroup_sk\n    , pr.recid\n    , pr.projgroupid\n    , pr.name\n    , eprt.[LocalizedLabel] as projgrouptype\n    , pr.costtranscost\n    , pr.empltranscost\n    , pr.invoiceposting\n    , pr.itemtranscost\n    , pr.ledgerposting\n    , pr.projlinepropertysearch\n    , pr.projtype\n    , pr.partition\n    , pr.recversion\n    , pr.dxc_analysisfielddisplaycontrolid\n    , pr.[IsDelete]\n    , concat(pr.projgroupid, ' - ', pr.name) as projgroup_desc\n    , upper(pr.dataareaid) as projgroup_dataareaid\n    , pr.versionnumber\n    , pr.sysrowversion\n\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"projgroup\" as pr\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as eprt on eprt.[OptionSetName] = 'projtype'\n    and pr.projtype = eprt.[Option]\n    and eprt.[EntityName] = 'projgroup'\n    where pr.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_projgroup\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:20.077229Z", "completed_at": "2024-08-25T09:30:20.959525Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:20.967525Z", "completed_at": "2024-08-25T09:30:28.170673Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 8.105659484863281, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_shipment", "compiled": true, "compiled_code": "\n\nwith utcbasedata as (\n    select\n        wst.[Id] as dim_d365_shipment_sk\n        , wst.recid as shipment_recid\n        , wst.shipmentid\n        , wst.shipmentstatus as shipmentstatusid\n        , ess.[LocalizedLabel] as shipmentstatus\n        , wst.accountnum\n        , wst.address\n        , ad.city\n        , wst.carriercode\n        , wst.carrierservicecode\n        , wst.customerref\n        , wst.deliveryname\n        , wst.dlvtermid\n\n        , wst.loadid\n        , wst.ordernum\n        , wst.modecode\n        , eld.[LocalizedLabel] as loaddirection\n        , wst.inventsiteid as siteid\n\n        , s.name as site_name\n        --, CONVERT_TIMEZONE('UTC', 'Pacific/Auckland', case when wst.dropoffutcdatetime = '1900-01-01 00:00:00.000' then null else wst.dropoffutcdatetime end) as dropoffdatetime_nzt\n        , wst.inventlocationid as warehouseid\n        --, CONVERT_TIMEZONE('UTC', 'Pacific/Auckland', case when wst.shipconfirmutcdatetime = '1900-01-01 00:00:00.000' then null else wst.shipconfirmutcdatetime end) as shipconfirmdatetime_nzt\n        , w.name as warehouse_name\n        --, CONVERT_TIMEZONE('UTC', 'Pacific/Auckland', case when wst.shipmentarrivalutcdatetime = '1900-01-01 00:00:00.000' then null else wst.shipmentarrivalutcdatetime end) as shipmentarrivaldatetime_nzt\n\n        , wst.[IsDelete]\n        , upper(ad.countryregionid) as countryregionid\n        , case when wst.dropoffutcdatetime = '1900-01-01 00:00:00.000' then null else wst.dropoffutcdatetime end as dropoffdatetime\n        , case when wst.shipconfirmutcdatetime = '1900-01-01 00:00:00.000' then null else wst.shipconfirmutcdatetime end as shipconfirmdatetime\n        , case when wst.shipmentarrivalutcdatetime = '1900-01-01 00:00:00.000' then null else wst.shipmentarrivalutcdatetime end as shipmentarrivaldatetime\n        , upper(wst.dataareaid) as shipment_dataareaid\n        , wst.versionnumber\n        , wst.sysrowversion\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsshipmenttable\" as wst\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventlocation\"\n            as w\n        on wst.inventlocationid = w.inventlocationid\n            and upper(wst.dataareaid) = upper(w.dataareaid)\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventsite\"\n            as s\n        on wst.inventsiteid = s.siteid\n            and upper(wst.dataareaid) = upper(s.dataareaid)\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n            as ess\n        on ess.[OptionSetName] = 'shipmentstatus'\n            and wst.shipmentstatus = ess.[Option]\n            and ess.[EntityName] = 'whsshipmenttable'\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n            as eld\n        on eld.[OptionSetName] = 'loaddirection'\n            and wst.loaddirection = eld.[Option]\n            and eld.[EntityName] = 'whsshipmenttable'\n\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticspostaladdress\"\n            as ad\n        on wst.deliverypostaladdress = ad.recid\n            and ad.[IsDelete] is null\n        where wst.sysrowversion > 562458606\n)\n\nselect\n    ut.*\n    , dropoff.newzealandtime as dropoffdatetime_nzt\n    , shipconfirm.newzealandtime as shipconfirmdatetime_nzt\n    , shipmentarrival.newzealandtime as shipmentarrivaldatetime_nzt\nfrom utcbasedata as ut\ncross apply dbo.f_convert_utc_to_nzt(ut.dropoffdatetime) as dropoff\ncross apply dbo.f_convert_utc_to_nzt(ut.shipconfirmdatetime) as shipconfirm\ncross apply dbo.f_convert_utc_to_nzt(ut.shipmentarrivaldatetime) as shipmentarrival", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_shipment\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:22.263043Z", "completed_at": "2024-08-25T09:30:23.223959Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:23.224983Z", "completed_at": "2024-08-25T09:30:29.103070Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 6.89260196685791, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_signinglimitpolicyrule", "compiled": true, "compiled_code": "\n\nselect\n    spr.[Id] as dim_d365_signinglimitpolicyrule_sk\n    , spr.recid as syspolicyrule_recid\n    , sp.recid as syspolicy_recid\n    , sp.name as syspolicyname\n    , sp.description as syspolicydescription\n\n    , ept.[LocalizedLabel] as policytype\n    , ehp.[LocalizedLabel] as hierarchypurpose\n\n    , sprt.includeparentrules\n    , sprt.name as ruletypename\n    , sprt.ruleformname\n\n    , case when /* spr.validfromtzid = 37001 */ 1=1 then sprvf.newzealandtime else spr.validfrom end as validfrom_nzt\n    , case when /* spr.validtotzid = 37001   */ 1=1 then sprvt.newzealandtime else spr.validto end as validto_nzt\n    , case\n        when\n            case when/*  spr.validfromtzid = 37001 */ 1=1 then sprvf.newzealandtime else spr.validfrom end <= convert(date, getdate())\n            and\n            case when/*  spr.validtotzid = 37001 */ 1=1 then sprvt.newzealandtime else spr.validto end > convert(date, getdate())\n            then 1\n        else 0\n    end as isvalid\n    , sp.[IsDelete]\n    , sp.versionnumber\n    , sp.sysrowversion\n\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"syspolicy\" as sp\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"syspolicytype\" as spt\n    on sp.policytype = spt.recid\n        and spt.[IsDelete] is null\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"syspolicyrule\" as spr\n    on sp.recid = spr.policy\n        and spr.[IsDelete] is null\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"syspolicyruletype\" as sprt\n    on spr.policyruletype = sprt.recid\n        and sprt.[IsDelete] is null\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as ehp\n    on spt.hierarchypurpose = ehp.[Option]\n        and ehp.[OptionSetName] = 'hierarchypurpose'\n        and ehp.[EntityName] = 'syspolicytype'\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as ept\n    on spt.policytype = ept.[Option]\n        and ept.[OptionSetName] = 'policytype'\n        and ept.[EntityName] = 'syspolicytype'\n\ncross apply dbo.f_convert_utc_to_nzt(spr.validfrom) as sprvf\ncross apply dbo.f_convert_utc_to_nzt(spr.validto) as sprvt\n    where sp.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_signinglimitpolicyrule\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:26.577801Z", "completed_at": "2024-08-25T09:30:27.417227Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:27.421372Z", "completed_at": "2024-08-25T09:30:32.137775Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.569878339767456, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_state", "compiled": true, "compiled_code": "\n\nselect\n    las.[Id] as dim_d365_state_sk\n    , las.recid as state_recid\n    , las.name as state_name\n    , las.stateid\n    , las.partition\n    , upper(las.countryregionid) as countryregionid\n    , las.[IsDelete]\n    , las.versionnumber\n    , las.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticsaddressstate\" as las\n    where las.sysrowversion > 0", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_state\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:26.143919Z", "completed_at": "2024-08-25T09:30:26.758516Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:26.759640Z", "completed_at": "2024-08-25T09:30:32.295089Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 6.176758527755737, "adapter_response": {"_message": "OK", "rows_affected": 1}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_site", "compiled": true, "compiled_code": "\n\nwith navision as (\n    select\n        \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast('999999' as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast('NAV999' as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n as dim_d365_site_sk\n        , 999999 as site_recid\n        , 'NAV999' as siteid\n        , 'Navision not migrated' as site_name\n        , 'SANF' as site_dataareaid\n        , null as timezone\n        , null as defaultdimension\n        , null as defaultinventstatusid\n        , null as dxc_defaultdimension\n        , 0 as [IsDelete]\n        , 0 as versionnumber\n        , 0 as sysrowversion\n)\n\nselect\n    st.[Id] as dim_d365_site_sk\n    , st.recid as site_recid\n    , st.siteid\n    , st.name as site_name\n    , upper(st.dataareaid) as site_dataareaid\n    , st.timezone\n    , st.defaultdimension\n    , st.defaultinventstatusid\n    , st.dxc_defaultdimension\n    , st.[IsDelete]\n    , st.versionnumber\n    , st.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventsite\" as st\n    where st.sysrowversion > 0\nunion all\n/* Site not migrated from Navision */\nselect *\nfrom navision", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_site\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:28.198993Z", "completed_at": "2024-08-25T09:30:28.222095Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:28.226095Z", "completed_at": "2024-08-25T09:30:34.371156Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 6.192895412445068, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_triptype", "compiled": true, "compiled_code": "\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(dt.mserp_triptypeid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n  as dim_d365_triptype_sk\n    , dt.mserp_triptypeid as triptype_recid\n    , dt.mserp_triptypeid as triptypeid\n    , dt.mserp_description as description\n    , dt.mserp_autocompletepricing as autocompletepricing\n    , dt.mserp_autocompletequota as autocompletequota\n    , dt.mserp_allowpurchreceiptingbeforequotacomplete as allowpurchreceiptingbeforequotacomplete\n    , dt.mserp_autocompleteorder as autocompleteorder\n    , dt.mserp_autopostreceipt as autopostreceipt\n    , dt.mserp_useforecastquantity as useforecastquantity\n    , dt.mserp_farmtype as farmtype\n    , upper(dt.mserp_dataareaid) as dxc_triptype_dataareaid\n    , null as [IsDelete]\n    , 0 as versionnumber\n    , 0 as sysrowversion\nfrom \"lh_d365fnodxc\".\"dbo\".\"dxc_triptype\" dt\nwhere dt.[IsDelete] is null", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_triptype\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:29.169935Z", "completed_at": "2024-08-25T09:30:29.536853Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:29.538887Z", "completed_at": "2024-08-25T09:30:35.758856Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 6.615548849105835, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_vendorinvoice", "compiled": true, "compiled_code": "\n\nselect\n    j.[Id] as dim_d365_vendorinvoice_sk\n\n    , j.recid as vendorinvoice_recid\n    , j.internalinvoiceid\n    , j.invoiceid\n    , j.orderaccount\n\n    , j.invoiceaccount\n    , j.currencycode\n\n    , j.invoiceamount\n    , j.invoiceamountmst\n    , j.invoiceroundoff\n    , j.defaultdimension\n    , j.deliveryname\n\n    , j.deliverypostaladdress\n    , j.remittanceaddress\n    , j.description\n    , j.dlvmode\n    , j.dlvterm\n\n    , j.documentnum\n    , j.exchrate\n    , j.reportingcurrencyexchangerate\n    , j.intercompanysalesid\n    , j.payment\n    , j.postingprofile\n    , j.purchid\n    , j.purchasetype as purchasetypeid\n\n    , ept.[LocalizedLabel] as purchasetype\n    , j.qty\n    , j.salesbalance\n    , upper(j.dataareaid) as vendorinvoice_dataareaid\n\n    , convert(date, j.invoicedate) as invoicedate\n    , convert(date, j.deliverydate_es) as deliverydate_es\n    , convert(date, j.documentdate) as documentdate\n    , convert(date, j.duedate) as duedate\n    , convert(date, j.fixedduedate) as fixedduedate\n    , case when convert(date, j.receiveddate) = '1900-01-01' then null else convert(date, j.receiveddate) end as receiveddate\n    , upper(j.intercompanycompanyid) as intercompanycompanyid\n    , j.versionnumber\n    , j.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoicejour\" as j\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as ept\n    on lower(ept.[OptionSetName]) = lower('purchasetype')\n        and j.purchasetype = ept.[Option]\n    where j.sysrowversion > 642060511\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_vendorinvoice\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:35.794644Z", "completed_at": "2024-08-25T09:30:35.804538Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:35.805940Z", "completed_at": "2024-08-25T09:30:37.292116Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 1.5617194175720215, "adapter_response": {}, "message": "('42000', '[42000] [Microsoft][ODBC Driver 18 for SQL Server][SQL Server]Internal error. Unable to interact with an internal metadata table. Please try the operation again and contact Customer Support Services if this persists. (24525) (SQLMoreResults); [42000] [Microsoft][ODBC Driver 18 for SQL Server][SQL Server]Statement ID: {8205BC0A-113F-4D3C-A69F-4D5DC96B2487} (24528)')", "failures": null, "unique_id": "model.d365.dim_date", "compiled": true, "compiled_code": "\n\nwith source as (\n    select\n        cast(convert(varchar, date, 112) as int) as dim_date_key\n        , date as calendar_date\n        , cast(convert(varchar, date, 112) as int) as month_key\n        , cast(getdate() as date) as today\n        , day(date) as day_num_in_month\n        , month(date) as month_num_in_year\n        , year(date) as year  -- noqa: RF04\n        , datepart(weekday, date) as day_num_in_week\n        , case\n            when month(date) = 1 then 'January'\n            when month(date) = 2 then 'February'\n            when month(date) = 3 then 'March'\n            when month(date) = 4 then 'April'\n            when month(date) = 5 then 'May'\n            when month(date) = 6 then 'June'\n            when month(date) = 7 then 'July'\n            when month(date) = 8 then 'August'\n            when month(date) = 9 then 'September'\n            when month(date) = 10 then 'October'\n            when month(date) = 11 then 'November'\n            when month(date) = 12 then 'December'\n        end as month_name\n        , case\n            when datepart(weekday, date) = 1 then 'Sunday'\n            when datepart(weekday, date) = 2 then 'Monday'\n            when datepart(weekday, date) = 3 then 'Tuesday'\n            when datepart(weekday, date) = 4 then 'Wednesday'\n            when datepart(weekday, date) = 5 then 'Thursday'\n            when datepart(weekday, date) = 6 then 'Friday'\n            when datepart(weekday, date) = 7 then 'Saturday'\n        end as day_name\n        , eomonth(date) as month_end_date\n        , dateadd(day, 1, eomonth(date, -1)) as month_start_date\n        , dateadd(day, 1 - datepart(weekday, date), date) as week_start_day\n        , dateadd(day, 7 - datepart(weekday, date), date) as week_end_day\n        , dateadd(day, 1, eomonth(date, (datepart(quarter, date) - 1) * 3)) as quarter_end_day\n        , dateadd(day, 1, eomonth(date, (datepart(quarter, date) - 1) * 3 - 3)) as quarter_start_day\n        , datepart(quarter, date) as quarter\n        , case when month(date) <= 9 then year(date) else year(date) + 1 end as fiscal_year\n        , case when month(date) <= 9 then datepart(quarter, date) + 1 else datepart(quarter, date) - 3 end as fiscal_quarter\n\n    from (\n        select dateadd(day, number, dateadd(year, -5, datefromparts(year(getdate()), 1, 1))) as date -- noqa: RF04\n        from master..spt_values\n        where type = 'P' and number <= datediff(day, dateadd(year, -5, datefromparts(year(getdate()), 1, 1)), dateadd(year, 5, datefromparts(year(getdate()), 12, 31)))\n    ) as daterange\n)\n\nselect\n    dim_date_key\n    , calendar_date\n    , day_num_in_month\n    , month_num_in_year\n    , year\n    , day_num_in_week\n    , month_name\n    , day_name\n    , month_end_date\n    , month_start_date\n    , week_start_day\n    , week_end_day\n    , quarter_end_day\n    , quarter_start_day\n    , today\n    , case when calendar_date = cast(getdate() as date) then 1 else 0 end as yesterday\n    , case when month(calendar_date) = month(getdate()) and year(calendar_date) = year(getdate()) then 1 else 0 end as this_month\n    , case when datepart(quarter, calendar_date) = datepart(quarter, getdate()) and year(calendar_date) = year(getdate()) then 1 else 0 end as current_quarter\n    , case when datepart(week, calendar_date) = datepart(week, getdate()) and year(calendar_date) = year(getdate()) then 1 else 0 end as current_week\n    , case when month(calendar_date) = month(dateadd(month, -1, getdate())) and year(calendar_date) = year(dateadd(month, -1, getdate())) then 1 else 0 end as last_month\n    , case when calendar_date between dateadd(month, -3, getdate()) and getdate() then 1 else 0 end as previous_3_months\n    , case when calendar_date between dateadd(month, -12, getdate()) and getdate() then 1 else 0 end as previous_12_months\n    , case when calendar_date between dateadd(day, -30, getdate()) and getdate() then 1 else 0 end as previous_30_days\n    , case when calendar_date between dateadd(day, -60, getdate()) and getdate() then 1 else 0 end as previous_60_days\n    , case when calendar_date between dateadd(month, -3, getdate()) and getdate() or month(calendar_date) = month(getdate()) and year(calendar_date) = year(getdate()) then 1 else 0 end as last_3_months\n    , case when calendar_date between dateadd(month, -12, getdate()) and getdate() or month(calendar_date) = month(getdate()) and year(calendar_date) = year(getdate()) then 1 else 0 end as last_12_months\n    , case when calendar_date between dateadd(day, -30, getdate()) and getdate() or calendar_date = cast(getdate() as date) then 1 else 0 end as last_30_days\n    , case when calendar_date between dateadd(day, -60, getdate()) and getdate() or calendar_date = cast(getdate() as date) then 1 else 0 end as last_60_days\n    , left(month_name, 3) as month_abbrev\n    , 'FY ' + cast(case when month(calendar_date) <= 9 then year(calendar_date) else year(calendar_date) + 1 end as varchar) as fy_year\n    , 'Q' + cast(case when month(calendar_date) <= 9 then datepart(quarter, calendar_date) + 1 else datepart(quarter, calendar_date) - 3 end as varchar) as fy_quarter\n    , 'Quarter ' + cast(case when month(calendar_date) <= 9 then datepart(quarter, calendar_date) + 1 else datepart(quarter, calendar_date) - 3 end as varchar) as fy_quarters\n    , left(day_name, 3) as day_abbrev\n    , case\n        when datepart(weekday, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date)) = 1 then convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' Sunday'\n        when datepart(weekday, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date)) = 2 then convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' Monday'\n        when datepart(weekday, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date)) = 3 then convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' Tuesday'\n        when datepart(weekday, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date)) = 4 then convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' Wednesday'\n        when datepart(weekday, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date)) = 5 then convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' Thursday'\n        when datepart(weekday, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date)) = 6 then convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' Friday'\n        when datepart(weekday, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date)) = 7 then convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' Saturday'\n    end as week_start_date_name\n    , case\n        when datepart(weekday, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date)) = 1 then convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) + ' Sunday'\n        when datepart(weekday, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date)) = 2 then convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) + ' Monday'\n        when datepart(weekday, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date)) = 3 then convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) + ' Tuesday'\n        when datepart(weekday, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date)) = 4 then convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) + ' Wednesday'\n        when datepart(weekday, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date)) = 5 then convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) + ' Thursday'\n        when datepart(weekday, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date)) = 6 then convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) + ' Friday'\n        when datepart(weekday, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date)) = 7 then convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) + ' Saturday'\n    end as week_end_date_name\n    , convert(varchar, dateadd(day, 1 - datepart(weekday, calendar_date), calendar_date), 120) + ' -to- ' + convert(varchar, dateadd(day, 7 - datepart(weekday, calendar_date), calendar_date), 120) as week_st_end\n    , 'FY '\n    + cast(case when month(calendar_date) <= 9 then year(calendar_date) else year(calendar_date) + 1 end as varchar)\n    + ' - Q'\n    + cast(case when month(calendar_date) <= 9 then datepart(quarter, calendar_date) + 1 else datepart(quarter, calendar_date) - 3 end as varchar) as fy_year_quarter\n    , convert(varchar, calendar_date, 107) as full_date_desc\nfrom source", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_date\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:32.331750Z", "completed_at": "2024-08-25T09:30:33.211440Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:33.212883Z", "completed_at": "2024-08-25T09:30:38.802716Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 6.48721981048584, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_warehouselocation", "compiled": true, "compiled_code": "\n\nwith ctw as (\n    select\n        whl.[Id] as dim_d365_warehouselocation_sk\n        , whl.recid as warehouselocation_recid\n        , whl.wmslocationid as warehouselocationid\n        , whl.absoluteheight\n        , whl.aisleid\n        , whl.depth\n        , whl.height\n        , whl.volume\n        , whl.width\n        , whl.inputlocation\n        , whl.inventlocationid as warehouseid\n        , whl.locprofileid\n        , whl.locationtype\n        , whl.zoneid\n        , whl.level\n        , whl.partition\n        , whl.[IsDelete]\n        , upper(whl.dataareaid) as warehouselocation_dataareaid\n        , whl.versionnumber\n        , whl.sysrowversion\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"wmslocation\" as whl\n        where whl.sysrowversion > 248956915\n    \n)\n\nselect\n    *\n    , case\n        when zoneid like 'CHILLER%' then 1\n        when warehouseid = 'HAV01' and warehouselocationid = 'RECV' then 1\n        when warehouseid = 'NIML' and warehouselocationid = 'PRDDEF' then 1\n        when warehouseid = 'BNE02' and warehouselocationid = 'INWCHI' then 1\n        when warehouseid = 'BNE02' and warehouselocationid = 'CHIWIP' then 1\n        when warehouseid = 'M04' and warehouselocationid = 'DEF' then 1\n        when warehouseid = 'M12' and warehouselocationid = 'DEF' then 1\n        when warehouseid = 'TIM01' and warehouselocationid = 'INWCHI' then 1\n        else 0\n    end as ischiller\nfrom ctw", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_warehouselocation\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:38.835509Z", "completed_at": "2024-08-25T09:30:38.849043Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:38.853111Z", "completed_at": "2024-08-25T09:30:39.954925Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 1.1501247882843018, "adapter_response": {}, "message": "('42S01', \"[42S01] [Microsoft][ODBC Driver 18 for SQL Server][SQL Server]There is already an object named 'fct_d365_inventitemprice_latest__dbt_tmp' in the database. (2714) (SQLMoreResults)\")", "failures": null, "unique_id": "model.d365.fct_d365_inventitemprice_latest", "compiled": true, "compiled_code": "\n\nwith ct1price as (\n    select * from (\n        select\n            ip.itemid\n            , id.inventsiteid\n            , ip.activationdate\n            , ip.priceunit\n            , ip.priceqty\n            , ip.pricecalcid\n            , ip.pricetype\n            , ip.price\n            , ip.createddatetime\n            , case when ip.priceunit in (0, 1) then ip.price else ip.price / ip.priceunit end as unitcost\n            , upper(ip.dataareaid) as inventitemprice_dataareaid\n            , ip.versionnumber\n            , ip.sysrowversion\n            /* must order by activation date DESC and recid DESC (created date is not unique enough) */\n            , rank() over (\n                partition by ip.dataareaid, id.inventsiteid, ip.itemid\n                order by ip.dataareaid asc, id.inventsiteid asc, ip.activationdate desc, ip.recid desc\n            ) as rnk\n\n        from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventitemprice\" as ip\n        inner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventdim\" as id on ip.inventdimid = id.inventdimid\n        where\n            ip.[IsDelete] is null\n            /* ONLY INCLUDE COST TYPE = 0 (type 1 = Purchase Price) */\n            and ip.pricetype = 0\n            and ip.activationdate <= convert(date, getdate())\n            and id.configid is null\n    ) as x\n    where rnk = 1\n)\n\nselect * from ct1price", "relation_name": "\"dwh_sanford\".\"dw\".\"fct_d365_inventitemprice_latest\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:34.429209Z", "completed_at": "2024-08-25T09:30:35.250046Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:35.252084Z", "completed_at": "2024-08-25T09:30:40.298885Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.88077449798584, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_whsinventstatus", "compiled": true, "compiled_code": "\n\nselect\n    whs.[Id] as dim_d365_whsinventstatus_sk\n    , whs.recid as whsinventstatus_recid\n    , whs.inventstatusid\n    , whs.name\n    , whs.inventstatusblocking\n    , whs.partition\n    , whs.[IsDelete]\n    , upper(whs.dataareaid) as whsinventstatus_dataareaid\n    , whs.versionnumber\n    , whs.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsinventstatus\" as whs\n    where whs.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_whsinventstatus\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:32.159506Z", "completed_at": "2024-08-25T09:30:32.552603Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:32.553557Z", "completed_at": "2024-08-25T09:30:40.530388Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 8.380121231079102, "adapter_response": {"_message": "OK", "rows_affected": 1}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_warehouse", "compiled": true, "compiled_code": "\n\nselect\n    il.[Id] as dim_d365_warehouse_sk\n    , il.recid as warehouse_recid\n    , il.inventlocationid as warehouseid\n    , il.name as warehouse_name\n    , upper(il.dataareaid) as warehouse_dataareaid\n    , il.inventlocationidtransit\n    , il.inventlocationlevel\n    , il.inventlocationtype\n\n    , st.recid as inventsite_recid\n    , st.siteid\n    , st.name as site_name\n    , upper(st.dataareaid) as site_dataareaid\n    , st.timezone\n    , st.defaultdimension\n    , st.defaultinventstatusid\n    , st.dxc_defaultdimension\n    , il.dxc_manufacturerid as manufacturerid\n    , ewt.[LocalizedLabel] as warehousetype\n    , eot.[LocalizedLabel] as operationstype\n\n    , case when il.dxc_edecwarehousetype in (2, 3) then 1 else 0 end as is_vessel /* ('EDECWHType_DW_VESSEL' ,'EDECWHType_LP_VESSEL')*/\n\n    , case when (upper(il.name) like '%CREDIT%' or upper(il.name) like '%MANAGE%') then 1 else 0 end as is_credit /* ticket #58648 */\n\n            /* Operations type is not N/A then Production warehouse\n            then if 3PL/STORAGE or COOL warehouse is not Production\n            Else is a Production warehouse\n            */\n             /* 0 = 3PL/STORAGE, 1 = COOL */\n    , case when il.dxc_operationstype != 0 then 1 when il.dxc_edecwarehousetype in (0, 1) then 0 else 1 end as is_production\n\n    , il.partition\n    , il.[IsDelete]\n    , il.versionnumber\n    , il.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventlocation\" as il\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventsite\" as st on il.inventsiteid = st.siteid and upper(il.dataareaid) = upper(st.dataareaid) and st.[IsDelete] is null\n\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as eot\n    on eot.[OptionSetName] = 'dxc_operationstype'\n        and il.dxc_operationstype = eot.[Option]\n\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as ewt\n    on ewt.[OptionSetName] = 'dxc_edecwarehousetype'\n        and il.dxc_edecwarehousetype = ewt.[Option]\n    where il.sysrowversion > 249082668\n\n\nunion all\n/* Null warehouse for un-mapped from Navision */\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast(999999 as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast('NAV999' as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n as dim_d365_warehouse_sk\n    , 999999 as warehouse_recid\n    , 'NAV999' as warehouseid\n    , 'Navision not migrated' as warehouse_name\n    , 'SANF' as warehouse_dataareaid\n    , null as inventlocationidtransit\n    , null as inventlocationlevel\n    , null as inventlocationtype\n    , 999999 as inventsite_recid\n    , 'NAV999' as siteid\n    , 'Navision not migrated' as site_name\n    , 'SANF' as site_dataareaid\n    , null as timezone\n    , null as defaultdimension\n    , null as defaultinventstatusid\n    , null as dxc_defaultdimension\n    , null as manufacturerid\n    , null as warehousetype\n    , null as operationstype\n    , 0 as is_vessel /* ('EDECWHType_DW_VESSEL' ,'EDECWHType_LP_VESSEL')*/\n    , 0 as is_credit /* ticket #58648 */\n    , 0 as is_production\n    , null as partition -- noqa: RF04\n    , null as [IsDelete]\n    , 0 as versionnumber\n    , 0 as sysrowversion", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_warehouse\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:37.371336Z", "completed_at": "2024-08-25T09:30:37.396260Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:37.400266Z", "completed_at": "2024-08-25T09:30:43.458520Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 6.101696968078613, "adapter_response": {"_message": "OK", "rows_affected": 456}, "message": "OK", "failures": null, "unique_id": "model.d365.fct_d365_defaultexchangerate", "compiled": true, "compiled_code": "\n\n/* Default exchange rates to use in stage fact scripts */\n\nwith exch as (\n    select\n        er.recid as exchangerate_recid\n        , pr.fromcurrencycode\n        , pr.tocurrencycode\n        , ert.name as exchangerate_name\n        , ert.description as exchangerate_description\n        , er.partition\n        , er.exchangerate * .01 as exchangerate\n        , convert(date, er.validfrom) as validfrom\n        , convert(date, er.validto) as validto\n\n        , rank() over (\n            partition by fromcurrencycode, tocurrencycode, validfrom, validto\n            order by er.createddatetime desc, er.recid desc\n        ) as rnk\n        , er.versionnumber\n        , er.sysrowversion\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"exchangerate\" as er\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"exchangeratecurrencypair\" as pr on er.exchangeratecurrencypair = pr.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"exchangeratetype\" as ert on pr.exchangeratetype = ert.recid\n    where\n        er.[IsDelete] is null\n        and pr.[IsDelete] is null\n        and ert.[IsDelete] is null\n        and ert.name = 'Default'\n)\n\nselect * from exch where rnk = 1", "relation_name": "\"dwh_sanford\".\"dw\".\"fct_d365_defaultexchangerate\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:39.989628Z", "completed_at": "2024-08-25T09:30:40.320882Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:40.342326Z", "completed_at": "2024-08-25T09:30:44.166806Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 4.185641288757324, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_davs_businessunit", "compiled": true, "compiled_code": "\n\nselect\n    d.[Id] as stg_d365_davs_businessunit_sk\n    , d.recid as financialdimensionvalueset_recid\n    , d.d1_businessunit\n    , d.d1_businessunitvalue\n    , d1pt.name as d1_businessunit_name\n    , d.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevalueset\" as d\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"omoperatingunit\" as d1\n    on d.d1_businessunit = d1.recid\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d1pt\n    on d1.recid = d1pt.recid\n    where d.sysrowversion > 628626480\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_davs_businessunit\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:40.542864Z", "completed_at": "2024-08-25T09:30:40.825735Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:40.827742Z", "completed_at": "2024-08-25T09:30:44.982675Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 4.458554744720459, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_davs_customer", "compiled": true, "compiled_code": "\n\nselect\n    d.[Id] as stg_d365_davs_customer_sk\n    , d.recid as financialdimensionvalueset_recid\n    , d.d5_customer\n    , d.d5_customervalue\n    , d5pt.name as d5_customer_name\n    , d.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevalueset\" as d\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"custtable\" as d5 on d.d5_customer = d5.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d5pt on d5.party = d5pt.recid\n    where d.sysrowversion > 628626480\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_davs_customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:40.334281Z", "completed_at": "2024-08-25T09:30:41.403777Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:41.404788Z", "completed_at": "2024-08-25T09:30:45.714497Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.428014278411865, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_davs_costcenter", "compiled": true, "compiled_code": "\n\nselect\n    d.[Id] as stg_d365_davs_costcenter_sk\n    , d.recid as financialdimensionvalueset_recid\n    , d.d2_costcenter\n    , d.d2_costcentervalue\n    , d2pt.name as d2_costcenter_name\n    , d.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevalueset\" as d\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"omoperatingunit\" as d2 on d.d2_costcenter = d2.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d2pt on d2.recid = d2pt.recid\n    where d.sysrowversion > 628626480\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_davs_costcenter\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:43.474687Z", "completed_at": "2024-08-25T09:30:43.809919Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:43.811949Z", "completed_at": "2024-08-25T09:30:48.290948Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 4.830255746841431, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_davs_department", "compiled": true, "compiled_code": "\n\nselect\n    d.[Id] as stg_d365_davs_department_sk\n    , d.recid as financialdimensionvalueset_recid\n    , d.d3_department\n    , d.d3_departmentvalue\n    , d3.description as d3_department_name\n    , d.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevalueset\" as d\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionfinancialtag\" as d3 on d.d3_department = d3.recid\n    where d.sysrowversion > 628626480\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_davs_department\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:44.186618Z", "completed_at": "2024-08-25T09:30:44.445611Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:44.446566Z", "completed_at": "2024-08-25T09:30:49.052998Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 4.910170316696167, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_davs_function", "compiled": true, "compiled_code": "\n\nselect\n    d.[Id] as stg_d365_davs_function_sk\n    , d.recid as financialdimensionvalueset_recid\n    , d.d4_function\n    , d.d4_functionvalue\n    , d4.description as d4_function_name\n    , d.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevalueset\" as d\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionfinancialtag\" as d4 on d.d4_function = d4.recid\n    where d.sysrowversion > 628626480\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_davs_function\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:45.020703Z", "completed_at": "2024-08-25T09:30:45.305006Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:45.305989Z", "completed_at": "2024-08-25T09:30:49.895867Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 4.893237113952637, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_davs_vendor", "compiled": true, "compiled_code": "\n\nselect\n    d.[Id] as stg_d365_davs_vendor_sk\n    , d.recid as financialdimensionvalueset_recid\n    , d.d6_vendor\n    , d.d6_vendorvalue\n    , d6pt.name as d6_vendor_name\n    , d.[IsDelete]\n    , d.versionnumber\n    , d.sysrowversion\nfrom\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevalueset\" as d\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendtable\" as d6 on d.d6_vendor = d6.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as d6pt on d6.party = d6pt.recid\n    where d.sysrowversion > 628626480\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_davs_vendor\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:45.761755Z", "completed_at": "2024-08-25T09:30:46.699857Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:46.700844Z", "completed_at": "2024-08-25T09:30:51.525116Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.770211696624756, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_contact", "compiled": true, "compiled_code": "\n\nselect\n    lea.[Id] as stg_d365_lea_contact_sk\n    , p.recid as party_recid\n    , lea.recid as contact_recid\n    , lea.description as contact_description\n    , lea.isprimary as contact_isprimary\n    , lea.locator as locators\n    , lea.locatorextension\n    , lea.type\n    , lea.electronicaddressroles as [role]\n    , cast(nullif(json_value(enum.enumtranslation, CONCAT('$.type.\"', lea.type,'\"')), '') as varchar(2048)) as contacttype\n    , lea.[IsDelete]\n    , lea.versionnumber\n    , lea.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as p\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartylocation\" as pl\n    on p.recid = pl.party\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticslocation\" as ll\n    on pl.location = ll.recid\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as lea\n    on ll.recid = lea.location\ncross apply stage.f_get_enum_translation('logisticselectronicaddress', '1033') as enum\nwhere cast(nullif(json_value(enum.enumtranslation, CONCAT('$.type.\"', lea.type,'\"')), '') as varchar(2048)) = 'Email address' and coalesce(lea.locator, '') != ''\n        and lea.sysrowversion > 500827854\n    ", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_contact\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:48.324123Z", "completed_at": "2024-08-25T09:30:48.649290Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:48.651269Z", "completed_at": "2024-08-25T09:30:52.718707Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 4.412262439727783, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_email", "compiled": true, "compiled_code": "\n\nselect\n    a.[Id] as stg_d365_lea_email_sk\n    , a.recid\n    , a.locator as primary_email\n    , a.description as primary_email_desc\n    , a.electronicaddressroles as primary_email_roles\n    , a.[IsDelete]\n    , a.versionnumber\n    , a.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as a\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as b on a.recid = b.primarycontactemail\nwhere a.locator is not null\n    and a.sysrowversion > 500827854\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_email\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:49.108495Z", "completed_at": "2024-08-25T09:30:50.079060Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:50.081377Z", "completed_at": "2024-08-25T09:30:54.408792Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.316328525543213, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_fax", "compiled": true, "compiled_code": "\n\nselect\n    a.[Id] as stg_d365_lea_fax_sk\n    , a.recid\n    , a.locator as primary_fax\n    , a.description as primary_fax_desc\n    , a.locatorextension as primary_fax_ext\n    , a.electronicaddressroles as primary_fax_roles\n    , a.[IsDelete]\n    , a.versionnumber\n    , a.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as a\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as b on a.recid = b.primarycontactfax\nwhere a.locator is not null\n    and a.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_fax\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:49.922334Z", "completed_at": "2024-08-25T09:30:50.812948Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:50.815049Z", "completed_at": "2024-08-25T09:30:54.889390Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 4.985515594482422, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_phone", "compiled": true, "compiled_code": "\n\nselect\n    a.[Id] as stg_d365_lea_phone_sk\n    , a.recid\n    , a.locator as primary_ph\n    , a.description as primary_ph_desc\n    , a.locatorextension as primary_ph_ext\n    , a.electronicaddressroles as primary_ph_roles\n    , a.[IsDelete]\n    , a.versionnumber\n    , a.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticselectronicaddress\" as a\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpartytable\" as b on a.recid = b.primarycontactphone\nwhere a.locator is not null\n    and a.sysrowversion > 162137759\n", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_phone\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:52.748349Z", "completed_at": "2024-08-25T09:30:52.774657Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:52.776626Z", "completed_at": "2024-08-25T09:30:56.184246Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 3.452232837677002, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_dim_d365_item_allocation", "compiled": true, "compiled_code": "with ct as (\n    select\n        *\n        , right(allocationid, (len(allocationid) - 3)) as allocation\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"forecastitemallocationline\"\n    where [IsDelete] is null\n)\n\n, ct2 as (\n    select\n        *\n        , itemid as itemiddd\n        , rank() over (partition by itemid, allocation order by recid) as allocation_rank\n    from ct\n)\n\n, ct3 as (\n    select\n        *\n        , rank() over (partition by itemiddd order by allocation_rank, recid) as allocation_rank_unique\n    from ct2\n)\n\n, ct4 as (\n    select *\n    from ct3\n)\n\n, ct5 as (\n    select\n        ct4.allocation_rank\n        , ct4.allocation_rank_unique\n        , ct4.itemid\n        , ct4.allocation\n        , ct4.allocationid\n        , row_number() over (partition by 0 order by ct4.recid) as item_allocation_id\n        , case\n            when left(ct4.allocation, 3) in ('SAM', 'MSG') then ct4.allocationid\n            /*\n            when i.dxc_speciescode in ('ATO', 'BAS','HAP','HPB','ORH','SCI') then concat('TIM',left(ct4.allocation,3))\n            else concat('SAN',left(ct4.allocation,3))\n\n            2024-07-11 discussion with Jason K - SAN & TIM require full allocation, not just first 3 chars. Devops #58737\n            */\n            when i.dxc_speciescode in ('ATO', 'BAS', 'HAP', 'HPB', 'ORH', 'SCI') then concat('TIM', ct4.allocation)\n            else concat('SAN', ct4.allocation)\n        end as sales_allocation\n        , upper(ct4.dataareaid) as item_allocation_dataarea\n\n    from ct4\n    inner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventtable\"\n        as i on ct4.itemid = i.itemid\n        and upper(ct4.dataareaid) = upper(i.dataareaid)\n        and i.[IsDelete] is null\n)\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(item_allocation_id as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_d365_item_allocation_sk\n    , *\nfrom ct5", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_dim_d365_item_allocation\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:51.555568Z", "completed_at": "2024-08-25T09:30:51.568049Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:51.570582Z", "completed_at": "2024-08-25T09:30:57.611424Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 6.085052490234375, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_salesorder_freightby_1", "compiled": true, "compiled_code": "/* 53440 Export Shipping - Air - (Consignment despatched as per original bookings as a % of total consigments)\n 2023-07-12 smwood rewrote to include LOADS which give the modecode via dxc_transportationmethod for <i>some</i> orders\n*/\n\nwith ctsort as (\n    select distinct /* each SO can have multiple loads, each route can have multiple lines, only need the distinct values */\n        st.[Id] as stg_d365_salesorder_freightby_1_sk\n        , st.recid as salesorder_recid\n        , st.salesid\n        , case when s.modecode = 'OCEAN' then 1 else 0 end as s_freight_by_ocean\n        , case when s.modecode = 'AIR' then 1 else 0 end as s_freight_by_air\n        , case\n            when s.modecode = 'TL' then 1 else 0 end as s_freight_by_tl\n\n        , case when rts.modecode = 'OCEAN' then 1 else 0 end as rs_freight_by_ocean\n        , case when rts.modecode = 'AIR' then 1 else 0 end as rs_freight_by_air\n        , case\n            when rts.modecode = 'TL' then 1 else 0 end as rs_freight_by_tl\n\n        , case when cs.methodcode = 'OCEAN' then 1 else 0 end as cs_freight_by_ocean\n        , case when cs.methodcode = 'AIR' then 1 else 0 end as cs_freight_by_air\n        , case when cs.methodcode = 'TL' then 1 else 0 end as cs_freight_by_tl\n\n        , case when wlt.dxc_transportationmethod = 'OCEAN' then 1 else 0 end as l_freight_by_ocean\n        , case when wlt.dxc_transportationmethod = 'AIR' then 1 else 0 end as l_freight_by_air\n        , case when wlt.dxc_transportationmethod = 'TL' then 1 else 0 end as l_freight_by_tl\n\n        , upper(st.dataareaid) as dataareaid\n\n        , st.[IsDelete]\n        , st.versionnumber\n        , st.sysrowversion\n        from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"salestable\" as st\n            left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"tmssalestable\" as s\n                on st.salesid = s.salesid\n                    and s.[IsDelete] is null\n            /* to get the actual route assigned to the order, not just ALL with the same routeconfigcode */\n            left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsloadtable\" as wlt on s.salesid = wlt.ordernum and wlt.[IsDelete] is null\n            /* where the order has a Route assigned */\n            left join\n                \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"tmsroute\"\n                    as rt\n                on s.routeconfigcode = rt.routeconfigcode and s.dataareaid = rt.dataareaid and rt.[IsDelete] is null\n                    and wlt.routecode = rt.routecode\n            left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"tmsroutesegment\" as rts on rt.routecode = rts.routecode and rt.dataareaid = rts.dataareaid and rts.[IsDelete] is null\n            /* Carrier Service has methodcode AIR, SEA, TL\n                        -- possible issue with NZC-CT (NZ Couriers) ALL shipments are marked with AIR as this is the only Service Code */\n            left join\n                \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"tmscarrierservice\"\n                    as cs\n                on s.carriercode = cs.carriercode\n                    and s.carrierservicecode = cs.carrierservicecode\n                    and cs.[IsDelete] is null\n                and st.[IsDelete] is null\n            \n)\n\n/* - not required as WHSLoadTable referenced in ctsort\n        , ct_load as (\n        select distinct\n        s.recid salesorder_recid\n        , s.salesid\n        , upper(s.dataareaid) dataareaid\n        , case when wlt.dxc_transportationmethod = 'OCEAN' then 1 else 0 end l_freight_by_ocean\n        , case when wlt.dxc_transportationmethod = 'AIR' then 1 else 0 end l_freight_by_air\n        , case when wlt.dxc_transportationmethod = 'TL' then 1 else 0 end l_freight_by_tl\n        from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsloadtable\" wlt\n        join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsloadline\" wll on wlt.loadid = wll.loadid\n        join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"salestable\" s on wll.ordernum = s.salesid\n        where wlt.[IsDelete] is null\n        and wll.[IsDelete] is null\n        )\n\n        -- Get all possible sales orders\n        , ct_so as (\n        select distinct\n        salesorder_recid\n        , salesid\n        , dataareaid\n        from ctsort\n        union\n        select distinct\n        salesorder_recid\n        , salesid\n        , dataareaid\n        from ct_load\n        )\n        */\n\nselect\n    stg_d365_salesorder_freightby_1_sk\n    , ctsort.salesorder_recid\n    , ctsort.salesid\n    , ctsort.dataareaid\n    , case when sum(ctsort.s_freight_by_ocean) >= 1 then 1 else 0 end as s_freight_by_ocean\n    , case when sum(ctsort.s_freight_by_air) >= 1 then 1 else 0 end as s_freight_by_air\n    , case when sum(ctsort.s_freight_by_tl) >= 1 then 1 else 0 end as s_freight_by_tl\n    , case when sum(ctsort.rs_freight_by_ocean) >= 1 then 1 else 0 end as rs_freight_by_ocean\n    , case when sum(ctsort.rs_freight_by_air) >= 1 then 1 else 0 end as rs_freight_by_air\n    , case when sum(ctsort.rs_freight_by_tl) >= 1 then 1 else 0 end as rs_freight_by_tl\n    , case when sum(ctsort.cs_freight_by_ocean) >= 1 then 1 else 0 end as cs_freight_by_ocean\n    , case when sum(ctsort.cs_freight_by_air) >= 1 then 1 else 0 end as cs_freight_by_air\n    , case when sum(ctsort.cs_freight_by_tl) >= 1 then 1 else 0 end as cs_freight_by_tl\n    , case when sum(ctsort.l_freight_by_ocean) >= 1 then 1 else 0 end as l_freight_by_ocean\n    , case when sum(ctsort.l_freight_by_air) >= 1 then 1 else 0 end as l_freight_by_air\n    , case when sum(ctsort.l_freight_by_tl) >= 1 then 1 else 0 end as l_freight_by_tl\n    , ctsort.[IsDelete]\n    , ctsort.versionnumber\n    , ctsort.sysrowversion\nfrom ctsort\ngroup by\n    ctsort.stg_d365_salesorder_freightby_1_sk\n    , ctsort.salesorder_recid\n    , ctsort.salesid\n    , ctsort.dataareaid\n    , ctsort.[IsDelete]\n    , ctsort.versionnumber\n    , ctsort.sysrowversion", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_salesorder_freightby_1\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:54.435775Z", "completed_at": "2024-08-25T09:30:54.448200Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:54.451130Z", "completed_at": "2024-08-25T09:30:59.618591Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.197603225708008, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_dim_d365_item_std_cost_1", "compiled": true, "compiled_code": "with base as (\n    select\n        ip.recid\n        , ip.itemid\n        , ip.activationdate\n        , ip.createddatetime\n        , ip.inventdimid\n        , ip.versionid\n        , ip.price\n        , ip.priceunit\n        , ip.unitid\n        , ip.dataareaid\n        , id.inventsiteid as siteid\n        , rank() over (partition by ip.itemid order by ip.createddatetime desc, ip.activationdate desc) as rnk\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventitemprice\" as ip\n    inner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventdim\" as id\n        on\n            ip.inventdimid = id.inventdimid\n            and upper(ip.dataareaid) = upper(id.dataareaid)\n    where\n        id.inventsiteid = 'TRANSIT'\n        and (ip.itemid like '10%' or ip.itemid like '20%' or ip.itemid like '30%')\n)\n\n, ctstd as (\n    select x.*\n    from base as x\n    where x.rnk = 1\n)\n\nselect\n    recid\n    , itemid\n    , activationdate\n    , createddatetime\n    , inventdimid\n    , versionid\n    , round(price, 2) as standard_cost\n    , round(priceunit, 3) as priceunit\n    , upper(unitid) as unitid\n    , upper(dataareaid) as item_standardcost_dataareaid\nfrom ctstd", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_dim_d365_item_std_cost_1\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:56.214246Z", "completed_at": "2024-08-25T09:30:56.222243Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:56.224242Z", "completed_at": "2024-08-25T09:30:59.882135Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 3.6898140907287598, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_fct_d365_defaultexchangerate", "compiled": true, "compiled_code": "/* Default exchange rates to use in stage fact scripts */\n\nwith cte as (\n    select\n        er.recid as exchangerate_recid\n        , pr.fromcurrencycode\n        , pr.tocurrencycode\n        , ert.name as exchangerate_name\n        , ert.description as exchangerate_description\n        , vfrom.newzealandtime as validfrom\n        , vto.newzealandtime as validto\n        , er.partition\n        , er.exchangerate * .01 as exchangerate\n\n        , rank() over (\n            partition by fromcurrencycode, tocurrencycode, validfrom, validto\n            order by er.createddatetime desc, er.recid desc\n        ) as rnk\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"exchangerate\" as er\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"exchangeratecurrencypair\" as pr on er.exchangeratecurrencypair = pr.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"exchangeratetype\" as ert on pr.exchangeratetype = ert.recid\n    cross apply dbo.f_convert_utc_to_nzt(er.validfrom) as vfrom\n    cross apply dbo.f_convert_utc_to_nzt(er.validto) as vto\n    where\n        er.[IsDelete] is null\n        and pr.[IsDelete] is null\n        and ert.[IsDelete] is null\n        and ert.name = 'Default'\n)\nselect *\nfrom cte\nwhere rnk = 1", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_fct_d365_defaultexchangerate\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:54.920514Z", "completed_at": "2024-08-25T09:30:54.995783Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:54.997755Z", "completed_at": "2024-08-25T09:31:00.484125Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.585475444793701, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_dim_tm1_gl_category_level", "compiled": true, "compiled_code": "/* TODO: Move to a separate TM1 project */\n\nwith ct as (\n    select\n        \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_tm1_gl_category_level_sk\n        , recid\n        , mainaccountid\n        , gl_calc_factor\n        , gl_category_l0\n        , gl_category_l1\n        , gl_category_l2\n        , gl_category_l3\n        , gl_category_l4\n        , gl_category_l5\n        , gl_category_l6\n        , gl_category_l7\n        , gl_category_l8\n        , gl_category_l9\n        , gl_category_l10\n        , gl_category_l11\n        , gl_category_l12\n        , gl_category_l13\n    from (\n        values\n        (\n            1\n            , '601000'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Export Sales FOB'\n            , 'Total Export CIF'\n            , 'Export Product Sales'\n        )\n        , (\n            2\n            , '601100'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Export Sales FOB'\n            , 'Total Export CIF'\n            , 'Commissions, Claims & Discounts - Export'\n        )\n        , (\n            3\n            , '601101'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Export Sales FOB'\n            , 'Total Export CIF'\n            , 'Commissions, Claims & Discounts - Export'\n        )\n        , (\n            4\n            , '601102'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Export Sales FOB'\n            , 'Total Export CIF'\n            , 'Commissions, Claims & Discounts - Export'\n        )\n        , (\n            5\n            , '601103'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Export Sales FOB'\n            , 'Total Export CIF'\n            , 'Commissions, Claims & Discounts - Export'\n        )\n        , (\n            6\n            , '601200'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Export Sales FOB'\n            , ''\n            , 'Total Export Freight'\n        )\n        , (\n            7\n            , '601201'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Export Sales FOB'\n            , ''\n            , 'Total Export Freight'\n        )\n        , (\n            8\n            , '602102'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Local Sales'\n            , 'Local Sales'\n            , 'Accrued Sales - Local'\n        )\n        , (\n            9\n            , '602100'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Local Sales'\n            , 'Local Sales'\n            , 'Commissions, Claims & Discounts - Local'\n        )\n        , (\n            10\n            , '602101'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Local Sales'\n            , 'Local Sales'\n            , 'Commissions, Claims & Discounts - Local'\n        )\n        , (\n            11\n            , '602104'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Local Sales'\n            , 'Local Sales'\n            , 'Commissions, Claims & Discounts - Local'\n        )\n        , (\n            12\n            , '602000'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Local Sales'\n            , 'Local Sales'\n            , 'Local Product Sales'\n        )\n        , (\n            13\n            , '602200'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Local Sales'\n            , 'Local Freight'\n            , 'Local Freight'\n        )\n        , (\n            14\n            , '602201'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Seadfood Sales (Exc Interco)'\n            , 'Total Local Sales'\n            , 'Local Freight'\n            , 'Local Freight'\n        )\n        , (\n            15\n            , '700100'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Standard Cost of Goods Sold'\n            , ''\n            , ''\n            , 'Cost of Goods Sold at Std (Excl Interco)'\n        )\n        , (\n            16\n            , '700101'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Standard Cost of Goods Sold'\n            , ''\n            , ''\n            , 'Cost of Goods Sold at Std (Excl Interco)'\n        )\n        , (\n            17\n            , '700103'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Standard Cost of Goods Sold'\n            , ''\n            , ''\n            , 'Cost of Goods Sold at Std (Excl Interco)'\n        )\n        , (\n            18\n            , '700104'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Standard Cost of Goods Sold'\n            , ''\n            , ''\n            , 'Cost of Goods Sold at Std (Excl Interco)'\n        )\n        , (\n            19\n            , '700102'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Gross Margin at Standard'\n            , 'Total Standard Cost of Goods Sold'\n            , ''\n            , ''\n            , 'Cost of Goods Sold at Std (Interco)'\n        )\n        , (\n            20\n            , '611300'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Other Income'\n            , 'Commission Received'\n        )\n        , (\n            21\n            , '611301'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Other Income'\n            , 'Commission Received'\n        )\n        , (\n            22\n            , '611200'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Other Income'\n            , 'Miscellaneous Charges'\n        )\n        , (\n            23\n            , '611400'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Other Income'\n            , 'Other Sales'\n        )\n        , (\n            24\n            , '611100'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Other Income'\n            , 'Rental Income'\n        )\n        , (\n            25\n            , '611101'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Other Income'\n            , 'Rental Income'\n        )\n        , (\n            26\n            , '602103'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Fish Processing Fee'\n        )\n        , (\n            27\n            , '611000'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Retail Sales'\n        )\n        , (\n            28\n            , '611010'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Services Income'\n        )\n        , (\n            29\n            , '611500'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Other Services & Hiring Income'\n        )\n        , (\n            30\n            , '611501'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Other Services & Hiring Income'\n        )\n        , (\n            31\n            , '611502'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Other Services & Hiring Income'\n        )\n        , (\n            32\n            , '611503'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Other Services & Hiring Income'\n        )\n        , (\n            33\n            , '611504'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Other Services & Hiring Income'\n        )\n        , (\n            34\n            , '611505'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Other Services & Hiring Income'\n        )\n        , (\n            35\n            , '612000'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Total ACE Trading'\n        )\n        , (\n            36\n            , '727500'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Management Fees'\n        )\n        , (\n            37\n            , '727501'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Management Fees'\n        )\n        , (\n            38\n            , '727502'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Sundry & Deferred Income'\n        )\n        , (\n            39\n            , '727503'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Other Income'\n            , ''\n            , ''\n            , 'Total Non-Seafood Sales'\n            , 'Sundry & Deferred Income'\n        )\n        , (\n            40\n            , '613000'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Seafood Sales'\n        )\n        , (\n            41\n            , '613001'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Seafood Sales'\n        )\n        , (\n            42\n            , '613002'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Seafood Sales'\n        )\n        , (\n            43\n            , '613003'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Seafood Sales'\n        )\n        , (\n            44\n            , '613004'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Seafood Sales'\n        )\n        , (\n            45\n            , '613005'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Seafood Sales'\n        )\n        , (\n            46\n            , '613200'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Internal Seafood Sales'\n            , 'Internal Sales'\n        )\n        , (\n            47\n            , '613105'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Royalties'\n        )\n        , (\n            48\n            , '613300'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Management Fees Received'\n        )\n        , (\n            49\n            , '613301'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Management Fees Received'\n        )\n        , (\n            50\n            , '613302'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Management Fees Received'\n        )\n        , (\n            51\n            , '613303'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Management Fees Received'\n        )\n        , (\n            52\n            , '613304'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Management Fees Received'\n        )\n        , (\n            53\n            , '613400'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Sundry Income'\n        )\n        , (\n            54\n            , '613401'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Sundry Income'\n        )\n        , (\n            55\n            , '613402'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Sundry Income'\n        )\n        , (\n            56\n            , '613403'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Sundry Income'\n        )\n        , (\n            57\n            , '613404'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Sundry Income'\n        )\n        , (\n            58\n            , '613500'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Rent Received'\n        )\n        , (\n            59\n            , '613501'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Rent Received'\n        )\n        , (\n            60\n            , '613502'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Rent Received'\n        )\n        , (\n            61\n            , '613503'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Rent Received'\n        )\n        , (\n            62\n            , '613504'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Rent Received'\n        )\n        , (\n            63\n            , '613600'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Rent Received'\n        )\n        , (\n            64\n            , '613602'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Intercompany Sales'\n            , ''\n            , ''\n            , 'Intercompany Non-Seafood Sales'\n            , 'Intercompany Rent Received'\n        )\n        , (\n            65\n            , '701100'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Total Material and Packaging Absorbed at Standard'\n            , 'Material and Packaging Recovery'\n        )\n        , (\n            66\n            , '701200'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Total Labour Absorbed at Standard Cost'\n            , 'Labour Recovery'\n        )\n        , (\n            67\n            , '701201'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Total Labour Absorbed at Standard Cost'\n            , 'Labour Recovery'\n        )\n        , (\n            68\n            , '701300'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Overhead Recovery'\n            , 'Overhead Recovery'\n        )\n        , (\n            69\n            , '701301'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Overhead Recovery'\n            , 'Overhead Recovery'\n        )\n        , (\n            70\n            , '701302'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Overhead Recovery'\n            , 'Overhead Recovery'\n        )\n        , (\n            71\n            , '701303'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Overhead Recovery'\n            , 'Overhead Recovery'\n        )\n        , (\n            72\n            , '701304'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Overhead Recovery'\n            , 'Overhead Recovery'\n        )\n        , (\n            73\n            , '701305'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Overhead Recovery'\n            , 'Overhead Recovery'\n        )\n        , (\n            74\n            , '701306'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Overhead Recovery'\n            , 'Overhead Recovery'\n        )\n        , (\n            75\n            , '701400'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Operating Recoveries'\n            , 'Inbound Logistics Recovery'\n            , 'Inbound Logistics Recovery'\n        )\n        , (\n            76\n            , '701500'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Recoveries'\n            , 'Stock On Board'\n            , ''\n            , 'Stock On Board'\n        )\n        , (\n            77\n            , '702003'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'External Material Cost'\n            , 'Purchase Price Variance'\n        )\n        , (\n            78\n            , '702000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'External Material Cost'\n            , 'Raw Material Purchase'\n        )\n        , (\n            79\n            , '702001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'External Material Cost'\n            , 'Raw Material Purchase'\n        )\n        , (\n            80\n            , '702002'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'External Material Cost'\n            , 'Raw Material Purchase'\n        )\n        , (\n            81\n            , '702150'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Intercompany Material Cost'\n            , 'Internal Processing Fee'\n        )\n        , (\n            82\n            , '702100'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Intercompany Material Cost'\n            , 'Internal Purchases'\n        )\n        , (\n            83\n            , '702101'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Intercompany Material Cost'\n            , 'Internal Purchases'\n        )\n        , (\n            84\n            , '702102'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Intercompany Material Cost'\n            , 'Internal Purchases'\n        )\n        , (\n            85\n            , '702103'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Intercompany Material Cost'\n            , 'Internal Purchases'\n        )\n        , (\n            86\n            , '702104'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Intercompany Material Cost'\n            , 'Internal Purchases'\n        )\n        , (\n            87\n            , '702105'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Intercompany Material Cost'\n            , 'Internal Purchases'\n        )\n        , (\n            88\n            , '702200'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Material Cost Issues to Production'\n            , 'Material Issues'\n        )\n        , (\n            89\n            , '702201'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Material Cost Issues to Production'\n            , 'Material Variances'\n        )\n        , (\n            90\n            , '702202'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Material Cost Issues to Production'\n            , 'Material Variances'\n        )\n        , (\n            91\n            , '702203'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Material Cost Issues to Production'\n            , 'Material Variances'\n        )\n        , (\n            92\n            , '702204'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Material Costs'\n            , 'Material Cost Issues to Production'\n            , 'Material Variances'\n        )\n        , (\n            93\n            , '703000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Cost'\n        )\n        , (\n            94\n            , '703001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Cost'\n        )\n        , (\n            95\n            , '703002'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Cost'\n        )\n        , (\n            96\n            , '703003'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Cost'\n        )\n        , (\n            97\n            , '703004'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Cost'\n        )\n        , (\n            98\n            , '703005'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Variances'\n        )\n        , (\n            99\n            , '703006'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Variances'\n        )\n        , (\n            100\n            , '703007'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Variances'\n        )\n        , (\n            101\n            , '703008'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Packaging Costs'\n            , ''\n            , 'Packaging Variances'\n        )\n        , (\n            102\n            , '704000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Feed Cost'\n            , ''\n            , 'Feed Cost'\n        )\n        , (\n            103\n            , '704001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Feed Cost'\n            , ''\n            , 'Feed Cost'\n        )\n        , (\n            104\n            , '704002'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Feed Cost'\n            , ''\n            , 'Feed Cost'\n        )\n        , (\n            105\n            , '704003'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Feed Cost'\n            , ''\n            , 'Feed Cost'\n        )\n        , (\n            106\n            , '720900'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Catching and Charter Fees'\n            , ''\n            , 'Catching and Charter Fees'\n        )\n        , (\n            107\n            , '720901'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Catching and Charter Fees'\n            , ''\n            , 'Catching and Charter Fees'\n        )\n        , (\n            108\n            , '710000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            109\n            , '710001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            110\n            , '710002'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            111\n            , '710003'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            112\n            , '710004'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            113\n            , '710005'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            114\n            , '710006'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            115\n            , '710007'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            116\n            , '710008'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            117\n            , '710009'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Wages'\n        )\n        , (\n            118\n            , '710100'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Temporary Labour'\n        )\n        , (\n            119\n            , '710101'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Temporary Labour'\n        )\n        , (\n            120\n            , '710102'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Temporary Labour'\n        )\n        , (\n            121\n            , '710200'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Crew Cost'\n        )\n        , (\n            122\n            , '710300'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Labour Variances'\n        )\n        , (\n            123\n            , '710301'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Labour Variances'\n        )\n        , (\n            124\n            , '710302'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Labour Variances'\n        )\n        , (\n            125\n            , '710303'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Total Labour Costs'\n            , ''\n            , 'Labour Variances'\n        )\n        , (\n            126\n            , '720000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Commissions and Profit Share'\n        )\n        , (\n            127\n            , '720001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Commissions and Profit Share'\n        )\n        , (\n            128\n            , '721500'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Compliance and Inspection'\n        )\n        , (\n            129\n            , '721501'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Compliance and Inspection'\n        )\n        , (\n            130\n            , '721502'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Compliance and Inspection'\n        )\n        , (\n            131\n            , '721503'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Compliance and Inspection'\n        )\n        , (\n            132\n            , '721504'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Compliance and Inspection'\n        )\n        , (\n            133\n            , '721505'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Compliance and Inspection'\n        )\n        , (\n            134\n            , '721600'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Harvesting Costs'\n        )\n        , (\n            135\n            , '721700'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            136\n            , '721701'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            137\n            , '721702'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            138\n            , '721703'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            139\n            , '721704'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            140\n            , '721705'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            141\n            , '721706'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            142\n            , '721707'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Consumables'\n        )\n        , (\n            143\n            , '721800'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Cleaning'\n        )\n        , (\n            144\n            , '722000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Water, Electricity and Gas'\n        )\n        , (\n            145\n            , '722001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Water, Electricity and Gas'\n        )\n        , (\n            146\n            , '722002'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Water, Electricity and Gas'\n        )\n        , (\n            147\n            , '722100'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Ice and Brine'\n        )\n        , (\n            148\n            , '722101'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Ice and Brine'\n        )\n        , (\n            149\n            , '722102'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Ice and Brine'\n        )\n        , (\n            150\n            , '722500'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Waste Disposal'\n        )\n        , (\n            151\n            , '722800'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Canteen and Food Stores'\n        )\n        , (\n            152\n            , '722801'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Canteen and Food Stores'\n        )\n        , (\n            153\n            , '722802'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Canteen and Food Stores'\n        )\n        , (\n            154\n            , '722803'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Canteen and Food Stores'\n        )\n        , (\n            155\n            , '724300'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Subcontracting issued to Production at Standard'\n        )\n        , (\n            156\n            , '724400'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Overhead consumables'\n        )\n        , (\n            157\n            , '724401'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Overhead consumables'\n        )\n        , (\n            158\n            , '720300'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            159\n            , '720301'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            160\n            , '720302'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            161\n            , '720303'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            162\n            , '720304'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            163\n            , '720305'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            164\n            , '720306'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            165\n            , '720307'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            166\n            , '720308'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Employee Benefits'\n        )\n        , (\n            167\n            , '724500'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Overhead Variances'\n        )\n        , (\n            168\n            , '724501'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Overhead Variances'\n        )\n        , (\n            169\n            , '724502'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Overhead Variances'\n        )\n        , (\n            170\n            , '724503'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Overhead Variances'\n        )\n        , (\n            171\n            , '720800'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Processing Fees'\n        )\n        , (\n            172\n            , '721000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Spotting Fees'\n        )\n        , (\n            173\n            , '721001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Spotting Fees'\n        )\n        , (\n            174\n            , '721100'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Fuel and Oil'\n        )\n        , (\n            175\n            , '721101'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Fuel and Oil'\n        )\n        , (\n            176\n            , '721102'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Fuel and Oil'\n        )\n        , (\n            177\n            , '721103'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Fuel and Oil'\n        )\n        , (\n            178\n            , '721200'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Gear and Nets'\n        )\n        , (\n            179\n            , '721201'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Gear and Nets'\n        )\n        , (\n            180\n            , '721300'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'Wharfage'\n        )\n        , (\n            181\n            , '721400'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            182\n            , '721401'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            183\n            , '721402'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            184\n            , '721403'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            185\n            , '721404'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            186\n            , '721405'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            187\n            , '721406'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            188\n            , '721407'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Variable Overheads excl Catch Fees'\n            , ''\n            , 'ACE In, Levies and Deemed Values'\n        )\n        , (\n            189\n            , '720100'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Asset Maintenance and Repairs'\n        )\n        , (\n            190\n            , '720200'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Asset Maintenance and Repairs'\n        )\n        , (\n            191\n            , '722900'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Insurance'\n        )\n        , (\n            192\n            , '720400'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'ACC and Medical Costs'\n        )\n        , (\n            193\n            , '720401'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'ACC and Medical Costs'\n        )\n        , (\n            194\n            , '720402'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'ACC and Medical Costs'\n        )\n        , (\n            195\n            , '720403'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'ACC and Medical Costs'\n        )\n        , (\n            196\n            , '720404'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'ACC and Medical Costs'\n        )\n        , (\n            197\n            , '720500'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Salaries'\n        )\n        , (\n            198\n            , '720600'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Hiring and Recruitment'\n        )\n        , (\n            199\n            , '720601'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Hiring and Recruitment'\n        )\n        , (\n            200\n            , '720602'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Hiring and Recruitment'\n        )\n        , (\n            201\n            , '720603'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Hiring and Recruitment'\n        )\n        , (\n            202\n            , '720604'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Hiring and Recruitment'\n        )\n        , (\n            203\n            , '720700'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Travel and Entertainment'\n        )\n        , (\n            204\n            , '720701'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Travel and Entertainment'\n        )\n        , (\n            205\n            , '720702'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Travel and Entertainment'\n        )\n        , (\n            206\n            , '720703'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Travel and Entertainment'\n        )\n        , (\n            207\n            , '720704'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Travel and Entertainment'\n        )\n        , (\n            208\n            , '720705'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Travel and Entertainment'\n        )\n        , (\n            209\n            , '720706'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Travel and Entertainment'\n        )\n        , (\n            210\n            , '721900'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            211\n            , '721901'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            212\n            , '721902'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            213\n            , '721903'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            214\n            , '721904'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            215\n            , '721905'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            216\n            , '721906'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            217\n            , '721907'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            218\n            , '721908'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            219\n            , '721909'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            220\n            , '721910'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Depreciation'\n        )\n        , (\n            221\n            , '722200'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Rent and Equipment Hire'\n        )\n        , (\n            222\n            , '722201'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Rent and Equipment Hire'\n        )\n        , (\n            223\n            , '722202'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Rent and Equipment Hire'\n        )\n        , (\n            224\n            , '722203'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Rent and Equipment Hire'\n        )\n        , (\n            225\n            , '722204'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Rent and Equipment Hire'\n        )\n        , (\n            226\n            , '722205'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Rent and Equipment Hire'\n        )\n        , (\n            227\n            , '722300'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Vessel Management'\n        )\n        , (\n            228\n            , '722400'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Health and Safety'\n        )\n        , (\n            229\n            , '722401'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Health and Safety'\n        )\n        , (\n            230\n            , '722402'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Health and Safety'\n        )\n        , (\n            231\n            , '722403'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Fixed Overheads'\n            , ''\n            , 'Health and Safety'\n        )\n        , (\n            232\n            , '725000'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Inbound Logistics Cost'\n            , ''\n            , 'Inbound Logistics Cost'\n        )\n        , (\n            233\n            , '725001'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Inbound Logistics Cost'\n            , ''\n            , 'Inbound Logistics Cost'\n        )\n        , (\n            234\n            , '725002'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Inbound Logistics Cost'\n            , ''\n            , 'Inbound Logistics Cost'\n        )\n        , (\n            235\n            , '725003'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Inbound Logistics Cost'\n            , ''\n            , 'Inbound Logistics Cost'\n        )\n        , (\n            236\n            , '725004'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Total Operating Variance'\n            , 'Total Operating Expenses'\n            , 'Inbound Logistics Cost'\n            , ''\n            , 'Inbound Logistics Cost'\n        )\n        , (\n            237\n            , '726200'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            238\n            , '726201'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            239\n            , '726202'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            240\n            , '726203'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            241\n            , '726204'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            242\n            , '726205'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            243\n            , '726206'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            244\n            , '726207'\n            , -1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            245\n            , '726208'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Internal Sales and Purchases'\n        )\n        , (\n            246\n            , '726300'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Management Fees Paid'\n        )\n        , (\n            247\n            , '726301'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Management Fees Paid'\n        )\n        , (\n            248\n            , '726302'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Management Fees Paid'\n        )\n        , (\n            249\n            , '726303'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Management Fees Paid'\n        )\n        , (\n            250\n            , '726304'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Management Fees Paid'\n        )\n        , (\n            251\n            , '726400'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Sundry Expense'\n        )\n        , (\n            252\n            , '726401'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Sundry Expense'\n        )\n        , (\n            253\n            , '726402'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Sundry Expense'\n        )\n        , (\n            254\n            , '726403'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Sundry Expense'\n        )\n        , (\n            255\n            , '726404'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Sundry Expense'\n        )\n        , (\n            256\n            , '726405'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Sundry Expense'\n        )\n        , (\n            257\n            , '726500'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Rent'\n        )\n        , (\n            258\n            , '726501'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Rent'\n        )\n        , (\n            259\n            , '726502'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Rent'\n        )\n        , (\n            260\n            , '726503'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Rent'\n        )\n        , (\n            261\n            , '726504'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Rent'\n        )\n        , (\n            262\n            , '726505'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Rent'\n        )\n        , (\n            263\n            , '726600'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Harvesting Expense'\n        )\n        , (\n            264\n            , '726602'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Harvesting Expense'\n        )\n        , (\n            265\n            , '726605'\n            , 1\n            , 'Profit and Loss'\n            , 'Total Profit and Loss'\n            , 'Profit After Tax'\n            , 'Profit Before Tax'\n            , 'EBIT'\n            , 'Normalised EBIT'\n            , 'Net Operating Profit'\n            , 'Gross Margin After Biomass'\n            , 'Gross Margin Before Biomass'\n            , 'Net Intracompany'\n            , ''\n            , ''\n            , ''\n            , 'Intercompany Harvesting Expense'\n        )\n        , (266, '726000', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Gross Margin After Biomass', 'Biomass Movement', '', '', '', '', 'Biomass Movement')\n        , (267, '726001', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Gross Margin After Biomass', 'Biomass Movement', '', '', '', '', 'Biomass Movement')\n        , (268, '726002', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Gross Margin After Biomass', 'Biomass Movement', '', '', '', '', 'Biomass Movement')\n        , (269, '722600', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Rates')\n        , (270, '723700', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Directors Fees')\n        , (271, '723800', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Sponsorships and Donations')\n        , (272, '723801', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Sponsorships and Donations')\n        , (273, '723802', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Sponsorships and Donations')\n        , (274, '723803', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Sponsorships and Donations')\n        , (275, '723900', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Research')\n        , (276, '724000', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Shareholder Expenses')\n        , (277, '724100', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Bank Charges')\n        , (278, '724101', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Bank Charges')\n        , (279, '724200', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Overhead Transfer to COGS')\n        , (280, '724201', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Overhead Transfer to COGS')\n        , (281, '724202', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Overhead Transfer to COGS')\n        , (282, '724203', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Overhead Transfer to COGS')\n        , (283, '722700', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Security')\n        , (284, '723000', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Legal and Consulting Expenses')\n        , (285, '723001', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Legal and Consulting Expenses')\n        , (286, '723002', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Legal and Consulting Expenses')\n        , (287, '723003', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Legal and Consulting Expenses')\n        , (288, '723004', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Legal and Consulting Expenses')\n        , (289, '723100', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Office and Communication Expenses')\n        , (290, '723101', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Office and Communication Expenses')\n        , (291, '723200', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Subscriptions')\n        , (292, '723300', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Audit Fees')\n        , (293, '723301', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Audit Fees')\n        , (294, '723302', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Audit Fees')\n        , (295, '723303', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Audit Fees')\n        , (296, '723304', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Audit Fees')\n        , (297, '723400', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Marketing')\n        , (298, '723500', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Bad Debts')\n        , (299, '723501', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Bad Debts')\n        , (300, '723502', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'Bad Debts')\n        , (301, '723600', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'IT Costs')\n        , (302, '723601', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'IT Costs')\n        , (303, '723602', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'IT Costs')\n        , (304, '723603', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'IT Costs')\n        , (305, '723604', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'IT Costs')\n        , (306, '723605', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Sales & Administration', '', '', '', '', '', 'IT Costs')\n        , (307, '725100', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (308, '725101', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (309, '725102', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (310, '725103', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (311, '725104', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (312, '725105', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (313, '725106', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (314, '725107', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Freight')\n        , (315, '725200', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Storage')\n        , (316, '725300', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Export Documentation')\n        , (317, '725400', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Total Supply Chain', '', '', '', '', '', 'Cost to Serve')\n        , (318, '726100', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Stock Adjustments', '', '', '', '', '', 'Stock Adjustments')\n        , (319, '726101', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Stock Adjustments', '', '', '', '', '', 'Stock Adjustments')\n        , (320, '726102', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Stock Adjustments', '', '', '', '', '', 'Stock Adjustments')\n        , (321, '726103', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Stock Adjustments', '', '', '', '', '', 'Stock Adjustments')\n        , (322, '726104', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Net Operating Profit', 'Stock Adjustments', '', '', '', '', '', 'Stock Adjustments')\n        , (323, '727000', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Allocations')\n        , (324, '727100', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Realised')\n        , (325, '727101', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Realised')\n        , (326, '727102', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Realised')\n        , (327, '727103', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Realised')\n        , (328, '727104', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Realised')\n        , (329, '727105', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Realised')\n        , (330, '727106', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Realised')\n        , (331, '727200', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Unrealised')\n        , (332, '727201', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Unrealised')\n        , (333, '727202', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Unrealised')\n        , (334, '727203', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Unrealised')\n        , (335, '727204', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Unrealised')\n        , (336, '727205', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Unrealised')\n        , (337, '727206', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Foreign Exchange Gains and Losses', '', '', '', '', '', '', 'Foreign Exchange Gains and Losses Unrealised')\n        , (338, '727400', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Normalised EBIT', 'Total Equity Accounted Earnings', '', '', '', '', '', '', 'Total Equity Accounted Earnings')\n        , (339, '727600', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Asset Profit / Loss', 'Total Gains on Asset Disposals', '', '', '', '', '', '', 'Total Gains on Asset Disposals')\n        , (340, '727601', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Asset Profit / Loss', 'Total Gains on Asset Disposals', '', '', '', '', '', '', 'Total Gains on Asset Disposals')\n        , (341, '727700', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Asset Profit / Loss', 'Total Losses on Asset Disposals', '', '', '', '', '', '', 'Total Losses on Asset Disposals')\n        , (342, '727701', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Asset Profit / Loss', 'Total Losses on Asset Disposals', '', '', '', '', '', '', 'Total Losses on Asset Disposals')\n        , (343, '727800', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Impairment & Retstructuring', '', '', '', '', '', '', '', 'Impairment')\n        , (344, '727801', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Impairment & Retstructuring', '', '', '', '', '', '', '', 'Impairment')\n        , (345, '727802', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Impairment & Retstructuring', '', '', '', '', '', '', '', 'Impairment')\n        , (346, '727803', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Impairment & Retstructuring', '', '', '', '', '', '', '', 'Impairment')\n        , (347, '727804', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Impairment & Retstructuring', '', '', '', '', '', '', '', 'Impairment')\n        , (348, '727900', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Impairment & Retstructuring', '', '', '', '', '', '', '', 'Restructuring')\n        , (349, '727901', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Impairment & Retstructuring', '', '', '', '', '', '', '', 'Restructuring')\n        , (350, '728000', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'EBIT', 'Total Abnormal Items', '', '', '', '', '', '', '', 'Total Abnormal Items')\n        , (351, '729000', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Received')\n        , (352, '729001', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Received')\n        , (353, '729002', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Received')\n        , (354, '729100', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Paid')\n        , (355, '729101', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Paid')\n        , (356, '729102', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Paid')\n        , (357, '729103', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Paid')\n        , (358, '729104', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Paid')\n        , (359, '729105', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Paid')\n        , (360, '729106', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Interest', '', '', '', '', '', '', '', 'Interest Paid')\n        , (361, '729300', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Dividends', '', '', '', '', '', '', '', 'Dividends Paid')\n        , (362, '729301', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Dividends', '', '', '', '', '', '', '', 'Dividends Paid')\n        , (363, '729302', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Dividends', '', '', '', '', '', '', '', 'Dividends Paid')\n        , (364, '729303', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Dividends', '', '', '', '', '', '', '', 'Dividends Paid')\n        , (365, '729200', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Dividends', '', '', '', '', '', '', '', 'Dividends Received')\n        , (366, '729201', -1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Profit Before Tax', 'Total Interest and Dividends', 'Dividends', '', '', '', '', '', '', '', 'Dividends Received')\n        , (367, '730000', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Total Corporate and Deferred Tax', '', '', '', '', '', '', '', '', '', 'Total Corporate and Deferred Tax')\n        , (368, '730001', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Total Corporate and Deferred Tax', '', '', '', '', '', '', '', '', '', 'Total Corporate and Deferred Tax')\n        , (369, '730002', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Total Corporate and Deferred Tax', '', '', '', '', '', '', '', '', '', 'Total Corporate and Deferred Tax')\n        , (370, '730003', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Total Corporate and Deferred Tax', '', '', '', '', '', '', '', '', '', 'Total Corporate and Deferred Tax')\n        , (371, '730004', 1, 'Profit and Loss', 'Total Profit and Loss', 'Profit After Tax', 'Total Corporate and Deferred Tax', '', '', '', '', '', '', '', '', '', 'Total Corporate and Deferred Tax')\n        , (372, '730100', -1, 'Profit and Loss', 'Total Profit and Loss', 'Non Controlling Interest', '', '', '', '', '', '', '', '', '', '', 'Non Controlling Interest')\n        , (373, '730101', -1, 'Profit and Loss', 'Total Profit and Loss', 'Non Controlling Interest', '', '', '', '', '', '', '', '', '', '', 'Non Controlling Interest')\n        , (374, '730102', -1, 'Profit and Loss', 'Total Profit and Loss', 'Non Controlling Interest', '', '', '', '', '', '', '', '', '', '', 'Non Controlling Interest')\n    ) as v (\n        recid, mainaccountid, gl_calc_factor, gl_category_l0, gl_category_l1, gl_category_l2, gl_category_l3, gl_category_l4, gl_category_l5\n        , gl_category_l6, gl_category_l7, gl_category_l8, gl_category_l9, gl_category_l10, gl_category_l11, gl_category_l12, gl_category_l13\n    )\n\n)\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_tm1_gl_category_level_sk\n    , recid\n    , convert(numeric(6), mainaccountid) as mainaccountid\n    , gl_calc_factor\n    , gl_category_l0\n    , gl_category_l1\n    , gl_category_l2\n    , gl_category_l3\n    , gl_category_l4\n    , gl_category_l5\n    , gl_category_l6\n    , gl_category_l7\n    , gl_category_l8\n    , gl_category_l9\n    , gl_category_l10\n    , gl_category_l11\n    , gl_category_l12\n    , gl_category_l13\nfrom ct", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_dim_tm1_gl_category_level\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:00.516803Z", "completed_at": "2024-08-25T09:31:00.531184Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:00.532189Z", "completed_at": "2024-08-25T09:31:02.716654Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 2.2114694118499756, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.vw_d365_globaloptionsetmetadata", "compiled": true, "compiled_code": "\n\nselect [OptionSetName] as optionsetname\n    , [Option] as [option]\n    , [IsUserLocalizedLabel] as isuserlocalizedlabel\n    , [LocalizedLabelLanguageCode] as localizedlabellanguagecode\n    , [LocalizedLabel] as localizedlabel\n    , [GlobalOptionSetName] as globaloptionsetname\n    , [EntityName] as entityname\n    , [ExternalValue] as externalvalue\n    , [createdonpartition]\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"", "relation_name": "\"dwh_sanford\".\"stage\".\"vw_d365_globaloptionsetmetadata\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:57.642605Z", "completed_at": "2024-08-25T09:30:57.654479Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:57.657486Z", "completed_at": "2024-08-25T09:31:03.359897Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.734957456588745, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_fct_d365_inventitemprice_latest", "compiled": true, "compiled_code": "with ct1price as (\n    select * from (\n        select\n            ip.itemid\n            , id.inventsiteid\n            , ip.activationdate\n            , ip.priceunit\n            , ip.priceqty\n            , ip.pricecalcid\n            , ip.pricetype\n            , ip.price\n            , ip.createddatetime\n            , case when ip.priceunit in (0, 1) then ip.price else ip.price / ip.priceunit end as unitcost\n            , upper(ip.dataareaid) as inventitemprice_dataareaid\n            /* must order by activation date DESC and recid DESC (created date is not unique enough) */\n            , rank() over (\n                partition by ip.dataareaid, id.inventsiteid, ip.itemid\n                order by ip.dataareaid asc, id.inventsiteid asc, ip.activationdate desc, ip.recid desc\n            ) as rnk\n\n        from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventitemprice\" as ip\n        inner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventdim\" as id on ip.inventdimid = id.inventdimid\n        where\n            ip.[IsDelete] is null\n            /* ONLY INCLUDE COST TYPE = 0 (type 1 = Purchase Price) */\n            and ip.pricetype = 0\n            and ip.activationdate <= convert(date, getdate())\n            and id.configid is null\n    ) as x\n    where rnk = 1\n)\n\nselect * from ct1price", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_fct_d365_inventitemprice_latest\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:59.912223Z", "completed_at": "2024-08-25T09:30:59.923789Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:59.927912Z", "completed_at": "2024-08-25T09:31:04.560778Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 4.669949293136597, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_map_d365_nav_country", "compiled": true, "compiled_code": "select\n    [D365_COUNTRY_CODE] as d365_country_code\n    , [D365_COUNTRY_NAME] as d365_country_name\n    , [D365_COUNTRY_CONCAT] as d365_country_concat\n    , [D365_SALES_DISTRICT] as d365_sales_district\n    , [D365_DISTRICT_STATISTICS_GROUP] as d365_district_statistics_group\n    , [D365_CONTINENT] as d365_continent\n    , [D365_PLANNING_GROUP] as d365_planning_group\n    , [TM1_PLANNING_GROUP] as tm1_planning_group\n    , [TM1_CONTINENT] as tm1_continent\n    , [TM1_COUNTRY_NAME_HISTORICAL] as tm1_country_name_historical\n    , [TM1_HISTORICAL_COUNTRY] as tm1_historical_country\n    , [MAPPING_SUBREGION] as mapping_subregion\n    , [MAPPING_COUNTRY] as mapping_country\n    , row_number() over (partition by 0 order by [D365_COUNTRY_CODE]) as map_d365_nav_country_sk\nfrom \"lh_staging\".\"dbo\".\"country_mapping\"", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_map_d365_nav_country\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:03.392934Z", "completed_at": "2024-08-25T09:31:03.414203Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:03.417274Z", "completed_at": "2024-08-25T09:31:06.410860Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 3.0284199714660645, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_fct_d365_consolidationcompanies_1", "compiled": true, "compiled_code": "select distinct\n        co.dim_d365_company_sk dim_d365_company_origin_sk,\n        company_parent.dim_d365_company_sk dim_d365_company_parent_sk,\n        co.company_dataarea,\n        co.company_name,\n        company_parent.company_dataarea company_dataarea_parent,\n        company_parent.company_name company_name_parent\n    from \"dwh_sanford\".\"stage\".\"stg_d365_consolidationcompanies\" h\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_company\" co on upper(co.company_dataarea) = upper(h.company_dataarea) \n    left join \"dwh_sanford\".\"dw\".\"dim_d365_company\" company_parent on upper(company_parent.company_dataarea) = upper(h.consolidated_parent_co_dataarea)", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_fct_d365_consolidationcompanies_1\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:30:59.635349Z", "completed_at": "2024-08-25T09:30:59.644740Z"}, {"name": "execute", "started_at": "2024-08-25T09:30:59.644740Z", "completed_at": "2024-08-25T09:31:08.131797Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 8.509535074234009, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_fct_d365_vendorinvoicematching_1", "compiled": true, "compiled_code": "/* Get recids for tables involved in invoice to receipt to po to purch req linking\n-- start at vendpackingsliptrans as lines may not be linked to VendInvoiceInfoSubLine\n\n-- unique rec id is ods_d365_vendinvoicepackingslipquantitymatch\n-- however this may not be the case when ods_d365_vendinvoicepurchlink used\n-- see vipl_recid in (5637755340, 5637755341)\n\n-- so when using this table get the distinct recids need to join out to other tables\n\ne.g.\n-- purchase order lines to 'receipt' matched quantity\n-- distinct needed as vendinvoicepackingslipquantitymatch recids may not be unique in stg_fct_d365_vendorinvoicematching_1\nctepackingslipmatch as (\n    select pl.recid purchaseorderline_recid\n        , round(sum(vipsqm.quantity), 3) qty\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"purchline\" pl\n    join (\n        select distinct\n            vim.pl_recid\n            , vim.vipsqm_recid\n        from stg_fct_d365_vendorinvoicematching_1 vim\n        ) vim on pl.recid = vim.pl_recid\n    join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoicepackingslipquantitymatch\" vipsqm on vipsqm.recid = vim.vipsqm_recid\n    group by pl.recid\n    )\n*/\n\nwith recids as (\n    select \n    vpsl.recid vpsl_recid\n    , vpsj.recid vpsj_recid\n    , vipsqm.recid vipsqm_recid\n    , vit.recid vit_recid\n    , vij.recid vij_recid\n    , vipl.recid vipl_recid\n    , viisl.recid viisl_recid\n    , viil.recid viil_recid\n    , pl.recid pl_recid\n    , prl.recid prl_recid\n    \n    , viisl.parmid viisl_parmid\n    , vij.parmid vij_parmid\n    \nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendpackingsliptrans\" vpsl \njoin \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendpackingslipjour\" vpsj on vpsl.vendpackingslipjour = vpsj.recid \nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoicepackingslipquantitymatch\" vipsqm on vpsl.sourcedocumentline = vipsqm.packingslipsourcedocumentline\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoicetrans\" vit on vipsqm.invoicesourcedocumentline = vit.sourcedocumentline\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoicepurchlink\" vipl on vit.invoiceid = vipl.invoiceid\n    and vit.internalinvoiceid = vipl.internalinvoiceid\n    \nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoiceinfosubline\" viisl on viisl.journalreftableid = 9879\n    and vpsl.recid = viisl.journalrefrecid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoiceinfoline\" viil on viisl.linerefrecid = viil.recid\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendinvoicejour\" vij on vit.invoiceid = vij.invoiceid\n    and vit.internalinvoiceid = vij.internalinvoiceid\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"purchline\" pl on viil.purchlinerecid = pl.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"purchreqline\" prl on pl.purchreqlinerefid = prl.linerefid\n\n    \nwhere (viisl.parmid is null or viisl.parmid = vij.parmid)\n)\n\nselect recs.*\nfrom recids recs\nwhere not exists (\n    select 1\n    from recids r\n    where \n        recs.vpsl_recid = r.vpsl_recid\n        and recs.vpsj_recid = r.vpsj_recid\n        and recs.vipsqm_recid = r.vipsqm_recid\n        and recs.vit_recid = r.vit_recid\n        and recs.vij_recid = r.vij_recid\n        and recs.vipl_recid = r.vipl_recid\n        /* vendinvoiceinfosublines are diff */\n        and recs.viisl_recid != r.viisl_recid\n        /* keep the one that matches on parmid */\n        and r.viisl_parmid is not null\n    )", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_fct_d365_vendorinvoicematching_1\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:02.734840Z", "completed_at": "2024-08-25T09:31:03.679558Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:03.680563Z", "completed_at": "2024-08-25T09:31:08.160796Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.460969924926758, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_itemcategory", "compiled": true, "compiled_code": "\n\nwith ctitemcat as (\n    select\n        x.*\n        , rank() over (partition by x.item_cat_recid order by x.itemcategory_dataareaid) as rnkrec\n    from (\n        select\n            pcat.recid as item_cat_recid\n            , i.recid as item_recid\n            , i.product\n            , i.itemid\n            , pt.name as item_name\n            , enum.[LocalizedLabel] as producttype\n            , i.partition\n            , i.[Id]\n            , i.[SinkModifiedOn]\n            , cat.category_hierarchy as item_category\n            , cat.category_path_level_1 as category_l_1\n            , cat.category_path_level_2 as category_l_2\n            , cat.category_path_level_3 as category_l_3\n            , cat.category_path_level_4 as category_l_4\n            , cat.category_path_level_5 as category_l_5\n            , cat.category_path_level_6 as category_l_6\n            , cat.category_path_level_7 as category_l_7\n            , cat.category_path\n            , pcat.category as category_recid\n            , rank() over (partition by i.recid, cat.category_path_level_1 order by pcat.recid desc) as rnk\n            , upper(i.dataareaid) as itemcategory_dataareaid\n            , i.[IsDelete]\n            , i.versionnumber\n            , i.sysrowversion\n        from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventtable\" as i\n        inner join\n            \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresproduct\"\n                as p\n            on i.product = p.recid\n                and p.[IsDelete] is null\n        left join\n            \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresproducttranslation\"\n                as pt\n            on i.product = pt.recid\n                and pt.[IsDelete] is null\n                and pt.languageid = 'en-NZ'\n        inner join\n            \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresproductcategory\"\n                as pcat\n            on p.recid = pcat.product\n                and pcat.[IsDelete] is null\n        inner join \"dwh_sanford\".\"dw\".\"dim_d365_category\" as cat on pcat.category = cat.category_recid\n        left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as enum\n            on p.producttype = enum.[Option] and enum.[OptionSetName] = 'producttype'\n            where i.sysrowversion > 507825744\n    ) as x\n    where x.rnk = 1\n)\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(cast(concat(cast(item_cat_recid as varchar),rnkrec) as bigint) as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_d365_itemcategory_sk\n    , convert(bigint, concat(convert(varchar, item_cat_recid), rnkrec)) as item_cat_recid_key\n    , itemid\n    , item_name\n    , producttype\n    , [SinkModifiedOn]\n    , item_category\n    , category_l_1\n    , category_l_2\n    , category_l_3\n    , category_l_4\n    , category_l_5\n    , category_l_6\n    , category_l_7\n    , category_path\n    , itemcategory_dataareaid\n    , item_recid\n    , category_recid\n    , partition\n    , [IsDelete]\n    , versionnumber\n    , sysrowversion\nfrom ctitemcat", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_itemcategory\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:04.597531Z", "completed_at": "2024-08-25T09:31:05.505445Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:05.506494Z", "completed_at": "2024-08-25T09:31:09.806475Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 5.220672369003296, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_inventjournal", "compiled": true, "compiled_code": "\n\nselect\n    ijt.[Id] as dim_d365_inventjournal_sk\n    , ijt.recid as inventjournal_recid\n    , ijt.journalid\n    , ijn.journalnameid\n    , cast(nullif(json_value(inventjournalname_enum.enumtranslation, CONCAT('$.journaltype.\"', ijn.journaltype,'\"')), '') as varchar(2048)) as journaltype\n    , ijt.description\n    , ijt.posted\n    /*\n    , case\n        when convert(date, ijt.posteddatetime) = '1900-01-01' then null\n        when ijt.posteddatetimetzid = 37001 then ijtposteddatetime.NewZealandTime\n        else ijt.posteddatetime\n        end as posteddatetime\n    */\n    , ijtposteddatetime.newzealandtime as posteddatetime\n    /* if user is removed from dirpersonuser the result will be null, so use the userid. Use D365BatchUser rather than username Enterprise */\n    , cast(nullif(json_value(inventjournaltable_enum.enumtranslation, CONCAT('$.workflowapprovalstatus.\"', ijt.workflowapprovalstatus,'\"')), '') as varchar(2048)) as workflowapprovalstatus\n    , ijt.inventsiteid\n    , ijt.inventlocationid\n    , case when ijt.posteduserid = 'D365BatchUser' then 'D365BatchUser' else coalesce(p.name, ijt.posteduserid) end as postedby\n\n    , upper(ijt.dataareaid) as inventjournal_dataareaid\n    , ijt.[IsDelete]\n    , ijt.versionnumber\n    , ijt.sysrowversion\n\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventjournaltable\" as ijt\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventjournalname\" as ijn\n    on ijt.journalnameid = ijn.journalnameid\n        and ijt.dataareaid = ijn.dataareaid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpersonuser\" as u on ijt.posteduserid = u.[user]\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_party\" as p on u.personparty = p.party_recid\ncross apply dbo.f_convert_utc_to_nzt(ijt.posteddatetime) as ijtposteddatetime\ncross apply stage.f_get_enum_translation('inventjournaltable', '1033') as inventjournaltable_enum\ncross apply stage.f_get_enum_translation('inventjournalname', '1033') as inventjournalname_enum\n    where ijt.sysrowversion > 622061955", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_inventjournal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:08.207338Z", "completed_at": "2024-08-25T09:31:08.457355Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:08.458358Z", "completed_at": "2024-08-25T09:31:12.836837Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 4.638061285018921, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_worker", "compiled": true, "compiled_code": "\n\nselect\n    w.[Id] as dim_d365_worker_sk\n    , w.recid as worker_recid\n    , w.person as party_recid\n    , w.personnelnumber\n    , w.partition\n    , w.recversion\n    , w.[IsDelete]\n    , pt.name as worker_name\n    , pt.namealias\n    , pt.primary_email\n    , pt.primary_ph\n    , w.versionnumber\n    , w.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmworker\" as w\ninner join \"dwh_sanford\".\"dw\".\"dim_d365_party\" as pt on w.person = pt.party_recid\n    and pt.[IsDelete] is null\n    where w.sysrowversion > 500760653\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_worker\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-8 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.d365.dim_d365_inventbatch", "compiled": false, "compiled_code": null, "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_inventbatch\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:06.427734Z", "completed_at": "2024-08-25T09:31:06.707957Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:06.709070Z", "completed_at": "2024-08-25T09:31:12.941078Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 6.52133321762085, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_purchaseorder", "compiled": true, "compiled_code": "\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(pt.recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_d365_purchaseorder_sk\n    , pt.recid as purchaseorder_recid\n    , upper(pt.dataareaid) as purchaseorder_dataareaid\n    , pt.purchid\n    , pt.currencycode\n    , pt.invoiceaccount\n    , pt.orderaccount\n    , pt.vendgroup\n    , pt.vendorref\n    , pt.deliveryname\n    , pt.deliverydate\n    , pt.deliverypostaladdress\n    , pt.dlvmode\n    , pt.dlvterm\n    , pt.email\n    , pt.defaultdimension\n    , pt.purchname\n    , pt.purchpoolid\n    , pt.purchstatus as purchstatusid\n    , eps.[LocalizedLabel] as purchstatus\n    , pt.purchasetype as purchasetypeid\n    , ept.[LocalizedLabel] as purchasetype\n    , pt.inventsiteid as siteid\n    , s.name as site_name\n    , upper(s.dataareaid) as site_dataareaid\n    , pt.inventlocationid as warehouseid\n    , w.name as warehouse_name\n    , upper(w.dataareaid) as warehouse_dataareaid\n    , pt.intercompanyorder\n    , upper(pt.intercompanycompanyid) as intercompanycompanyid\n    , pt.intercompanysalesid\n    , pt.payment\n    , pt.projid\n    , p.name as orderer\n    , pt.partition\n    , pt.[IsDelete]\n    , pt.versionnumber\n    , pt.sysrowversion\n\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"purchtable\" as pt\n\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventsite\"\n        as s\n    on pt.inventsiteid = s.siteid\n        and upper(s.dataareaid) = upper(pt.dataareaid)\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as eps\n    on lower(eps.[OptionSetName]) = lower('PurchStatus')\n        and pt.purchstatus = eps.[Option]\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as ept\n    on lower(ept.[OptionSetName]) = lower('PurchaseType')\n        and pt.purchasetype = ept.[Option]\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventlocation\"\n        as w\n    on pt.inventlocationid = w.inventlocationid\n        and upper(pt.dataareaid) = upper(w.dataareaid)\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmworker\" as h on pt.workerpurchplacer = h.recid\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_party\" as p on h.person = p.party_recid\n    where pt.sysrowversion > 655737104", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_purchaseorder\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:08.148796Z", "completed_at": "2024-08-25T09:31:08.827239Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:08.828306Z", "completed_at": "2024-08-25T09:31:13.555616Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.417125463485718, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_purchaserequisition", "compiled": true, "compiled_code": "\n\nselect\n    pt.[Id] as dim_d365_purchaserequisition_sk\n    , pt.recid as purchaserequisition_recid\n\n    , pt.purchreqid\n    , pt.purchreqname\n    , sdat.newzealandtime as submitteddatetime_nzt\n    , pt.createdby\n    , pt.submittedby\n    /* all valid dates have 37001 as timezone id = GMT */\n    , p.name as originator\n\n    , pt.purchreqtype as purchreqtypeid\n\n    , eprt.[LocalizedLabel] as purchreqtype\n    , pt.requisitionpurpose as requisitionpurposeid\n    , eprp.[LocalizedLabel] as requisitionpurpose\n\n    , pt.requisitionstatus as requisitionstatusid\n    , eprs.[LocalizedLabel] as requisitionstatus\n    , pt.projid\n    , pt.partition\n    , convert(date, pt.requireddate) as requesteddate\n    , convert(date, pt.transdate) as accountingdate\n\n    , case when convert(date, pt.submitteddatetime) = '1900-01-01' then null else pt.submitteddatetime end as submitteddatetime\n    , upper(co.dataarea) as buyinglegalentity_dataareaid\n    , pt.versionnumber\n    , pt.sysrowversion\n\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"purchreqtable\" as pt\ncross apply dbo.f_convert_utc_to_nzt(pt.submitteddatetime) as sdat\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as eprt\n    on pt.purchreqtype = eprt.[Option]\n        and eprt.[OptionSetName] = 'purchreqtype'\n        and eprt.[EntityName] = 'purchreqtable'\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as eprp\n    on pt.requisitionpurpose = eprp.[Option]\n        and eprp.[OptionSetName] = 'requisitionpurpose'\n        and eprp.[EntityName] = 'purchreqtable'\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as eprs\n    on pt.requisitionstatus = eprs.[Option]\n        and eprs.[OptionSetName] = 'requisitionstatus'\n        and eprs.[EntityName] = 'purchreqtable'\n\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"companyinfo\" as co on pt.companyinfodefault = co.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmworker\" as h on pt.originator = h.recid\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_party\" as p on h.person = p.party_recid\n    where pt.sysrowversion > 543995398", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_purchaserequisition\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:13.580217Z", "completed_at": "2024-08-25T09:31:13.594806Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:13.595802Z", "completed_at": "2024-08-25T09:31:15.750194Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 2.216789484024048, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_contact_invoice", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact\"\nwhere upper(role) like '%INVOICE%'", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_invoice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:15.818605Z", "completed_at": "2024-08-25T09:31:15.834594Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:15.838188Z", "completed_at": "2024-08-25T09:31:17.690967Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 1.9194743633270264, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_contact_poconfirm", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact\"\nwhere upper(role) like '%PO CONFIRM%'", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_poconfirm\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:17.748643Z", "completed_at": "2024-08-25T09:31:17.759685Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:17.760680Z", "completed_at": "2024-08-25T09:31:20.166719Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 2.4272327423095703, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_contact_remitto", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact\"\nwhere upper(role) like '%REMIT TO%'", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_remitto\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:12.861979Z", "completed_at": "2024-08-25T09:31:12.873983Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:12.874982Z", "completed_at": "2024-08-25T09:31:20.290909Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 7.437194347381592, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_vessel", "compiled": true, "compiled_code": "\n\nselect\n    dv.mserp_dxc_vesselentityid as dim_d365_vessel_sk\n    , dv.mserp_dxc_vesselentityid as vessel_recid -- todo\n    , dv.mserp_vesselid as vesselid\n    , dv.mserp_vesselname as vesselname\n    , dv.mserp_triptypeid as triptypeid\n    , dv.mserp_tripidnumbersequencecode as tripidnumbersequencecode\n    , dv.mserp_inventlocationid as inventlocationid\n    , dv.mserp_vendaccount as vendaccount\n    , dv.mserp_equipment as equipment\n    , dv.mserp_vesselcallsign as vesselcallsign\n    , dv.mserp_createpurchaseorder as createpurchaseorder\n    , dv.mserp_createtransferorder as createtransferorder\n    , dv.mserp_sanfordvessel as sanfordvessel\n    , null as createddatetime -- todo\n    , null as createdby -- todo\n    , dv.mserp_faoareaid as faoareaid\n    , dv.mserp_createproductionorders as createproductionorders\n    , null as partition -- todo\n    , dv.[IsDelete]\n    /* case when replace(tripidnumbersequencecode,'TRP_','')=inventlocationid then 1 else 0 end is_warehouse, */\n    , case when dv.mserp_triptypeid = 'DEEP WATER SCAMPI' then 'SCAMPI'\n        when dv.mserp_triptypeid = 'DEEP WATER' and dv.mserp_equipment = 'BLL' then 'LONGLINE'\n        when dv.mserp_triptypeid = 'DEEP WATER' and dv.mserp_equipment = 'BT' then 'FACTORY'\n        else ''\n    end as vessel_type\n    , upper(dv.mserp_dataareaid) as vessel_dataareaid\n    , case when w.is_vessel = 1 then 1 else 0 end as is_warehouse\n    , 0 as versionnumber\n    , 0 as sysrowversion\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_vessel\" as dv\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_warehouse\" as w\n        on dv.mserp_inventlocationid = w.warehouseid\n            and w.warehouse_dataareaid = upper(dv.mserp_dataareaid)\n            and w.[IsDelete] is null", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_vessel\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:20.185476Z", "completed_at": "2024-08-25T09:31:20.190452Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:20.191449Z", "completed_at": "2024-08-25T09:31:21.520964Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 1.3527913093566895, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_d365_lea_contact_rfq", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact\"\nwhere upper(role) like '%RFQ%'", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_rfq\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:12.955551Z", "completed_at": "2024-08-25T09:31:13.273363Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:13.273363Z", "completed_at": "2024-08-25T09:31:22.123589Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 9.17511534690857, "adapter_response": {"_message": "OK", "rows_affected": 5}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_financialdimensionvalueset", "compiled": true, "compiled_code": "\n\nwith dimattrib as (\n    select\n        d.[Id] as dim_d365_financialdimensionvalueset_sk\n        , d.recid as financialdimensionvalueset_recid\n        , d.mainaccount\n        , d.mainaccountvalue\n        , m.name as mainaccountname\n        , d.d1_businessunit\n        , d.d1_businessunitvalue\n        , d1pt.d1_businessunit_name\n        , d.d2_costcenter\n\n        , d.d2_costcentervalue\n        , d2pt.d2_costcenter_name\n        , d.d4_function\n\n        , d.d4_functionvalue\n        , d4.d4_function_name\n        , d.d3_department\n\n        , d.d3_departmentvalue\n        , d3.d3_department_name\n        , d.d5_customer\n\n        , d.d5_customervalue\n        , d5pt.d5_customer_name\n        , d.d6_vendor\n\n        , d.d6_vendorvalue\n        , d6pt.d6_vendor_name\n        , d.d7_project\n\n        , d.d7_projectvalue\n        , d.d8_legalentity\n\n        , d.d8_legalentityvalue\n        , d.partition\n\n        , d.[IsDelete]\n        , d.versionnumber\n        , d.sysrowversion\n        , case\n            when\n                len(coalesce(d.mainaccountvalue, '')) > 0\n                then concat(\n                        coalesce(d.mainaccountvalue, '')\n                        , '-'\n                        , coalesce(d.d1_businessunitvalue, '')\n                        , '-'\n                        , coalesce(d.d2_costcentervalue, '')\n                        , '-'\n                        , coalesce(d.d4_functionvalue, '')\n                        , '-'\n                        , coalesce(d.d3_departmentvalue, '')\n                        , '-'\n                        , coalesce(d.d5_customervalue, '')\n                        , '-'\n                        , coalesce(d.d6_vendorvalue, '')\n                        , '-'\n                        , coalesce(d.d7_projectvalue, '')\n                        , '-'\n                        , coalesce(d.d8_legalentityvalue, '')\n                    )\n            when\n                len(coalesce(d.mainaccountvalue, '')) = 0\n                then concat(\n                        coalesce(d.d1_businessunitvalue, '')\n                        , '-'\n                        , coalesce(d.d2_costcentervalue, '')\n                        , '-'\n                        , coalesce(d.d4_functionvalue, '')\n                        , '-'\n                        , coalesce(d.d3_departmentvalue, '')\n                        , '-'\n                        , coalesce(d.d5_customervalue, '')\n                        , '-'\n                        , coalesce(d.d6_vendorvalue, '')\n                        , '-'\n                        , coalesce(d.d7_projectvalue, '')\n                        , '-'\n                        , coalesce(d.d8_legalentityvalue, '')\n                    )\n        end as dimension_ledgeraccount\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dimensionattributevalueset\" as d\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"mainaccount\" as m on d.mainaccount = m.recid\n    left join \"dwh_sanford\".\"stage\".\"stg_d365_davs_businessunit\" as d1pt on d.recid = d1pt.financialdimensionvalueset_recid\n    left join \"dwh_sanford\".\"stage\".\"stg_d365_davs_costcenter\" as d2pt on d.recid = d2pt.financialdimensionvalueset_recid\n    left join \"dwh_sanford\".\"stage\".\"stg_d365_davs_function\" as d4 on d.recid = d4.financialdimensionvalueset_recid\n    left join \"dwh_sanford\".\"stage\".\"stg_d365_davs_department\" as d3 on d.recid = d3.financialdimensionvalueset_recid\n    left join \"dwh_sanford\".\"stage\".\"stg_d365_davs_customer\" as d5pt on d.recid = d5pt.financialdimensionvalueset_recid\n    left join \"dwh_sanford\".\"stage\".\"stg_d365_davs_vendor\" as d6pt on d.recid = d6pt.financialdimensionvalueset_recid\n        where d.sysrowversion > 628626480\n    \n)\n\n, dal as (\n    select\n        *\n        , concat(\n            coalesce(mainaccountname, '')\n            , '-'\n            , coalesce(d1_businessunit_name, '')\n            , '-'\n            , coalesce(d2_costcenter_name, '')\n            , '-'\n            , coalesce(d4_function_name, '')\n            , '-'\n            , coalesce(d3_department_name, '')\n            , '-'\n            , coalesce(d5_customer_name, '')\n            , '-'\n            , coalesce(d6_vendor_name, '')\n            , '-'\n            , coalesce(d7_projectvalue, '')\n            , '-'\n            , coalesce(d8_legalentityvalue, '')\n        ) as dimension_ledgeraccount_text\n    from dimattrib\n)\n\nselect\n    dal.dim_d365_financialdimensionvalueset_sk\n    , dal.financialdimensionvalueset_recid\n    , dal.dimension_ledgeraccount\n    , dal.mainaccount\n    , dal.mainaccountvalue\n    , dal.mainaccountname\n    , dal.d1_businessunit\n    , dal.d1_businessunitvalue\n    , dal.d1_businessunit_name\n    , dal.d2_costcenter\n    , dal.d2_costcentervalue\n    , dal.d2_costcenter_name\n    , dal.d4_function\n    , dal.d4_functionvalue\n    , dal.d4_function_name\n    , dal.d3_department\n    , dal.d3_departmentvalue\n    , dal.d3_department_name\n    , dal.d5_customer\n    , dal.d5_customervalue\n    , dal.d5_customer_name\n    , dal.d6_vendor\n    , dal.d6_vendorvalue\n    , dal.d6_vendor_name\n    , dal.d7_project\n    , dal.d7_projectvalue\n    , dal.d8_legalentity\n    , dal.d8_legalentityvalue\n    , dal.partition\n    , dal.dimension_ledgeraccount_text\n    , dal.[IsDelete]\n    , dal.versionnumber\n    , dal.sysrowversion\nfrom dal\nunion all\nselect\n    fdv.dim_d365_financialdimensionvalueset_sk\n    , fdv.financialdimensionvalueset_recid\n    , fdv.dimension_ledgeraccount\n    , fdv.mainaccount\n    , fdv.mainaccountvalue\n    , fdv.mainaccountname\n    , fdv.d1_businessunit\n    , fdv.d1_businessunitvalue\n    , fdv.d1_businessunit_name\n    , fdv.d2_costcenter\n    , fdv.d2_costcentervalue\n    , fdv.d2_costcenter_name\n    , fdv.d4_function\n    , fdv.d4_functionvalue\n    , fdv.d4_function_name\n    , fdv.d3_department\n    , fdv.d3_departmentvalue\n    , fdv.d3_department_name\n    , fdv.d5_customer\n    , fdv.d5_customervalue\n    , fdv.d5_customer_name\n    , fdv.d6_vendor\n    , fdv.d6_vendorvalue\n    , fdv.d6_vendor_name\n    , fdv.d7_project\n    , fdv.d7_projectvalue\n    , fdv.d8_legalentity\n    , fdv.d8_legalentityvalue\n    , fdv.partition\n    , fdv.dimension_ledgeraccount_text\n    , fdv.[IsDelete]\n    , fdv.versionnumber\n    , fdv.sysrowversion\nfrom\n    \"dwh_sanford\".\"stage\".\"stg_nav_financialdimensionvalueset\" as fdv", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionvalueset\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:09.821748Z", "completed_at": "2024-08-25T09:31:09.834861Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:09.835747Z", "completed_at": "2024-08-25T09:31:24.214457Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 14.396779775619507, "adapter_response": {"_message": "OK", "rows_affected": 72634}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_dim_d365_workflowapproval_1", "compiled": true, "compiled_code": "\n\n/* Not intended to be an actual dimension table, required for Facts PurchaseOrderLine, PurchaseRequisitionLine & VendPackingSlipLine */\n\nwith ct as (\n    select \n        \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast(wtst.recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(wtt.recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n as dim_d365_workflowapproval_sk\n        -- { { d b t _ utils.generate_surrogate_key(['wtst.recid', 'wtt.recid', 'pprwt.mserp_recid', 'pprwl.recid'])}} as dim_d365_workflowapproval_sk\n        , wtst.instancenumber\n        /* use to join to Customer, vendor, bank acct if required \n            contexttableid = 67286 links to cutom dxc table for Purch line & purch req line */\n        , wtst.contexttableid\n        , wtst.contextrecid\n        , wtst.document\n        , wtst.documenttype\n        , wtst.originator \n        , ewtt.[LocalizedLabel] as trackingtype\n        , ewtc.[LocalizedLabel] as trackingcontext\n        , case when wtt.[user] = 'D365BatchUser' then 'D365BatchUser' else p.name end as approver\n        /* Admin or Batch user can have approval record after actual user - prioritise actual user \n            multiple instancenumbers can exist per contextrecid when not linked to ods_d365_dxc_purchpurchreqworkflowtable\n            when this stg dim is used to join on contexttableid & contextrecid ensure that approval_context_rnk =1 in join clause\n        */\n        , rank() over(partition by wtst.instancenumber, wtst.contextrecid\n                    order by case when wtt.[user] in ('D365BatchUser', 'Admin') then 1 else 0 end\n                        , wtt.createddatetime desc) as approval_rnk\n        , rank() over(partition by wtst.contexttableid, wtst.contextrecid\n                    order by case when wtt.[user] in ('D365BatchUser', 'Admin') then 1 else 0 end\n                        , wtt.createddatetime desc) as approval_context_rnk\n\n        , apdnz.newzealandtime as approvaldatetime_nzt\n    --    , pprwt.mserp_documentnum\n          , null as documentnum\n    --    , pprwt.mserp_submitter\n          , null as submitter\n    --    , pprwt.mserp_createdby\n          , null as createdby\n    --    , pprwt.mserp_costcentreowner\n          , null as costcentreowner\n    --    , pprwt.mserp_costcentrevalue\n          , null as costcentrevalue\n    --    , pprwt.mserp_costcentrename\n          , null as  costcentrename\n    --    , round(pprwt.mserp_costcentreownerapprovalamount, 2) as costcentreownerapprovalamount\n          , null as costcentreownerapprovalamount\n    --    , pprwt.mserp_budgetcontrol\n          , null as budgetcontrol\n    --    , eppws.[LocalizedLabel] as workflowstatus\n          , null as workflowstatus\n    --    , eppwls.[LocalizedLabel] as workflowstatus_line\n          , null as workflowstatus_line\n\n    --    , po.purchid\n          , null as purchid\n    --    , po.recid as purch_recid\n          , null as purch_recid\n    --    , pol.recid as purchline_recid\n          , null as purchline_recid\n    --    , pr.purchreqid\n          , null as purchreqid\n    --    , pr.recid as purchreq_recid\n          , null as purchreq_recid\n    --    , prl.recid as purchreqline_recid\n          , null as purchreqline_recid\n\n        , upper(wtst.contextcompanyid) as dataareaid  \n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"workflowtrackingstatustable\" wtst\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"workflowtrackingtable\" wtt on wtst.recid = wtt.workflowtrackingstatustable\n\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as ewtt on ewtt.[EntityName] = 'workflowtrackingtable'\n        and ewtt.[OptionSetName] = 'trackingtype'\n        and wtt.trackingtype = ewtt.[Option]\n\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as ewtc on ewtc.[EntityName] = 'workflowtrackingtable'\n        and ewtc.[OptionSetName] = 'trackingcontext'\n        and wtt.trackingcontext = ewtc.[Option]\n/*\n    left join { {s o u rce('mserp', 'dxc_purchpurchreqworkflowtable')}} pprwt on wtst.contexttableid = 67286\n        and wtst.contextrecid = pprwt.mserp_recid\n        \n    left join { {s o u rce('fno', 'GlobalOptionsetMetadata') }} as eppws on eppws.[EntityName] = 'dxc_purchpurchreqworkflowtable'\n        and eppws.[OptionSetName] = 'mserp_workflowstatus'\n        and pprwt.mserp_workflowstatus = eppws.[Option]\n\n    / * TableID 19571 = PurchReq, 19637 = PurchOrder * /\n    left join { { s o u rce('fno', 'purchtable')}} po on pprwt.mserp_reftableid = 19637\n        and pprwt.mserp_refrecid = po.recid\n    left join { { s o u rce('fno', 'purchreqtable')}} pr on pprwt.mserp_reftableid = 19571\n        and pprwt.mserp_refrecid = pr.recid\n\n    / * PO / PR Lines can be approved by different people in same PO / PR * /\n    left join { { s o u rce('fno', 'dxc_purchpurchreqworkflowline')}} pprwl on pprwt.mserp_recid = pprwl.purchpurchreqworkflowtablerecid\n\n    left join { { s o u rce('fno', 'GlobalOptionsetMetadata') }} as eppwls on eppwls.[EntityName] = 'dxc_purchpurchreqworkflowline'\n        and eppwls.[OptionSetName] = 'mserp_workflowstatus'\n        and pprwl.workflowstatus = eppwls.[Option]\n\n    / * TableID 6354 = PurchLine, 4574 = PurchReqLine * /\n    left join { { s o u rce('fno', 'purchline')}} pol on pprwl.reftableid = 6354\n        and pprwl.refrecid = pol.recid\n\n    left join { { s o u rce('fno', 'purchreqline')}} prl on pprwl.reftableid = 4574\n        and pprwl.refrecid = prl.recid\n*/\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dirpersonuser\" u on wtt.[user] = u.[user]\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_party\" p on u.personparty = p.party_recid\n    cross apply dbo.f_convert_utc_to_nzt(wtt.createddatetime) as apdnz\n    where \n        (\n            /* auto Admin approval */\n            (ewtt.[LocalizedLabel] = 'Completion' and ewtc.[LocalizedLabel] = 'Approval')\n            or\n            /* user approved */\n            (ewtt.[LocalizedLabel] = 'Approval' and ewtc.[LocalizedLabel] = 'Work item')\n        )\n)\n\nselect dim_d365_workflowapproval_sk,\n  instancenumber,\n  contexttableid,\n  contextrecid,\n  document,\n  documenttype,\n  originator,\n  trackingtype,\n  trackingcontext,\n  approver,\n  approval_context_rnk,\n  approvaldatetime_nzt,\n  documentnum,\n  submitter,\n  createdby,\n  costcentreowner,\n  costcentrevalue,\n  costcentrename,\n  costcentreownerapprovalamount,\n  budgetcontrol,\n  workflowstatus,\n  workflowstatus_line,\n  purchid,\n  purch_recid,\n  purchline_recid,\n  purchreqid,\n  purchreq_recid,\n  purchreqline_recid,\n  dataareaid,\n  approval_rnk\nfrom ct\nwhere approval_rnk = 1", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_dim_d365_workflowapproval_1\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:20.306965Z", "completed_at": "2024-08-25T09:31:20.575438Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:20.576870Z", "completed_at": "2024-08-25T09:31:25.657604Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 5.358012914657593, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_mainaccount", "compiled": true, "compiled_code": "\n\nselect\n    m.[Id] as dim_d365_mainaccount_sk\n    , m.recid as mainaccount_recid\n    , m.mainaccountid\n    , m.name as mainaccount_name\n    , concat(m.mainaccountid, ' - ', m.name) as mainaccount\n    , m.dxc_workflowspendtypeid\n    , m.accountcategoryref\n    , m.partition\n    , m.[IsDelete]\n    , l.gl_calc_factor\n    , l.gl_category_l0\n    , l.gl_category_l1\n    , l.gl_category_l2\n    , l.gl_category_l3\n    , l.gl_category_l4\n    , l.gl_category_l5\n    , l.gl_category_l6\n    , l.gl_category_l7\n    , l.gl_category_l8\n    , l.gl_category_l9\n    , l.gl_category_l10\n    , l.gl_category_l11\n    , l.gl_category_l12\n    , l.gl_category_l13\n    , m.versionnumber\n    , m.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"mainaccount\" as m\nleft join \"dwh_sanford\".\"stage\".\"stg_dim_tm1_gl_category_level\" as l on m.mainaccountid = l.mainaccountid\n    where m.sysrowversion > 166381072", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_mainaccount\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:21.559747Z", "completed_at": "2024-08-25T09:31:21.854182Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:21.855287Z", "completed_at": "2024-08-25T09:31:27.007142Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 5.462405681610107, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_country", "compiled": true, "compiled_code": "\n\nselect\n    cr.[Id] as dim_d365_country_sk\n    , cr.recid as country_recid\n    , cr.isocode as country_isocode\n    , crt.shortname as country_name\n    , crt.longname as country_lname\n    , cr.partition\n    , cr.[IsDelete]\n    , cr.versionnumber\n    , cr.sysrowversion\n    , upper(cr.countryregionid) as countryregionid\n    , replace(mc.tm1_continent, ' Sales Destination', '') as continent\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticsaddresscountryregion\" as cr\ninner join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticsaddresscountryregiontranslation\" as crt\n    on upper(cr.countryregionid) = upper(crt.countryregionid)\n        and crt.languageid = 'en-NZ'\n        and crt.[IsDelete] is null\nleft join \"dwh_sanford\".\"stage\".\"stg_map_d365_nav_country\" as mc on upper(crt.countryregionid) = upper(mc.d365_country_code)\n\n    where cr.sysrowversion > 0\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_country\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:22.137138Z", "completed_at": "2024-08-25T09:31:22.490533Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:22.491533Z", "completed_at": "2024-08-25T09:31:27.364866Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.259793996810913, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_vendorpackingslip", "compiled": true, "compiled_code": "\n\nselect\n    v.[Id] as dim_d365_vendorpackingslip_sk\n\n    , v.recid as vendorpackingslip_recid\n    , v.orderaccount\n\n    , v.invoiceaccount\n    , v.packingslipid\n    , v.defaultdimension\n\n    , v.deliveryname\n    , v.deliverypostaladdress\n    , v.dlvmode\n    , v.dlvterm\n\n    , v.intercompanysalesid\n    , v.purchid\n    , v.purchasetype as purchasetypeid\n\n    , ept.[LocalizedLabel] as purchasetype\n    , upper(v.dataareaid) as vendorpackingslip_dataareaid\n\n    , convert(date, v.deliverydate) as deliverydate\n    , case when convert(date, v.documentdate) = '1900-01-01' then null else convert(date, v.documentdate) end as documentdate\n    , upper(v.intercompanycompanyid) as intercompanycompanyid\n\n    , coalesce(p.name, po.orderer) as requester\n    , v.versionnumber\n    , v.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendpackingslipjour\" as v\nleft join\n    \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\"\n        as ept\n    on lower(ept.[OptionSetName]) = lower('PurchaseType')\n        and v.purchasetype = ept.[Option]\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmworker\" as w on v.requester = w.recid\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_party\" as p on w.person = p.party_recid\n\nleft join\n    \"dwh_sanford\".\"dw\".\"dim_d365_purchaseorder\"\n        as po\n    on upper(v.dataareaid) = po.purchaseorder_dataareaid\n        and v.purchid = po.purchid\n    where v.sysrowversion > 642056985\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_vendorpackingslip\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:24.225132Z", "completed_at": "2024-08-25T09:31:25.307704Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:25.311770Z", "completed_at": "2024-08-25T09:31:32.258768Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 8.052886962890625, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_vendor", "compiled": true, "compiled_code": "\n\nselect\n    v.[Id] as dim_d365_vendor_sk\n    , v.recid as vendor_recid\n    , v.accountnum\n    , p.name\n    , v.party as party_recid\n    , v.vendgroup\n    , p.orgnumber\n    , v.dxc_vesselid as vesselid\n    , v.dxc_vesselname as vesselname\n    , v.youraccountnum\n    , v.markupgroup\n    , v.taxgroup\n    , v.vatnum\n    , v.paymtermid\n    , v.paymmode\n    , v.paymspec\n    , v.currency\n    , v.partition\n    , v.blocked as blockedid\n    , eb.[LocalizedLabel]\n    , v.dxc_lfrnumber as lfrnumber\n    , v.dxc_quotapermitcode as quotapermitcode\n    , v.dxc_licencegroupid as licencegroupid\n    , v.dxc_frozenpackaging as frozenpackaging\n    , v.pricegroup\n    , email_po.locators as email_po\n    , email_invoice.locators as email_invoice\n    , email_remit.locators as email_remitto\n    , email_rfq.locators as email_rfq\n    , ll.description as primary_address_description\n    , lpa.street as primary_address_street\n    , lpa.city as primary_address_city\n    , lpa.state as primary_address_state\n    , lpa.zipcode as primary_address_postcode\n    , lpa.countryregionid as primary_address_countrycode\n    , v.[IsDelete]\n    , upper(\n        v.dataareaid\n    ) as vendor_dataareaid\n    , nullif(v.blockedreleasedate, '1900-01-01') as blockedreleasedate\n    , convert(date, v.createddatetime) as createddate\n    , trim(\n        case\n            when right(\n                    lpa.address\n                    , 2\n                ) = '%1' then left(lpa.address, len(lpa.address) - 2)\n            else lpa.address\n        end\n    ) as primary_address\n    , v.versionnumber\n    , v.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vendtable\" as v\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"vw_dirpartytable\" as p on v.party = p.recid and p.[IsDelete] is null\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticslocation\" as ll on p.primaryaddresslocation = ll.recid\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"logisticspostaladdress\" as lpa on ll.recid = lpa.location and getdate() between lpa.validfrom and lpa.validto\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as eb on eb.[OptionSetName] = 'blocked' and eb.[EntityName] = 'vendtable' and v.blocked = eb.[Option]\nleft join \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_poconfirm\" as email_po on v.party = email_po.party_recid\nleft join \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_invoice\" as email_invoice on v.party = email_invoice.party_recid\nleft join \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_remitto\" as email_remit on v.party = email_remit.party_recid\nleft join \"dwh_sanford\".\"stage\".\"stg_d365_lea_contact_rfq\" as email_rfq on v.party = email_rfq.party_recid\n    where v.sysrowversion > 157497711\n", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_vendor\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-5 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.d365.dim_d365_triporder", "compiled": false, "compiled_code": null, "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_triporder\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:27.415534Z", "completed_at": "2024-08-25T09:31:28.327696Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:28.329213Z", "completed_at": "2024-08-25T09:31:33.527639Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 6.135066986083984, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_port", "compiled": true, "compiled_code": "\n\nselect\n    p.[Id] as dim_d365_port_sk\n    , p.recid as port_recid\n    , p.portid\n    , p.description as port_desc\n    , p.dxc_country as country_code\n    , c.country_isocode\n    , c.country_name\n    , c.continent\n    , upper(p.dataareaid) as port_dataareaid\n    , p.[IsDelete]\n    , p.versionnumber\n    , p.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"intrastatport\" as p\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_country\" as c on p.dxc_country = c.countryregionid\n    where p.sysrowversion > 37213225", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_port\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:27.031861Z", "completed_at": "2024-08-25T09:31:27.901098Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:27.902095Z", "completed_at": "2024-08-25T09:31:36.215075Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 9.199889421463013, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_project", "compiled": true, "compiled_code": "\n\nselect\n    pr.[Id] as dim_d365_project_sk\n    , pr.recid as project_recid\n    , pr.projid\n    , pr.custaccount\n    , pr.defaultdimension\n    , fd.d1_businessunitvalue as businessunit\n    , fd.d1_businessunit_name as businessunit_name\n    , pr.deliverylocation\n    , pr.dlvname\n    , pr.jobid\n    , pr.name\n    , pr.parentid\n    , pr.projgroupid\n    , pg.projgroup_desc\n    , pg.projgrouptype\n    , pr.projinvoiceprojid\n    , pr.projledgerposting\n    , pr.projlinepropertysearch\n    , pr.projpricegroup\n    , pr.psaforecastmodelidexternal\n    , pr.psaschedcalendarid\n    , null as sortingid\n    , null as sortingid2_\n    , null as sortingid3_\n    , e.[LocalizedLabel] as project_status\n    , pr.taxgroupid\n    , pr.type\n    , pr.validateprojcategory\n    , pt.name as project_responsible\n    , pr.dxc_salmonunit as salmonunit\n    , pr.dxc_salmonyearclass as salmonyearclass\n\n    , pr.dxc_salmoninputid as salmoninputid\n    , pr.dxc_salmonfishgroupnumber as salmonfishgroupnumber\n    , pr.dxc_salmoncompanyid as salmoncompanyid\n    , pr.dxc_salmonhatcherysupplierid as salmonhatcherysupplierid\n    /*\n    ,pr.workerresponsible\n    ,pr.workerresponsiblefinancial\n    ,pr.workerresponsiblesales\n    */\n    , pr.dxc_salmonsiteid as salmonsiteid\n\n    , pr.dxc_salmonstageid as salmonstageid\n    , pr.dxc_salmontypeid as salmontypeid\n    , pr.dxc_musselfarm as musselfarm\n    , pr.dxc_musselline as musselline\n    , pr.dxc_musselcropid as musselcropid\n    , pr.dxc_musselspattypeid as musselspattypeid\n    , pr.dxc_musselcroptypeid as musselcroptypeid\n    , pr.dxc_musselgrowingareaid as musselgrowingareaid\n    , pr.dxc_musselsourcecropid1 as musselsourcecropid1\n    , pr.dxc_musselmetreseeded1 as musselmetreseeded1\n    , pr.dxc_musselsourcecropid2 as musselsourcecropid2\n    , pr.dxc_musselmetreseeded2 as musselmetreseeded2\n    , pr.partition\n    , pr.[IsDelete]\n    , case when convert(date, pr.created) = '1900-01-01' then null else convert(date, pr.created) end as created\n    , concat(pr.projid, ' - ', pr.name) as proj_desc\n    , case when convert(date, pr.startdate) = '1900-01-01' then null else convert(date, pr.startdate) end as startdate\n    , case when convert(date, pr.projectedstartdate) = '1900-01-01' then null else convert(date, pr.projectedstartdate) end as projectedstartdate\n    , case when convert(date, pr.projectedenddate) = '1900-01-01' then null else convert(date, pr.projectedenddate) end as projectedenddate\n    , case when convert(date, pr.psaschedstartdate) = '1900-01-01' then null else convert(date, pr.psaschedstartdate) end as psaschedstartdate\n    , case when convert(date, pr.psaschedenddate) = '1900-01-01' then null else convert(date, pr.psaschedenddate) end as psaschedenddate\n    , convert(date, prcreateddatetime.newzealandtime) as createddatetime\n    , convert(date, prmodifieddatetime.newzealandtime) as modifieddatetime\n    , upper(pr.dataareaid) as project_dataareaid\n    , pr.versionnumber\n    , pr.sysrowversion\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"projtable\" as pr\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as e on e.[OptionSetName] = 'status' and pr.status = e.[Option] and e.[EntityName] = 'projtable'\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"hcmworker\" as w on convert(varchar, pr.workerresponsible) = convert(varchar, w.recid) and w.[IsDelete] is null\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_party\" as pt on w.person = pt.party_recid and pt.[IsDelete] is null\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_projgroup\" as pg on pr.projgroupid = pg.projgroupid and upper(pr.dataareaid) = pg.projgroup_dataareaid and pg.[IsDelete] is null\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionvalueset\" as fd on pr.defaultdimension = fd.financialdimensionvalueset_recid\ncross apply dbo.f_convert_utc_to_nzt(pr.createddatetime) as prcreateddatetime\ncross apply dbo.f_convert_utc_to_nzt(pr.modifieddatetime) as prmodifieddatetime\n    where pr.sysrowversion > 157936168", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_project\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:25.671387Z", "completed_at": "2024-08-25T09:31:25.702276Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:25.703014Z", "completed_at": "2024-08-25T09:31:42.967903Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 17.312790632247925, "adapter_response": {"_message": "OK", "rows_affected": 9860}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_item", "compiled": true, "compiled_code": "\n\nwith seafood_item_excl as (\n    select distinct\n        itemid\n        , dataareaid\n        , versionnumber\n        , sysrowversion\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventtable\"\n    where\n        (\n            len(itemid) < 4 or itemid like '7%' or (itemid like '5%' and itemid not in ('50000835', '50000836', '50000837', '50000838', '50000839', '50000840', '50000841', '50000842', '50000843'))\n        )\n)\n\n, ctitem1 as (\n    select\n        i.[Id] as dim_d365_item_sk\n        , i.recid as item_recid\n        , i.itemid\n        , i.namealias\n        , pt.name as item_name\n        , i.itemtype\n        , enumit.[LocalizedLabel] as itemtype_desc\n        , igi.itemgroupid\n        , ig.name as itemgroup_name\n        , sdg.name as itemstoragedimensiongroupid\n        , sdg.description as itemstoragedimensiongroup_name\n        , tdg.name as itemtrackingdimensiongroupid\n        , tdg.description as itemtrackingdimensiongroup_name\n        /*\n            BATCH =         InventBatchId,  not InventSerialID      isPhysicalInventory\n            BATCHFI =       InventBatchId,  not InventSerialID      isFinancialInventory, isPhysicalInventory\n            SERIAL =        InventBatchId,  InventSerialID          isPhysicalInventory\n            SERIALFI =      InventBatchId,  InventSerialID          isFinancialInventory, isPhysicalInventory\n            SERIALBLANK =   InventBatchId,  InventSerialID\n            NONE =          not InventBatchId, not InventSerialID\n        */\n        , i.batchnumgroupid\n        , i.bomcalcgroupid\n        , i.commissiongroupid\n        , i.costgroupid\n        , i.itembuyergroupid\n        , i.itempricetolerancegroupid\n        , i.packaginggroupid\n        , i.pdsfreightallocationgroupid\n        , i.pdsitemrebategroupid\n        , i.prodgroupid\n        , i.reqgroupid as itemcoveragegroupid\n        , i.serialnumgroupid\n        , i.itmarrivalgroupid\n        , i.itmoverundertolerancegroupid\n        , i.itmcosttypegroupid\n        , i.itmcosttransfergroupid\n        , i.bomlevel\n        , i.bomunitid\n        , i.defaultdimension\n        , i.netweight\n        , i.productlifecyclestateid\n        , i.salesmodel\n        , i.dxc_speciescode as speciescode\n        , i.dxc_mpistate as mpistate\n        , i.dxc_mpistatecode as mpistatecode\n        , mpist.mserp_dxc_mpiitemdesc as mpistate_desc\n        , i.dxc_mpiunit as mpiunit\n        , i.dxc_appliedweight as appliedweight\n        , aw.[LocalizedLabel] as appliedweight_name\n        , aw.[LocalizedLabel] as appliedweight_label\n        , i.dxc_maximumweight as maximumweight\n        , i.dxc_storagecondition as storagecondition -- [appliedweight_name]\n        , isc.[LocalizedLabel] as storagecondition_name -- [enum_item_label]\n        , i.dxc_legacyitemcode as legacyitemcode\n        , i.dxc_labelformat as labelformat\n        , i.dxc_sizename as sizename\n        , i.dxc_licence as licence\n        , i.dxc_packagingcode as packagingcode\n        , i.dxc_packagingcode as packagingshortname\n        , i.dxc_primarypackagingtype as primarypackagingtype\n        , i.dxc_masterpackagingtype as masterpackagingtype\n        , i.dxc_processstatecode as processstatecode\n        , i.dxc_qualityname as qualityname\n        , i.dxc_batchattributegroupid as batchattributegroupid\n        , i.dxc_autopurchinvoiceconsitems as is_consignmentitemautopurchinvoice\n        , i.product\n        , enum.[LocalizedLabel] as producttype\n        , i.partition\n        , i.recversion\n        , i.modifiedon as lastprocessedchange_datetime\n        , ic.category_l_1 as planning_category_l_1\n        , ic.category_l_2 as planning_category_l_2\n        , ic.category_l_3 as planning_category_l_3\n        , ic.category_l_4 as planning_category_l_4\n        , ic.category_l_5 as planning_category_l_5\n        , ic.category_l_6 as planning_category_l_6\n        , ic.category_l_7 as planning_category_l_7\n        , ic.category_path as planning_category_path\n        , lcst.unitcost as latest_transit_unitcost\n        , ia.allocation\n        , ia.sales_allocation\n        , i.[IsDelete]\n        , upper(i.dataareaid) as item_dataareaid\n        , concat(i.itemid, ' - ', pt.name) as item_desc\n        , concat(fdv.d1_businessunitvalue, ' - ', fdv.d1_businessunit_name) as default_businessunit\n        /* dxc_qualityname is not a mandatory field, batchattributegroupid is a mandatory field as per process */\n        , case when invenbl.itemid is not null then 1 end as whsinventenabled\n        , case when lower(i.namealias) like 'fish bin%' and upper(igi.itemgroupid) = 'SUNDRY' then 1 else 0 end as is_bin\n        , concat(i.dxc_speciescode, i.dxc_processstatecode) as item_group_code\n        , case when seafood_item_excl.itemid is null then 'Yes' else 'No' end as seafooditem\n        , case\n            when i.dxc_qualityname in ('BAIT') and i.dxc_batchattributegroupid like '%CP%' then 'Bait - CP'\n            when i.dxc_qualityname in ('BAIT') and i.dxc_batchattributegroupid not like '%CP%' then 'Bait'\n            when i.dxc_qualityname in ('FISHMEAL', 'FFM') and i.dxc_batchattributegroupid like '%CP%' then 'Fish Meal - CP'\n            when i.dxc_qualityname in ('FISHMEAL', 'FFM') and i.dxc_batchattributegroupid not like '%CP%' then 'Fish Meal'\n            when (i.dxc_qualityname not in ('BAIT', 'FISHMEAL', 'FFM') or i.dxc_qualityname is null) and i.dxc_batchattributegroupid not like '%NHC' and i.dxc_batchattributegroupid like '%CP%' then 'Edible - CP'\n            when (i.dxc_qualityname not in ('BAIT', 'FISHMEAL', 'FFM') or i.dxc_qualityname is null) and i.dxc_batchattributegroupid not like '%NHC' and i.dxc_batchattributegroupid not like '%CP%' then 'Edible'\n            when (i.dxc_qualityname not in ('BAIT', 'FISHMEAL', 'FFM') or i.dxc_qualityname is null) and i.dxc_batchattributegroupid like '%NHC' and i.dxc_batchattributegroupid like '%CP%' then 'Indible - CP'\n            when (i.dxc_qualityname not in ('BAIT', 'FISHMEAL', 'FFM') or i.dxc_qualityname is null) and i.dxc_batchattributegroupid like '%NHC' and i.dxc_batchattributegroupid not like '%CP%' then 'Inedible'\n            else 'Others'\n        end as sales_type\n        , case when i.itemid like '10%' then '10s'\n            when i.itemid like '20%' then '20s'\n            when i.itemid like '30%' then '30s'\n            else\n                'Misc'\n        end as items_10s20s30s\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventtable\" as i\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresproduct\"\n            as p\n        on i.product = p.recid\n            and p.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresproducttranslation\"\n            as pt\n        on i.product = pt.recid\n            and pt.languageid = 'en-NZ'\n            and pt.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventitemgroupitem\"\n            as igi\n        on i.itemid = igi.itemid\n            and upper(i.dataareaid) = upper(igi.itemdataareaid)\n            and igi.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventitemgroup\"\n            as ig\n        on igi.itemgroupid = ig.itemgroupid\n            and upper(i.dataareaid) = upper(ig.dataareaid)\n            and ig.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresstoragedimensiongroupitem\"\n            as sdig\n        on i.itemid = sdig.itemid\n            and upper(i.dataareaid) = upper(sdig.itemdataareaid)\n            and sdig.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecoresstoragedimensiongroup\"\n            as sdg\n        on sdig.storagedimensiongroup = sdg.recid\n            and sdg.[IsDelete] is null\n\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecorestrackingdimensiongroupitem\"\n            as tdig\n        on i.itemid = tdig.itemid\n            and upper(i.dataareaid) = upper(tdig.itemdataareaid)\n            and tdig.[IsDelete] is null\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"ecorestrackingdimensiongroup\"\n            as tdg\n        on tdig.trackingdimensiongroup = tdg.recid\n            and tdg.[IsDelete] is null\n\n    left join\n        \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"whsinventenabled\"\n            as invenbl\n        on i.itemid = invenbl.itemid\n            and upper(invenbl.dataareaid) = upper(i.dataareaid)\n            and invenbl.[IsDelete] is null\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as enumit\n        on i.itemtype = enumit.[Option]\n            and enumit.[OptionSetName] = 'itemtype'\n            and enumit.[EntityName] = 'inventtable'\n\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as enum\n        on p.producttype = enum.[Option]\n            and enum.[OptionSetName] = 'producttype'\n            and enum.[EntityName] = 'ecoresproduct'\n\n    /* adding planning product categories against the dim as per commercial finance requirements */\n    left join\n        \"dwh_sanford\".\"dw\".\"dim_d365_itemcategory\"\n            as ic\n        on i.recid = ic.item_recid\n            and upper(i.dataareaid) = ic.itemcategory_dataareaid\n            and ic.item_category = 'Planning'\n\n    /* packaging code config disabling because multiple records for same code eg 'SAM FIL 10kg'\n    --left join { { s o u r ce('fno', 'dxc_packagingconfigurationtable') }} pck on i.dxc_packagingcode = pck.packagingcode and upper(i.dataareaid) = upper(pck.dataareaid)\n    --left join { { r e f ('stg_dim_d365_item_std_cost_1') }} icst on i.itemid = icst.itemid and upper(i.dataareaid)  = upper(icst.item_standardcost_dataareaid)\n    */\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as isc\n        on i.dxc_storagecondition = isc.[Option]\n            and isc.[OptionSetName] = 'dxc_storagecondition'\n            and isc.[EntityName] = 'inventtable'\n\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as aw\n        on i.dxc_appliedweight = aw.[Option]\n            and aw.[OptionSetName] = 'dxc_appliedweight'\n            and aw.[EntityName] = 'inventtable'\n\n    left join\n        \"dwh_sanford\".\"stage\".\"stg_dim_d365_item_allocation\"\n            as ia\n        on i.itemid = ia.itemid and ia.item_allocation_dataarea = upper(i.dataareaid)\n            and ia.allocation_rank_unique = 1 and ia.allocation_rank = 1\n\n    left join \"lh_d365fnodxc\".\"dbo\".\"dxc_statetable\" as mpist\n        on i.dxc_mpistate = mpist.mserp_dxc_mpistate and mpist.[IsDelete] is null\n            and upper(mpist.mserp_dataareaid) = upper(i.dataareaid)\n            and upper(mpist.mserp_dxc_statename) = upper(i.dxc_mpistatecode)\n\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionvalueset\" as fdv on i.defaultdimension = fdv.financialdimensionvalueset_recid\n\n    left join\n        \"dwh_sanford\".\"stage\".\"stg_fct_d365_inventitemprice_latest\"\n            as lcst\n        on i.itemid = lcst.itemid and upper(i.dataareaid) = lcst.inventitemprice_dataareaid\n            and lcst.inventsiteid = 'TRANSIT'\n\n    left join seafood_item_excl on i.itemid = seafood_item_excl.itemid and upper(i.dataareaid) = upper(seafood_item_excl.dataareaid)\n\n    where i.[IsDelete] is null\n\n)\n\nselect\n    dim_d365_item_sk\n    , item_recid\n    , item_dataareaid\n    , itemid\n    , namealias\n    , item_name\n    , item_desc\n    , itemtype\n    , itemtype_desc\n    , itemgroupid\n    , itemgroup_name\n    , itemstoragedimensiongroupid\n    , itemstoragedimensiongroup_name\n    , itemtrackingdimensiongroupid\n    , itemtrackingdimensiongroup_name\n    , batchnumgroupid\n    , bomcalcgroupid\n    , commissiongroupid\n    , costgroupid\n    , itembuyergroupid\n    , itempricetolerancegroupid\n    , packaginggroupid\n    , pdsfreightallocationgroupid\n    , pdsitemrebategroupid\n    , prodgroupid\n    , itemcoveragegroupid\n    , serialnumgroupid\n    , itmarrivalgroupid\n    , itmoverundertolerancegroupid\n    , itmcosttypegroupid\n    , itmcosttransfergroupid\n    , bomlevel\n    , bomunitid\n    , defaultdimension\n    , default_businessunit\n    , netweight\n    , productlifecyclestateid\n    , salesmodel\n    , speciescode\n    , mpistate\n    , mpistatecode\n    , mpistate_desc\n    , mpiunit\n    , appliedweight\n    , appliedweight_name\n    , appliedweight_label\n    , maximumweight\n    , storagecondition\n    , storagecondition_name\n    , legacyitemcode\n    , labelformat\n    , sizename\n    , licence\n    , packagingcode\n    , packagingshortname\n    , primarypackagingtype\n    , masterpackagingtype\n    , processstatecode\n    , qualityname\n    , batchattributegroupid\n    , is_consignmentitemautopurchinvoice\n    , product\n    , producttype\n    , whsinventenabled\n    , is_bin\n    , partition\n    , recversion\n    , lastprocessedchange_datetime\n    , planning_category_l_1\n    , planning_category_l_2\n    , planning_category_l_3\n    , planning_category_l_4\n    , planning_category_l_5\n    , planning_category_l_6\n    , planning_category_l_7\n    , planning_category_path\n    , item_group_code\n    , seafooditem\n    , items_10s20s30s\n    , latest_transit_unitcost\n    , allocation\n    , sales_allocation\n    , [IsDelete]\n    , case when sales_type in ('Bait - CP', 'Bait', 'Fish Meal - CP', 'Fish Meal') then 'No' else 'Yes' end as sales_target_item_flag\nfrom ctitem1\nunion all\nselect\n    dim_d365_item_sk\n    , item_recid\n    , item_dataareaid\n    , itemid\n    , namealias\n    , item_name\n    , item_desc\n    , itemtype\n    , itemtype_desc\n    , itemgroupid\n    , itemgroup_name\n    , itemstoragedimensiongroupid\n    , itemstoragedimensiongroup_name\n    , itemtrackingdimensiongroupid\n    , itemtrackingdimensiongroup_name\n    , batchnumgroupid\n    , bomcalcgroupid\n    , commissiongroupid\n    , costgroupid\n    , itembuyergroupid\n    , itempricetolerancegroupid\n    , packaginggroupid\n    , pdsfreightallocationgroupid\n    , pdsitemrebategroupid\n    , prodgroupid\n    , itemcoveragegroupid\n    , serialnumgroupid\n    , itmarrivalgroupid\n    , itmoverundertolerancegroupid\n    , itmcosttypegroupid\n    , itmcosttransfergroupid\n    , bomlevel\n    , bomunitid\n    , defaultdimension\n    , default_businessunit\n    , netweight\n    , productlifecyclestateid\n    , salesmodel\n    , speciescode\n    , mpistate\n    , mpistatecode\n    , mpistate_desc\n    , mpiunit\n    , appliedweight\n    , appliedweight_name\n    , appliedweight_label\n    , maximumweight\n    , storagecondition\n    , storagecondition_name\n    , legacyitemcode\n    , labelformat\n    , sizename\n    , licence\n    , packagingcode\n    , packagingshortname\n    , primarypackagingtype\n    , masterpackagingtype\n    , processstatecode\n    , qualityname\n    , batchattributegroupid\n    , is_consignmentitemautopurchinvoice\n    , product\n    , producttype\n    , whsinventenabled\n    , is_bin\n    , partition\n    , recversion\n    , lastprocessedchange_datetime\n    , planning_category_l_1\n    , planning_category_l_2\n    , planning_category_l_3\n    , planning_category_l_4\n    , planning_category_l_5\n    , planning_category_l_6\n    , planning_category_l_7\n    , planning_category_path\n    , item_group_code\n    , seafooditem\n    , items_10s20s30s\n    , latest_transit_unitcost\n    , allocation\n    , sales_allocation\n    , [IsDelete]\n    , sales_target_item_flag\nfrom \"dwh_sanford\".\"stage\".\"stg_nav_dummy_salesitem\"", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_item\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-8 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.d365.fct_d365_vendorinvoiceline", "compiled": false, "compiled_code": null, "relation_name": "\"dwh_sanford\".\"dw\".\"fct_d365_vendorinvoiceline\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:33.571893Z", "completed_at": "2024-08-25T09:31:34.798181Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:34.799184Z", "completed_at": "2024-08-25T09:31:44.917520Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 11.366802453994751, "adapter_response": {"_message": "OK", "rows_affected": 1}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_salesorder", "compiled": true, "compiled_code": "\n\nwith d365_sales as (\n    select\n        so.[Id] as dim_d365_salesorder_sk\n        , so.recid as salesorder_recid\n        , so.salesid\n        , so.currencycode\n        , so.custaccount\n        , so.custgroup\n        , so.customerref\n        , so.deliveryname\n        , so.deliverypostaladdress\n\n        , so.dlvmode as deliverymode\n        , d.txt as deliverymode_desc\n        , so.dlvterm\n        , so.email\n        , so.defaultdimension\n        , so.inventlocationid as warehouseid\n\n        , l.name as warehouse_name\n        , so.inventsiteid\n        , si.name as site_name\n\n        , so.invoiceaccount\n        , so.payment\n        , so.salesname\n\n        , so.salespoolid\n        , so.salesstatus as salesstatusid\n\n        , ests.[LocalizedLabel]\n            as salesstatus\n        , so.salestype as salestypeid\n\n        , est.[LocalizedLabel]\n            as salestype\n        , so.taxgroup\n\n        , so.url\n        , so.phone\n\n        , so.dxc_placeofdelivery as placeofdelivery\n        , so.dxc_deliveryzone\n            as deliveryzone\n        , e.[LocalizedLabel] as documentstatus\n        , wst.worker_name as employee_sales_taker\n        , wsr.worker_name\n            as employee_sales_responsible\n        , so.dxc_destinationlocationcode as destinationlocationcode\n        , prt.port_desc\n        , prt.country_code\n        , prt.country_isocode\n        , prt.country_name as port_country_name\n\n        , prt.continent\n        /*\n                        convert(date, case when convert(date, so.createddatetime) = '1900-01-01' then null else so.createddatetime end) createdate,\n                        */\n        , so.partition\n\n        -- 2023-07-12 table stg_dim_d365_salesorder_freightby_1 now has MODEs from LOADs and CARRIER SERVICE\n        -- as well as the Sale Order & Route MODEs\n\n        , so.[IsDelete]\n\n        , upper(so.dataareaid) as salesorder_dataareaid\n\n        , upper(\n            l.dataareaid\n        ) as warehouse_dataareaid\n        , upper(\n            si.dataareaid\n        ) as site_dataareaid\n        , convert(date, case when convert(date, so.deliverydate) = '1900-01-01' then null else so.deliverydate end) as deliverydate\n        , convert(date, case when convert(date, so.dxc_orderpackdate) = '1900-01-01' then null else so.dxc_orderpackdate end) as orderpackdate\n\n        /* reformatted for ease of reading...\n                                case\n                                when ctsu.rs_freight_by_ocean = 0 then\n                                case\n                                when ctsu.s_freight_by_ocean = 0 then\n                                case\n                                when so.dlvmode = 'TBC-EXPORT' then 1 else 0\n                                end\n                                else ctsu.s_freight_by_ocean\n                                end\n                                else ctsu.rs_freight_by_ocean\n                                end sea_freight,\n\n                                case\n                                when ctsu.rs_freight_by_air = 0 then\n                                case\n                                when ctsu.s_freight_by_air = 0 then 0\n                                else ctsu.s_freight_by_air\n                                end\n                                else ctsu.rs_freight_by_air\n                                end air_freight ,\n\n                                case\n                                when ctsu.rs_freight_by_tl = 0 then\n                                case\n                                when ctsu.s_freight_by_tl = 0 then 0\n                                else ctsu.s_freight_by_tl\n                                end\n                                else ctsu.rs_freight_by_tl\n                                end local_freight,\n                                */\n        , convert(date, case when convert(date, so.dxc_requestedfinaldestinationdate) = '1900-01-01' then null else so.dxc_requestedfinaldestinationdate end) as requestedfinaldestinationdate\n        , convert(date, case when convert(date, so.dxc_invoicedate) = '1900-01-01' then null else so.dxc_invoicedate end) as invoicedate\n        , convert(date, case\n            when convert(date, so.shippingdateconfirmed) != '1900-01-01' then convert(date, so.shippingdateconfirmed)\n            when convert(date, so.shippingdaterequested) != '1900-01-01' then convert(date, so.shippingdaterequested)\n        end) as shippingdate\n        , convert(\n            date, case when convert(date, so.dxc_requestedloadportdate) = '1900-01-01' then null else so.dxc_requestedloadportdate end\n        ) as requestedloadportdate\n        , convert(\n            date, case when so.createddatetime = '1900-01-01 00:00:00.000' then null else createdate.newzealandtime end\n        ) as createdate\n        , case\n            when ctsu.s_freight_by_ocean = 1 or ctsu.rs_freight_by_ocean = 1 or ctsu.l_freight_by_ocean = 1 or ctsu.cs_freight_by_ocean = 1 then 1\n            when so.dlvmode = 'TBC-EXPORT' then 1\n            else 0\n        end\n            as sea_freight\n\n        , case\n            when ctsu.s_freight_by_air = 1 or ctsu.rs_freight_by_air = 1 or ctsu.l_freight_by_air = 1 or ctsu.cs_freight_by_air = 1 then 1\n            when so.dlvmode = 'TBC-AIR' then 1\n            else 0\n        end\n            as air_freight\n        , case\n            when ctsu.s_freight_by_tl = 1 or ctsu.rs_freight_by_tl = 1 or ctsu.l_freight_by_tl = 1 or ctsu.cs_freight_by_tl = 1 then 1\n            else 0\n        /*case\n                                                when so.dlvmode = 'TL' then 1 else 0\n                                                end*/\n        end as local_freight\n        , so.versionnumber\n        , so.sysrowversion\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"salestable\" as so\n\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventlocation\" as l on so.inventlocationid = l.inventlocationid and upper(so.dataareaid) = upper(l.dataareaid) and so.[IsDelete] is null\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventsite\" as si on so.inventsiteid = si.siteid and upper(si.dataareaid) = upper(l.dataareaid) and so.[IsDelete] is null\n\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as est on lower(est.[OptionSetName]) = 'salestype' and so.salestype = est.[Option] and est.[EntityName] = 'salestable' and so.[IsDelete] is null\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as ests on lower(ests.[OptionSetName]) = 'salesstatus' and so.salesstatus = ests.[Option] and ests.[EntityName] = 'salestable' and so.[IsDelete] is null\n\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"dlvmode\" as d on so.dlvmode = d.code and upper(so.dataareaid) = upper(d.dataareaid) and d.[IsDelete] is null\n\n    left join \"dwh_sanford\".\"stage\".\"stg_d365_salesorder_freightby_1\" as ctsu on so.salesid = ctsu.salesid and upper(ctsu.dataareaid) = upper(so.dataareaid)\n\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_worker\" as wst on so.workersalestaker = wst.worker_recid\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_worker\" as wsr on so.workersalesresponsible = wsr.worker_recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"GlobalOptionsetMetadata\" as e on lower(e.[OptionSetName]) = 'documentstatus' and so.documentstatus = e.[Option] and est.[EntityName] = 'salestable'\n\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_port\" as prt on so.dxc_destinationlocationcode = prt.portid and prt.port_dataareaid = upper(so.dataareaid)\n    cross apply dbo.f_convert_utc_to_nzt(so.createddatetime) as createdate\n        where so.sysrowversion > 653367646\n\n)\n\n, lastld as (\n    select x.*\n    from (\n        select\n            dim_d365_load_sk\n            , load_dataareaid\n            , loadid\n            , salesid\n            , lastupdatedatetime_nzt\n            , custvendref\n            , eta_final_destination_date\n            , estimated_departure_feeder_poa\n            , estimated_departure_cedo\n            , rank() over (partition by load_dataareaid, salesid order by lastupdatedatetime_nzt desc, dim_d365_load_sk desc) as rnk\n        from \"dwh_sanford\".\"dw\".\"dim_d365_load\"\n        where salesid is not null\n    ) as x\n    where x.rnk = 1\n)\n\nselect\n    d365_sales.dim_d365_salesorder_sk\n    , d365_sales.salesorder_recid\n    , d365_sales.salesorder_dataareaid\n    , d365_sales.salesid\n    , d365_sales.currencycode\n    , d365_sales.custaccount\n    , d365_sales.custgroup\n    , d365_sales.customerref\n    , d365_sales.deliveryname\n    , d365_sales.deliverypostaladdress\n    , d365_sales.deliverymode\n    , d365_sales.deliverymode_desc\n    , d365_sales.dlvterm\n    , d365_sales.email\n    , d365_sales.defaultdimension\n    , d365_sales.warehouseid\n    , d365_sales.warehouse_name\n    , d365_sales.warehouse_dataareaid\n    , d365_sales.inventsiteid\n    , d365_sales.site_name\n    , d365_sales.site_dataareaid\n    , d365_sales.invoiceaccount\n    , d365_sales.payment\n    , d365_sales.salesname\n    , d365_sales.salespoolid\n    , d365_sales.salesstatusid\n    , d365_sales.salesstatus\n    , d365_sales.salestypeid\n    , d365_sales.salestype\n    , d365_sales.taxgroup\n    , d365_sales.url\n    , d365_sales.phone\n    , d365_sales.placeofdelivery\n    , d365_sales.deliverydate\n    , d365_sales.orderpackdate\n    , d365_sales.requestedfinaldestinationdate\n    , d365_sales.invoicedate\n    , d365_sales.shippingdate\n    , d365_sales.requestedloadportdate\n    , d365_sales.createdate\n    , d365_sales.deliveryzone\n    , d365_sales.sea_freight\n    , d365_sales.air_freight\n    , d365_sales.local_freight\n    , d365_sales.employee_sales_taker\n    , d365_sales.employee_sales_responsible\n    , lastld.custvendref as latest_load_custvendref\n    , lastld.eta_final_destination_date as latest_load_eta_final_destination_date\n    , lastld.estimated_departure_feeder_poa as latest_load_estimated_departure_feeder_poa\n    , lastld.estimated_departure_cedo as latest_load_estimated_departure_cedo\n    , d365_sales.documentstatus\n    , d365_sales.destinationlocationcode\n    , d365_sales.port_desc\n    , d365_sales.country_code\n    , d365_sales.country_isocode\n    , d365_sales.port_country_name\n    , d365_sales.continent\n    , d365_sales.partition\n    , d365_sales.[IsDelete]\n    , d365_sales.versionnumber\n    , d365_sales.sysrowversion\nfrom d365_sales\nleft join lastld\n    on d365_sales.salesorder_dataareaid = lastld.load_dataareaid\n        and d365_sales.salesid = lastld.salesid\n\n-- Add Dummy / NULL SalesOrder for historic NAV data\n\nunion all\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(-999999 as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as dim_d365_salesorder_sk\n    , -999999 as salesorder_recid\n    , 'SANF' as salesorder_dataareaid\n    , 'NAV00000' as salesid\n    , null as currencycode\n    , 'NAVUND00' as custaccount\n    , 'LOCAL' as custgroup\n    , null as customerref\n    , null as deliveryname\n    , null as deliverypostaladdress\n    , null as deliverymode\n    , null as deliverymode_desc\n    , null as dlvterm\n    , null as email\n    , null as defaultdimension\n    , null as warehouseid\n    , null as warehouse_name\n    , null as warehouse_dataareaid\n    , null as inventsiteid\n    , null as site_name\n    , null as site_dataareaid\n    , 'NAVUND00' as invoiceaccount\n    , null as payment\n    , null as salesname\n    , null as salespoolid\n    , 3 as salesstatusid\n    , 'INVOICED' as salesstatus\n    , 3 as salestypeid\n    , 'Sales order' as salestype\n    , null as taxgroup\n    , null as url\n    , null as phone\n    , null as placeofdelivery\n    , null as deliverydate\n    , null as orderpackdate\n    , null as requestedfinaldestinationdate\n    , null as invoicedate\n    , null as shippingdate\n    , null as requestedloadportdate\n    , null as createdate\n    , null as deliveryzone\n    , null as sea_freight\n    , null as air_freight\n    , null as local_freight\n    , null as employee_sales_taker\n    , null as employee_sales_responsible\n    , null as latest_load_custvendref\n    , null as latest_load_eta_final_destination_date\n    , null as latest_load_estimated_departure_feeder_poa\n    , null as latest_load_estimated_departure_cedo\n    , 'Invoice' as documentstatus\n    , null as destinationlocationcode\n    , null as port_desc\n    , null as country_code\n    , null as country_isocode\n    , null as port_country_name\n    , null as continent\n    , 5637144576 as partition\n    , null as [IsDelete]\n    , 0 as versionnumber\n    , 0 as sysrowversion", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_salesorder\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:44.960497Z", "completed_at": "2024-08-25T09:31:44.982958Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:44.987825Z", "completed_at": "2024-08-25T09:31:47.357381Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 2.414529800415039, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_fct_d365_itemposting_1", "compiled": true, "compiled_code": "with cte as (\n        select \n            ip.recid posting_recid,\n            f.dim_d365_financialdimensionaccount_sk,\n            m.dim_d365_mainaccount_sk,\n            en.dim_d365_enum_sk,\n            cat.dim_d365_category_sk,\n            ig.dim_d365_itemgroup_sk,\n            itm.dim_d365_item_sk,\n            upper(ip.dataareaid) dataareaid,\n\n            en.enum_item_name,\n            en.enumitemlabel,\n            ip.categoryrelation,\n            cat.category_name,\n            ig.itemgroupid,\n            itm.itemid\n        from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventposting\" ip\n        join \"dwh_sanford\".\"dw\".\"dim_d365_enum\" en on ip.inventaccounttype = en.enum_item_value\n            and upper(en.[OptionSetName]) = 'inventaccounttype'\n            and upper(en.[EntityName]) = 'inventposting'\n            and enum_item_value in (21)  /* 21 goes against the sales issue , thats the only one reqd for sales lines - others are not relevent and returns many to many records */\n\n        left join \"dwh_sanford\".\"dw\".\"dim_d365_itemgroup\" ig on ip.itemrelation = ig.itemgroupid and upper(ip.dataareaid) = upper(ig.itemgroup_dataareaid)\n        left join \"dwh_sanford\".\"dw\".\"dim_d365_item\" itm on ip.itemrelation  = itm.itemgroupid  and upper(ip.dataareaid) = upper(itm.item_dataareaid)\n        left join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionaccount\" f on ip.ledgerdimension = f.financialdimensionaccount_recid\n        left join \"dwh_sanford\".\"dw\".\"dim_d365_mainaccount\" m on f.mainaccount = m.mainaccount_recid\n        left join \"dwh_sanford\".\"dw\".\"dim_d365_category\" cat on ip.categoryrelation = cat.category_recid  \n)\nselect distinct \n        dim_d365_item_sk,\n        dim_d365_mainaccount_sk,\n        dataareaid \nfrom cte", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_fct_d365_itemposting_1\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:43.013406Z", "completed_at": "2024-08-25T09:31:44.027060Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:44.028061Z", "completed_at": "2024-08-25T09:31:48.932832Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.945698022842407, "adapter_response": {"_message": "OK", "rows_affected": 0}, "message": "OK", "failures": null, "unique_id": "model.d365.dim_d365_inventserial", "compiled": true, "compiled_code": "\n\nselect\n    sr.[Id] as dim_d365_inventserial_sk\n    , sr.recid as inventserial_recid\n    , sr.itemid\n    , i.speciescode\n    , i.processstatecode\n    , sr.dxc_netweight as netweight\n    , sr.dxc_grossweight\n        as grossweight\n    , sr.dxc_haultrawlid as haultrawlid\n    , sr.dxc_prodshift\n        as prodshift\n    , sr.partition\n    /* custom Antarctic Toothfish categories against the SR \\ whole fish being caught */\n    , sr.rfidtagid\n    , sr.[IsDelete]\n    , sr.versionnumber\n    , sr.sysrowversion\n    /* --count of 'pieces of fish' in a 'box' at the SN# level, Used in the detailed Transport Loadout Report and so will be needed for SC reports */\n    , upper(sr.inventserialid) as inventserialid\n    , case when convert(date, sr.proddate) = '1900-01-01' then null else convert(date, sr.proddate) end as proddate\n    , upper(sr.dataareaid) as inventserial_dataareaid\n    , case when i.speciescode in ('ATO', 'PTO')\n            then\n                case\n                    when sr.dxc_netweight >= 00 and sr.dxc_netweight < 02 then 'TOA 00-02 kg'\n                    when sr.dxc_netweight >= 02 and sr.dxc_netweight < 03 then 'TOA 02-03 kg'\n                    when sr.dxc_netweight >= 03 and sr.dxc_netweight < 04 then 'TOA 03-04 kg'\n                    when sr.dxc_netweight >= 04 and sr.dxc_netweight < 05 then 'TOA 04-05 kg'\n                    when sr.dxc_netweight >= 05 and sr.dxc_netweight < 06 then 'TOA 05-06 kg'\n                    when sr.dxc_netweight >= 06 and sr.dxc_netweight < 08 then 'TOA 06-08 kg'\n                    when sr.dxc_netweight >= 08 and sr.dxc_netweight < 10 then 'TOA 08-10 kg'\n                    when sr.dxc_netweight >= 10 and sr.dxc_netweight < 12 then 'TOA 10-12 kg'\n                    when sr.dxc_netweight >= 12 and sr.dxc_netweight < 15 then 'TOA 12-15 kg'\n                    when sr.dxc_netweight >= 15 and sr.dxc_netweight < 20 then 'TOA 15-20 kg'\n                    when sr.dxc_netweight >= 20 and sr.dxc_netweight < 30 then 'TOA 20-30 kg'\n                    when sr.dxc_netweight >= 30 and sr.dxc_netweight < 40 then 'TOA 30-40 kg'\n                    when sr.dxc_netweight >= 40 and sr.dxc_netweight < 50 then 'TOA 40-50 kg'\n                    when sr.dxc_netweight >= 50 and sr.dxc_netweight < 1000 then 'TOA 50+ kg'\n                end\n    end as serial_size\n    , upper(sr.dxc_tripid) as tripid\n    , case when i.speciescode in ('ATO', 'PTO') then 1 else sr.dxc_pieces end as pieces\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventserial\" as sr\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_item\" as i on sr.itemid = i.itemid and upper(sr.dataareaid) = i.item_dataareaid\n    where sr.sysrowversion > 514168423", "relation_name": "\"dwh_sanford\".\"dw\".\"dim_d365_inventserial\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:43.064821Z", "completed_at": "2024-08-25T09:31:43.100575Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:43.103080Z", "completed_at": "2024-08-25T09:31:50.972524Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 7.923816204071045, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_fct_d365_greenweightconversion", "compiled": true, "compiled_code": "/* This is NEW  VERSION OF LOGICS - 12 APR 2024 - CONCLUDED \n--  rule 1 - match species code + mpi state from + state to + site  --  - get conversion factor \n-- \trule 2 - match species code + mpi state from + state to (if site not present) \n-- \trule 3 - rule 3 if not gw record doesnt have site nor species code , match mpi state - get conversion factor \n--  rule 4 - for items falling outside of above rule  - then 0 \n--*** special rule : After applying all above rules, apply rule 5 overriding above rule if species code = 'MLT' then greenweight factor is 0\n*/\n\nwith itgw1 as (\n    /* \n        where the site, species and state match \n        these are special cases, do not exclude these items from other selection criteria\n    */\n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , st.dim_d365_site_sk\n        , st.siteid\n        , c.mserp_speciescode as speciescode \n        , c.mserp_statefrom as statefrom\n        , c.mserp_stateto as stateto\n        , convert(date, c.mserp_fromdate) as fromdate\n        , convert(date, c.mserp_todate) as todate  \n        , c.mserp_conversionfactor as conversionfactor \n        , upper(c.mserp_dataareaid) as dataareaid\n        , 1 as source\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_greenweightconversion\" c\n    join \"dwh_sanford\".\"dw\".\"dim_d365_item\" it on it.speciescode = c.mserp_speciescode \n        and it.processstatecode = c.mserp_statefrom \n        and upper(c.mserp_dataareaid) = it.item_dataareaid \n    join  \"dwh_sanford\".\"dw\".\"dim_d365_site\" st on c.mserp_inventsiteid = st.siteid and upper(c.mserp_dataareaid) = st.site_dataareaid    \n    where upper(c.mserp_dataareaid) = 'SANF'\n    )\n\n, itgw2 as (\n    /* \n        where the site is NULL, species and state match \n        exclude these cases from subsequent selection criteria\n    */\n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , null as dim_d365_site_sk\n        , null as siteid\n        , c.mserp_speciescode as speciescode\n        , c.mserp_statefrom as statefrom\n        , c.mserp_stateto as stateto\n        , convert(date, c.mserp_fromdate) fromdate\n        , convert(date, c.mserp_todate) todate  \n        , c.mserp_conversionfactor as conversionfactor \n        , upper(c.mserp_dataareaid) dataareaid\n        , 2 as source\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_greenweightconversion\" c\n    join \"dwh_sanford\".\"dw\".\"dim_d365_item\" it on it.speciescode = c.mserp_speciescode \n        and it.processstatecode = c.mserp_statefrom \n        and upper(c.mserp_dataareaid) = it.item_dataareaid \n    where upper(c.mserp_dataareaid) = 'SANF'\n        and c.mserp_inventsiteid is null\n    )  \n\n, itgw3 as (\n    /* \n        where the site is NULL, state match \n        excludes these cases from subsequent selection criteria\n    */\n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , null as dim_d365_site_sk\n        , null as siteid\n        , it.speciescode \n        , c.mserp_statefrom as statefrom\n        , c.mserp_stateto as stateto\n        , convert(date, c.mserp_fromdate) fromdate\n        , convert(date, c.mserp_todate) todate  \n        , c.mserp_conversionfactor \n        , upper(c.mserp_dataareaid) dataareaid\n        , 3 as source\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_greenweightconversion\" c\n    join \"dwh_sanford\".\"dw\".\"dim_d365_item\" it on it.processstatecode = c.mserp_statefrom \n        and upper(c.mserp_dataareaid) = it.item_dataareaid\n    left join itgw2 on it.dim_d365_item_sk = itgw2.dim_d365_item_sk\n    where upper(c.mserp_dataareaid) = 'SANF'\n        and c.mserp_inventsiteid is null\n        and c.mserp_speciescode is null\n        and itgw2.dim_d365_item_sk is null\n    )   \n\n, itgw4 as (\n    /* \n    rule 4 - for items falling outside of above ruleS  - then 0 \n    */\n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , null as dim_d365_site_sk\n        , null as siteid\n        , it.speciescode \n        , it.mpistatecode as statefrom\n        , null as stateto\n        , convert(date, '1900-01-01') fromdate\n        , convert(date, '1900-01-01') todate  \n        , 0 as conversionfactor \n        , it.item_dataareaid dataareaid\n        , 4 as source\n    from \"dwh_sanford\".\"dw\".\"dim_d365_item\" it\n    left join itgw2 on it.dim_d365_item_sk = itgw2.dim_d365_item_sk\n    left join itgw3 on it.dim_d365_item_sk = itgw3.dim_d365_item_sk\n    where it.item_dataareaid = 'SANF'\n        and left(it.itemid, 2) in ('10', '20', '30')\n        and itgw2.dim_d365_item_sk is null\n        and itgw3.dim_d365_item_sk is null\n    ) \n\n, cte_merge as (\n    select itgw1.* from itgw1\n    union all\n    select itgw2.* from itgw2\n    union all\n    select itgw3.* from itgw3\n    union all\n    select itgw4.* from itgw4\n\n    )\n\n, cte_final as (\nselect \n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast(co.dim_d365_company_sk as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(dim_d365_item_sk as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(dim_d365_site_sk as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(fromdate as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(todate as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n as fact_d365_greenweightconversion_sk\n    , co.dim_d365_company_sk\n    , dim_d365_item_sk\n    , dataareaid\n    , itemid\n    , dim_d365_site_sk\n    , speciescode\n    , statefrom\n    , stateto\n    , case when fromdate = '1900-01-01' then null else fromdate end fromdate\n    , case when todate = '1900-01-01' then null else todate end todate\n    /*, case when speciescode = 'MLT' then 0 else conversionfactor end conversionfactor\n    change requested 10/04/2024\n    */\n    , case \twhen left(itemid, 2) = '10' and conversionfactor > 1 then 1\n            when left(itemid, 2) = '20' and statefrom <> 'FLW' and conversionfactor > 1 then 1\n            when statefrom = 'BLD' then 1\n            when statefrom = 'HDS' then 0\n            when speciescode = 'MLT' then 0 \n\t\telse conversionfactor \n    end conversionfactor\n    , source\nfrom cte_merge\njoin \"dwh_sanford\".\"dw\".\"dim_d365_company\"  co on cte_merge.dataareaid = co.company_dataarea\n)\n\nselect *\nfrom cte_final\n\n/* This is OLD VERSION OF CODES \n--so we are concluding below rule sequence \\ steps to check conversion factor for the item\n--  rule 1 - match species code + mpi state + site  --  - get conversion factor  \n--  rule 2 if gw record doesnt have site then - rule 2 - match species code + mpi state  - - get conversion factor \n--  rule 3 if not gw record doesnt have site nor species code , match mpi state - get conversion factor \n--  rule 4 - for items falling outside of above rule , and if item name has gre in it , then conversion factor = 1\n\n*** RULE 5 : After applying all above rules, apply rule 5 overriding above rule\n             if species code = 'MLT' then greenweight factor is 0\n\n\nwith itgw1 as (\n\n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , st.dim_d365_site_sk\n        , st.siteid\n        , c.speciescode \n        , c.statefrom\n        , c.stateto\n        , convert(date, c.fromdate) fromdate\n        , convert(date, c.todate) todate  \n        , c.conversionfactor \n        , upper(c.dataareaid) dataareaid\n        , 1 as source\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_greenweightconversion\" c\n    join \"dwh_sanford\".\"dw\".\"dim_d365_item\" it on it.speciescode = c.speciescode \n        and it.processstatecode = c.statefrom \n        and upper(c.dataareaid) = it.item_dataareaid \n    join  \"dwh_sanford\".\"dw\".\"dim_d365_site\" st on c.inventsiteid = st.siteid and upper(c.dataareaid) = st.site_dataareaid    \n    where upper(c.dataareaid) = 'SANF'\n    )\n\n, itgw2 as (\n    \n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , null as dim_d365_site_sk\n        , null as siteid\n        , c.speciescode \n        , c.statefrom\n        , c.stateto\n        , convert(date, c.fromdate) fromdate\n        , convert(date, c.todate) todate  \n        , c.conversionfactor \n        , upper(c.dataareaid) dataareaid\n        , 2 as source\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_greenweightconversion\" c\n    join \"dwh_sanford\".\"dw\".\"dim_d365_item\" it on it.speciescode = c.speciescode \n        and it.processstatecode = c.statefrom \n        and upper(c.dataareaid) = it.item_dataareaid \n    where upper(c.dataareaid) = 'SANF'\n        and c.inventsiteid is null\n    )  \n\n, itgw3 as (\n\n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , null as dim_d365_site_sk\n        , null as siteid\n        , it.speciescode \n        , c.statefrom\n        , c.stateto\n        , convert(date, c.fromdate) fromdate\n        , convert(date, c.todate) todate  \n        , c.conversionfactor \n        , upper(c.dataareaid) dataareaid\n        , 3 as source\n    from \"lh_d365fnodxc\".\"dbo\".\"dxc_greenweightconversion\" c\n    join \"dwh_sanford\".\"dw\".\"dim_d365_item\" it on it.processstatecode = c.statefrom \n        and upper(c.dataareaid) = it.item_dataareaid\n    left join itgw2 on it.dim_d365_item_sk = itgw2.dim_d365_item_sk\n    where upper(c.dataareaid) = 'SANF'\n        and c.inventsiteid is null\n        and c.speciescode is null\n        and itgw2.dim_d365_item_sk is null\n    )   \n\n, itgw4 as (\n \n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , null as dim_d365_site_sk\n        , null as siteid\n        , it.speciescode \n        , 'GRE' as statefrom\n        , 'GRE' as stateto\n        , convert(date, '1900-01-01') fromdate\n        , convert(date, '1900-01-01') todate  \n        , 1 as conversionfactor \n        , it.item_dataareaid dataareaid\n        , 4 as source\n    from \"dwh_sanford\".\"dw\".\"dim_d365_item\" it\n    left join itgw2 on it.dim_d365_item_sk = itgw2.dim_d365_item_sk\n    left join itgw3 on it.dim_d365_item_sk = itgw3.dim_d365_item_sk\n    where it.item_dataareaid = 'SANF'\n        and left(it.itemid, 2) in ('10', '20', '30')\n        and (it.processstatecode = 'GRE' or it.itemid like '%GRE%')\n        and itgw2.dim_d365_item_sk is null\n        and itgw3.dim_d365_item_sk is null\n    ) \n\n, itgw5 as (\n    \n    select distinct\n        it.dim_d365_item_sk\n        , it.itemid\n        , null as dim_d365_site_sk\n        , null as siteid\n        , it.speciescode \n        , processstatecode as statefrom\n        , processstatecode as stateto\n        , convert(date, '1900-01-01') fromdate\n        , convert(date, '1900-01-01') todate  \n        , 1 as conversionfactor \n        , it.item_dataareaid dataareaid\n        , 5 as source\n    from \"dwh_sanford\".\"dw\".\"dim_d365_item\" it\n    left join itgw2 on it.dim_d365_item_sk = itgw2.dim_d365_item_sk\n    left join itgw3 on it.dim_d365_item_sk = itgw3.dim_d365_item_sk\n    left join itgw4 on it.dim_d365_item_sk = itgw4.dim_d365_item_sk\n    where it.item_dataareaid = 'SANF'\n        and left(it.itemid, 2) in ('10', '20', '30')\n        and itgw2.dim_d365_item_sk is null\n        and itgw3.dim_d365_item_sk is null\n        and itgw4.dim_d365_item_sk is null\n    )     \n\n, cte_merge as (\n    select itgw1.* from itgw1\n    union all\n    select itgw2.* from itgw2\n    union all\n    select itgw3.* from itgw3\n    union all\n    select itgw4.* from itgw4\n    union all\n    select itgw5.* from itgw5\n    )\n\n, cte_final as (\nselect \n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast(co.dim_d365_company_sk as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(dim_d365_item_sk as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(dim_d365_site_sk as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(fromdate as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(todate as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n as fact_d365_greenweightconversion_sk\n    , co.dim_d365_company_sk\n    , dim_d365_item_sk\n    , dataareaid\n    , itemid\n    , dim_d365_site_sk\n    , speciescode\n    , statefrom\n    , stateto\n    , case when fromdate = '1900-01-01' then null else fromdate end fromdate\n    , case when todate = '1900-01-01' then null else todate end todate\n  \n    , case \twhen speciescode = 'MLT' then 0 \n\t\t\twhen  speciescode = 'SAM' and statefrom = 'OFF' and stateto = 'GRE' then  0\n\t\t\twhen  speciescode = 'SAM' and statefrom = 'BEL' and stateto = 'GRE' then  0\n\t\t\twhen  speciescode = 'SAM' and statefrom = 'CMK' and stateto = 'GRE' then  2.86\n\t\t\twhen  speciescode = 'SAM' and statefrom = 'COL' and stateto = 'GRE' then  0\n\t\t\twhen  speciescode = 'SAM' and statefrom = 'FRA' and stateto = 'GRE' then  0\n\t\t\twhen  speciescode = 'SAM' and statefrom = 'PCS' and stateto = 'GRE' then  0\n\t\t\twhen  speciescode = 'SAM' and statefrom = 'HDS' and stateto = 'GRE' then  0\n\t\t\twhen  speciescode = 'SAM' and statefrom = 'HMK' and stateto = 'GRE' then  2.86\n\t\telse conversionfactor \n    end conversionfactor\n    , source\nfrom cte_merge\njoin \"dwh_sanford\".\"dw\".\"dim_d365_company\"  co on cte_merge.dataareaid = co.company_dataarea\n)\n\nselect *\nfrom cte_final\n\n*/", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_fct_d365_greenweightconversion\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:47.380157Z", "completed_at": "2024-08-25T09:31:47.399014Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:47.400940Z", "completed_at": "2024-08-25T09:31:52.300373Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 4.928140163421631, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.d365.stg_fct_d365_unitofmeasureconversion", "compiled": true, "compiled_code": "-- conversion table for units - use in salesorderline etc to get kg\n-- join to this table on upper(salesunit) as from_unit and KG as to_unit\n-- and this table dim_d365_item_sk is null or matches the sales line dim_d365_item_sk \n-- where rnk = 1.  This is so if there is an item match that record is used over a standard conversion\n-- e.g Item 30MSGHSH010 has a specifc conversion formula, and the std kg/lb formula, use the specific one\n\n/*\nexample use\n\nselect salesid, linenum \n    , sl.itemid\n    , currencycode\n    , round(costprice, 6) costprice\n    , round(lineamount,2) lineamount    -- in sales currency, total\n    , round(priceunit, 3) priceunit\n    , round(qtyordered, 3) qtyordered    -- in kg converted by D365 from salesqty \n    , round(salesprice, 2) salesprice\n    , round(salesqty, 3) salesqty\n    , salesunit\n------------------------------------------------------------------    \n    , coalesce(uom.conv_factor, uom2.conv_factor, 1) conv_factor\n\n    -- check qtyordered - only when salesqty != qtyordered\n    , case when salesqty != qtyordered then\n        round(salesqty * coalesce(uom.conv_factor, uom2.conv_factor, 1), 3) \n        else qtyordered end\n        as qty_chk\n------------------------------------------------------------------    \n    , round(remaininventfinancial, 3) remaininventfinancial\n    , round(remaininventphysical, 3) remaininventphysical\n\nfrom \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"salesline\" sl\nleft join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventtable\" i on sl.itemid = i.itemid\n    and upper(sl.dataareaid) = upper(i.dataareaid)\nleft join \"dwh_sanford\".\"dw\".\"dim_d365_item\" itm on i.itemid = itm.itemid \n    and upper(i.dataareaid) = itm.item_dataareaid\n------------------------------------------------------------------\n-- UoM by Item first \nleft join fct_d365_unitofmeasureconversion uom on \n    upper(sl.salesunit) = uom.from_unit\n    and uom.to_unit = 'KG'\n    and itm.dim_d365_item_sk = uom.dim_d365_item_sk\n-- If no Item specific UoM \nleft join fct_d365_unitofmeasureconversion uom2 on \n    upper(sl.salesunit) = uom2.from_unit\n    and uom2.to_unit = 'KG'\n    and uom2.dim_d365_item_sk is null\n    and uom.dim_d365_item_sk is null\n------------------------------------------------------------------\n\nwhere \n    upper(salesunit)  in ('LB')\n    and round(salesqty * coalesce(uom.conv_factor, uom2.conv_factor, 1), 3) != qtyordered\n\n*/\n\nwith conv as (\n    select \n        uomc.recid uomconversion_recid\n        , uom_from.symbol from_unit\n        , uom_to.symbol to_unit\n        , uomc.numerator\n        , uomc.denominator\n        , uomc.factor   /* this is numeric(32,16) */\n        /* must convert to num(32,16) to exactly match D365 calculations */\n        , cast((cast(uomc.numerator as decimal(32, 16)) / cast(uomc.denominator as decimal(32, 16))) * uomc.factor as decimal(32, 16)) as conv_factor\n        , itm.dim_d365_item_sk\n        , itm.itemid\n        , itm.item_dataareaid\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"unitofmeasureconversion\" uomc\n    join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"unitofmeasure\" uom_from on uomc.fromunitofmeasure = uom_from.recid\n    join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"unitofmeasure\" uom_to on uomc.tounitofmeasure = uom_to.recid\n    left join \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventtable\" i on uomc.product = i.product\n    left join \"dwh_sanford\".\"dw\".\"dim_d365_item\" itm on i.itemid = itm.itemid \n        and upper(i.dataareaid) = itm.item_dataareaid\n    where \n        uomc.IsDelete is null\n        and uom_from.IsDelete is null\n        and uom_to.IsDelete is null\n        /* only where item is valid */\n        and (coalesce(uomc.product, 0) = 0 or itm.dim_d365_item_sk is not null)\n)\n\n, conv2 as (\n    /* forward conversion */\n    select \n        \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(uomconversion_recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as fact_d365_uomconversion_sk \n        , upper(from_unit) from_unit\n        , upper(to_unit) to_unit\n        , conv_factor\n        , dim_d365_item_sk\n        , itemid\n        , item_dataareaid\n    from conv\n    /* reverse conversion */\n    union all\n    select \n        \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), coalesce(cast(uomconversion_recid * -1 as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_')), '')), 2))\n as fact_d365_uomconversion_sk\n        , upper(to_unit) from_unit\n        , upper(from_unit) to_unit\n        , cast(cast(1 as decimal(32, 16)) / conv_factor as decimal(32, 16)) as conv_factor -- the reverse_conv_factor\n        , dim_d365_item_sk\n        , itemid\n        , item_dataareaid\n    from conv f\n    /* where reverse not already exists */\n    where not exists (\n        select 1\n        from conv r\n        where upper(f.to_unit) = upper(r.from_unit)\n            and upper(f.from_unit) = upper(r.to_unit)\n            and (f.dim_d365_item_sk IS NULL AND r.dim_d365_item_sk IS NULL OR f.dim_d365_item_sk = r.dim_d365_item_sk)\n    )\n)\n\nselect fact_d365_uomconversion_sk \n    , from_unit\n    , to_unit\n    , conv_factor\n    , dim_d365_item_sk\n    , itemid\n    , item_dataareaid\n    , dense_rank() over(partition by from_unit, to_unit order by case when dim_d365_item_sk is not null then 1 else 2 end) as rnk\nfrom conv2", "relation_name": "\"dwh_sanford\".\"stage\".\"stg_fct_d365_unitofmeasureconversion\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-08-25T09:31:43.026367Z", "completed_at": "2024-08-25T09:31:43.050713Z"}, {"name": "execute", "started_at": "2024-08-25T09:31:43.054715Z", "completed_at": "2024-08-25T09:31:53.810856Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 10.807747840881348, "adapter_response": {}, "message": "Database Error in model fct_d365_itemposting_all (models\\03_gold\\facts\\fct_d365_itemposting_all.sql)\n  ('42S22', \"[42S22] [Microsoft][ODBC Driver 18 for SQL Server][SQL Server]Invalid column name 'exchangerate_recid'. (207) (SQLExecDirectW); [42S22] [Microsoft][ODBC Driver 18 for SQL Server][SQL Server]Invalid column name 'exchangerate_recid'. (207)\")\n  compiled Code at target\\run\\d365\\models\\03_gold\\facts\\fct_d365_itemposting_all.sql", "failures": null, "unique_id": "model.d365.fct_d365_itemposting_all", "compiled": true, "compiled_code": "\n\n/*\nItemCode:\n0   Table - ItemId\n1   Group - ItemGroupId\n2   All\n3   Category - Use EcoResCategory link\n\nselection order 0, 1, 3, 2\n\nCustVendCode:\n0   Table - Customer / Vendor AccountNum\n1   Group - CustGroupID / VendGroupId\n2   All\n\nselection order 0, 1, 2\n*/\n\nwith inventpostingmap as (\n    select distinct\n\n        ip.inventaccounttype\n        , en.enum_item_name as inventpostingtype\n        , en.enumitemlabel\n            as inventpostingname\n\n        , case\n            when ip.inventaccounttype in (\n                    19      /* Cost of units, delivered | SalesPackingSlip */\n                    , 20    /* Cost of goods sold, delivered | SalesPackingSlipOffsetAccount */\n                    , 21    /* Cost of units, invoiced | SalesIssue */\n                    , 22    /* Cost of goods sold, invoiced | SalesConsump */\n                    , 23    /* Sales order, revenue SalesRevenue */\n                ) then 'Sales order'\n\n            when ip.inventaccounttype in (\n                    0      /* Cost of purchased materials received | PurchPackingSlip */\n                    , 1    /* Purchase expenditure, un-invoiced | PurchPackingSlipOffsetAccount */\n                    , 2    /* Cost of purchased materials invoiced\t| PurchReceipt */\n                    , 3    /* Purchase expenditure for product | PurchConsump */\n                    , 33   /* Stock variation | PurchStockVariation */\n                    , 34   /* Purchase, accrual | PurchPackingSlipPurchaseOffset */\n                    , 62   /* Prepayment | PurchAdvance */\n                    , 63   /* Purchase expenditure for expense | PurchExpense */\n                    , 110   /* Landed cost goods in transit | PurchITMGIT */\n                ) then 'Purchase order'\n\n            when ip.inventaccounttype in (\n                    7      /* Inventory issue | InventIssue */\n                    , 8    /* Inventory expenditure, loss | InventLoss */\n                    , 9    /* Inventory receipt | InventReceipt */\n                    , 10   /* Inventory expenditure, profit\t| InventProfit */\n                    , 44   /* Inventory inter-unit payable | InventInterUnitPayable */\n                    , 45   /* Inventory inter-unit receivable | InventInterUnitReceivable */\n                ) then 'Inventory'\n\n            when ip.inventaccounttype in (\n                    11      /* Estimated cost of materials consumed\t| ProdPicklist */\n                    , 12    /* Estimated cost of materials consumed, WIP | ProdPicklistOffsetAccount */\n                    , 13    /* Estimated manufactured cost | ProdReportFinished */\n                    , 14    /* Estimated manufactured cost, WIP | ProdReportFinishedOffsetAccoun */\n                    , 15    /* Cost of materials consumed | ProdIssue */\n                    , 16    /* Cost of materials consumed, WIP | ProdIssueOffsetAccount */\n                    , 17    /* Manufactured cost | ProdReceipt */\n                    , 18    /* Manufactured cost, WIP | ProdReceiptOffsetAccount */\n                ) then 'Production'\n\n\n            when ip.inventaccounttype in (\n                    39      /* Physical purchase price variance | PurchStdCostPurchasePriceVaria */\n                    , 38    /* Inventory cost revaluation | InventStdCostRevaluation */\n                    , 46    /* Cost change variance | InventStdCostChangeVariance */\n                    , 47    /* Production lot size variance | ProdStdCostLotSizeVariance */\n                    , 41    /* Production price variance | ProdStdCostProductionVariance */\n                    , 48    /* Production quantity variance | ProdStdCostQuantityVariance */\n                    , 49    /* Production substitution variance | ProdStdCostSubstitutionVarianc */\n                    , 50    /* Rounding variance | InventStdCostRoundingVariance */\n                ) then 'Standard cost variance'\n\n        end as postinggroup\n        , upper(ip.dataareaid) as dataareaid\n        , ip.versionnumber\n        , ip.sysrowversion\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventposting\" as ip\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_enum\" as en on ip.inventaccounttype = en.enum_item_value and upper(en.enumname) = 'inventpostinginventaccounttype'\n    where upper(ip.dataareaid) in ('SANF', 'SANA')\n)\n\n, itemposting_item as (\n    /* ItemCode = 0 - direct link to Item */\n    select\n        ip.recid as posting_recid\n        , itm_itemcode.item_recid\n        , ip.inventaccounttype\n\n        , map.postinggroup\n        , map.inventpostingtype\n        , map.inventpostingname\n\n        , ip.categoryrelation\n        , ip.custvendcode\n        , ip.custvendrelation\n\n        , ip.itemcode\n        , ip.itemrelation\n        , itm_itemcode.itemid\n        , itm_itemcode.dim_d365_item_sk\n        , m.mainaccountid\n        , m.dim_d365_mainaccount_sk\n        , upper(ip.dataareaid) as dataareaid\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventposting\" as ip\n\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionaccount\" as f on ip.ledgerdimension = f.financialdimensionaccount_recid\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_mainaccount\" as m on f.mainaccount = m.mainaccount_recid\n\n    /* ItemCode = 0 - direct link to Item */\n    inner join\n        \"dwh_sanford\".\"dw\".\"dim_d365_item\"\n            as itm_itemcode\n        on ip.itemrelation = itm_itemcode.itemid\n            and upper(ip.dataareaid) = upper(itm_itemcode.item_dataareaid)\n\n    inner join\n        inventpostingmap\n            as map\n        on ip.inventaccounttype = map.inventaccounttype\n            and upper(ip.dataareaid) = map.dataareaid\n\n    where ip.itemcode = 0\n        and ip.costrelation is null /* do not include cost groups */\n        and upper(ip.dataareaid) in ('SANF', 'SANA')\n)\n\n, itemposting_group as (\n    /* ItemCode = 1 - Itemgroup link to Item */\n    select\n        ip.recid as posting_recid\n        , itm_itemgroup.item_recid\n        , ip.inventaccounttype\n\n        , map.postinggroup\n        , map.inventpostingtype\n        , map.inventpostingname\n\n        , ip.categoryrelation\n        , ip.custvendcode\n        , ip.custvendrelation\n\n        , ip.itemcode\n        , ip.itemrelation\n        , itm_itemgroup.itemid\n        , itm_itemgroup.dim_d365_item_sk\n        , m.mainaccountid\n        , m.dim_d365_mainaccount_sk\n        , upper(ip.dataareaid) as dataareaid\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventposting\" as ip\n\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionaccount\" as f on ip.ledgerdimension = f.financialdimensionaccount_recid\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_mainaccount\" as m on f.mainaccount = m.mainaccount_recid\n\n    /* ItemCode = 1 - Itemgroup link to Item */\n    inner join\n        \"dwh_sanford\".\"dw\".\"dim_d365_item\"\n            as itm_itemgroup\n        on ip.itemrelation = itm_itemgroup.itemgroupid\n            and upper(ip.dataareaid) = upper(itm_itemgroup.item_dataareaid)\n\n    inner join\n        inventpostingmap\n            as map\n        on ip.inventaccounttype = map.inventaccounttype\n            and upper(ip.dataareaid) = map.dataareaid\n\n    where ip.itemcode = 1\n        and ip.costrelation is null /* do not include cost groups */\n        and upper(ip.dataareaid) in ('SANF', 'SANA')\n)\n\n-- select * from itemposting_group;\n\n, itemposting_all as (\n    /* ItemCode = 2 - ALL Items  - this is the last level 'catch-all' */\n    select\n        ip.recid as posting_recid\n        , itm_all.item_recid\n        , ip.inventaccounttype\n\n        , map.postinggroup\n        , map.inventpostingtype\n        , map.inventpostingname\n\n        , ip.categoryrelation\n        , ip.custvendcode\n        , ip.custvendrelation\n\n        , ip.itemcode\n        , ip.itemrelation\n        , itm_all.itemid\n        , itm_all.dim_d365_item_sk\n        , m.mainaccountid\n        , m.dim_d365_mainaccount_sk\n        , upper(ip.dataareaid) as dataareaid\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventposting\" as ip\n\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionaccount\" as f on ip.ledgerdimension = f.financialdimensionaccount_recid\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_mainaccount\" as m on f.mainaccount = m.mainaccount_recid\n\n    /* ItemCode = 2 - ALL Items */\n    inner join\n        \"dwh_sanford\".\"dw\".\"dim_d365_item\"\n            as itm_all\n        on ip.itemrelation is null\n            and upper(ip.dataareaid) = upper(itm_all.item_dataareaid)\n\n    inner join\n        inventpostingmap\n            as map\n        on ip.inventaccounttype = map.inventaccounttype\n            and upper(ip.dataareaid) = map.dataareaid\n\n    where ip.itemcode = 2\n        and ip.costrelation is null /* do not include cost groups */\n        and upper(ip.dataareaid) in ('SANF', 'SANA')\n        and ip.[IsDelete] is null\n)\n\n, itemposting_cat as (\n    /* ItemCode = 3 - ItemCategory - PurchaseOrder only */\n    select\n        ip.recid as posting_recid\n        , itm_cat.item_recid\n        , ip.inventaccounttype\n\n        , map.postinggroup\n        , map.inventpostingtype\n        , map.inventpostingname\n\n        , ip.categoryrelation\n\n        , ip.custvendcode\n        , ip.custvendrelation\n\n        , ip.itemcode\n        , ip.itemrelation\n        , itm_cat.itemid\n        , itm_cat.dim_d365_item_sk\n        , m.mainaccountid\n        , m.dim_d365_mainaccount_sk\n        , upper(ip.dataareaid) as dataareaid\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventposting\" as ip\n\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionaccount\" as f on ip.ledgerdimension = f.financialdimensionaccount_recid\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_mainaccount\" as m on f.mainaccount = m.mainaccount_recid\n\n    /* ItemCode = 3 - Category */\n\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_itemcategory\" as cat on ip.categoryrelation = cat.category_recid\n\n    inner join\n        \"dwh_sanford\".\"dw\".\"dim_d365_item\"\n            as itm_cat\n        on cat.item_recid = itm_cat.item_recid\n            and upper(ip.dataareaid) = upper(itm_cat.item_dataareaid)\n\n    inner join\n        inventpostingmap\n            as map\n        on ip.inventaccounttype = map.inventaccounttype\n            and upper(ip.dataareaid) = map.dataareaid\n\n    where ip.itemcode = 3\n        and ip.costrelation is null /* do not include cost groups */\n        and upper(ip.dataareaid) in ('SANF', 'SANA')\n        and ip.[IsDelete] is null\n)\n\n/* categories for Non-items used in Purchase orders */\n, itemposting_cat_nonitem as (\n    /* ItemCode = 3 - ItemCategory - PurchaseOrder only */\n    select\n        ip.recid as posting_recid\n        , cat.category_recid as item_recid\n        , ip.inventaccounttype\n\n        , map.postinggroup\n        , map.inventpostingtype\n        , map.inventpostingname\n\n        , ip.categoryrelation\n\n        , ip.custvendcode\n        , ip.custvendrelation\n\n        , ip.itemcode\n        , ip.itemrelation\n        , null as itemid\n        , null as dim_d365_item_sk\n        , m.mainaccountid\n        , m.dim_d365_mainaccount_sk\n        , upper(ip.dataareaid) as dataareaid\n\n    from \"dataverse_sanfordsit_devpremsanpowerplatfstor_unqf87dd056b3bf4075bf970702376af\".\"dbo\".\"inventposting\" as ip\n\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_financialdimensionaccount\" as f on ip.ledgerdimension = f.financialdimensionaccount_recid\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_mainaccount\" as m on f.mainaccount = m.mainaccount_recid\n\n    /* ItemCode = 3 - Category */\n\n    inner join \"dwh_sanford\".\"dw\".\"dim_d365_category\" as cat on ip.categoryrelation = cat.category_recid\n\n    inner join\n        inventpostingmap\n            as map\n        on ip.inventaccounttype = map.inventaccounttype\n            and upper(ip.dataareaid) = map.dataareaid\n\n    where ip.itemcode = 3\n        and ip.costrelation is null /* do not include cost groups */\n        and upper(ip.dataareaid) in ('SANF', 'SANA')\n        and ip.[IsDelete] is null\n)\n\n/* unique records only */\n, itemposting as (\n    select *\n    from itemposting_item\n\n    union all\n\n    select g.*\n    from itemposting_group as g\n    left join\n        itemposting_item\n            as i\n        on g.inventaccounttype = i.inventaccounttype\n            and g.item_recid = i.item_recid\n            and i.custvendrelation is null\n    where i.item_recid is null\n\n    union all\n\n    select c.*\n    from itemposting_cat as c\n    left join\n        itemposting_item\n            as i\n        on c.inventaccounttype = i.inventaccounttype\n            and c.item_recid = i.item_recid\n            and i.custvendrelation is null\n    left join\n        itemposting_group\n            as g\n        on c.inventaccounttype = g.inventaccounttype\n            and c.item_recid = g.item_recid\n            and g.custvendrelation is null\n    where i.item_recid is null\n        and g.item_recid is null\n\n    union all\n\n    select a.*\n    from itemposting_all as a\n    left join\n        itemposting_item\n            as i\n        on a.inventaccounttype = i.inventaccounttype\n            and a.item_recid = i.item_recid\n            and i.custvendrelation is null\n    left join\n        itemposting_group\n            as g\n        on a.inventaccounttype = g.inventaccounttype\n            and a.item_recid = g.item_recid\n            and g.custvendrelation is null\n    left join\n        itemposting_cat\n            as c\n        on a.inventaccounttype = c.inventaccounttype\n            and a.item_recid = c.item_recid\n            and c.custvendrelation is null\n    where i.item_recid is null\n        and g.item_recid is null\n        and c.item_recid is null\n\n    union all\n\n    select *\n    from itemposting_cat_nonitem\n)\n\nselect\n    \n    lower(convert(varchar(50), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast(posting_recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(item_recid as VARCHAR(8000)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n as fact_itemposting_sk\n    , inventaccounttype\n    , postinggroup\n    , inventpostingtype\n    , inventpostingname\n    , categoryrelation\n    , custvendcode\n    , custvendrelation\n    , itemcode\n    , itemrelation\n    , itemid\n    , dim_d365_item_sk\n    , mainaccountid\n    , dim_d365_mainaccount_sk\n    , dataareaid as itemposting_dataareaid\nfrom itemposting", "relation_name": "\"dwh_sanford\".\"dw\".\"fct_d365_itemposting_all\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-7 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.d365.fct_d365_purchaseorderline", "compiled": false, "compiled_code": null, "relation_name": "\"dwh_sanford\".\"dw\".\"fct_d365_purchaseorderline\""}], "elapsed_time": 160.3815143108368, "args": {"partial_parse_file_diff": true, "quiet": false, "log_file_max_bytes": 10485760, "empty": false, "use_colors_file": true, "introspect": true, "write_json": true, "which": "run", "log_level_file": "debug", "vars": {}, "profiles_dir": "D:\\code\\sandbt\\dags\\fabric_d365", "log_format_file": "debug", "require_resource_names_without_spaces": false, "select": [], "indirect_selection": "eager", "use_colors": true, "show_resource_report": false, "require_explicit_package_overrides_for_builtin_materializations": true, "favor_state": false, "warn_error_options": {"include": [], "exclude": []}, "invocation_command": "dbt run", "printer_width": 80, "populate_cache": true, "log_format": "default", "strict_mode": false, "exclude": [], "log_path": "D:\\code\\sandbt\\dags\\fabric_d365\\logs", "version_check": true, "log_level": "info", "enable_legacy_logger": false, "send_anonymous_usage_stats": true, "static_parser": true, "defer": false, "macro_debugging": false, "project_dir": "D:\\code\\sandbt\\dags\\fabric_d365", "cache_selected_only": false, "source_freshness_run_project_hooks": false, "print": true, "partial_parse": true}}